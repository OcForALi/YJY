// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Model.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "Model.pbobjc.h"
 #import "CommonData.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - ModelRoot

@implementation ModelRoot

+ (GPBExtensionRegistry*)extensionRegistry {
  // This is called by +initialize so there is no need to worry
  // about thread safety and initialization of registry.
  static GPBExtensionRegistry* registry = nil;
  if (!registry) {
    GPBDebugCheckRuntimeVersion();
    registry = [[GPBExtensionRegistry alloc] init];
    [registry addExtensions:[CommonDataRoot extensionRegistry]];
  }
  return registry;
}

@end

#pragma mark - ModelRoot_FileDescriptor

static GPBFileDescriptor *ModelRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - ImageModel

@implementation ImageModel

@dynamic imageId;
@dynamic type;
@dynamic suffix;
@dynamic width;
@dynamic height;
@dynamic bgcolor;
@dynamic longitude;
@dynamic latitude;
@dynamic centerX;
@dynamic centerY;
@dynamic createTime;

typedef struct ImageModel__storage_ {
  uint32_t _has_storage_[1];
  uint32_t width;
  uint32_t height;
  uint32_t bgcolor;
  NSString *type;
  NSString *suffix;
  uint64_t imageId;
  double longitude;
  double latitude;
  double centerX;
  double centerY;
  uint64_t createTime;
} ImageModel__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imageId",
        .dataTypeSpecific.className = NULL,
        .number = ImageModel_FieldNumber_ImageId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ImageModel__storage_, imageId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = ImageModel_FieldNumber_Type,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ImageModel__storage_, type),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "suffix",
        .dataTypeSpecific.className = NULL,
        .number = ImageModel_FieldNumber_Suffix,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ImageModel__storage_, suffix),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "width",
        .dataTypeSpecific.className = NULL,
        .number = ImageModel_FieldNumber_Width,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ImageModel__storage_, width),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "height",
        .dataTypeSpecific.className = NULL,
        .number = ImageModel_FieldNumber_Height,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(ImageModel__storage_, height),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "bgcolor",
        .dataTypeSpecific.className = NULL,
        .number = ImageModel_FieldNumber_Bgcolor,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(ImageModel__storage_, bgcolor),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "longitude",
        .dataTypeSpecific.className = NULL,
        .number = ImageModel_FieldNumber_Longitude,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(ImageModel__storage_, longitude),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "latitude",
        .dataTypeSpecific.className = NULL,
        .number = ImageModel_FieldNumber_Latitude,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(ImageModel__storage_, latitude),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "centerX",
        .dataTypeSpecific.className = NULL,
        .number = ImageModel_FieldNumber_CenterX,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(ImageModel__storage_, centerX),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "centerY",
        .dataTypeSpecific.className = NULL,
        .number = ImageModel_FieldNumber_CenterY,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(ImageModel__storage_, centerY),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = ImageModel_FieldNumber_CreateTime,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(ImageModel__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ImageModel class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ImageModel__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\007\000\013\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UserModel

@implementation UserModel

@dynamic id_p;
@dynamic name;
@dynamic sex;
@dynamic nickName;
@dynamic birthday;
@dynamic phone;
@dynamic headImg;
@dynamic state;
@dynamic channelId;
@dynamic address;
@dynamic adcode;
@dynamic provinceId;
@dynamic cityId;
@dynamic province;
@dynamic city;
@dynamic county;
@dynamic building;
@dynamic lat;
@dynamic lng;
@dynamic rongCloudToken;
@dynamic remark;
@dynamic createTime;
@dynamic updateTime;
@dynamic lastTime;
@dynamic activeState;
@dynamic wxNo;
@dynamic qqNo;
@dynamic email;
@dynamic firstTime;
@dynamic diffno;
@dynamic realName;
@dynamic idcard;

typedef struct UserModel__storage_ {
  uint32_t _has_storage_[1];
  uint32_t sex;
  uint32_t state;
  uint32_t activeState;
  NSString *name;
  NSString *nickName;
  NSString *birthday;
  NSString *phone;
  NSString *headImg;
  NSString *channelId;
  NSString *address;
  NSString *province;
  NSString *city;
  NSString *county;
  NSString *building;
  NSString *rongCloudToken;
  NSString *remark;
  NSString *wxNo;
  NSString *qqNo;
  NSString *email;
  NSString *diffno;
  NSString *realName;
  NSString *idcard;
  uint64_t id_p;
  uint64_t adcode;
  uint64_t provinceId;
  uint64_t cityId;
  double lat;
  double lng;
  uint64_t createTime;
  uint64_t updateTime;
  uint64_t lastTime;
  uint64_t firstTime;
} UserModel__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UserModel__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UserModel__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sex",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_Sex,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UserModel__storage_, sex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "nickName",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_NickName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UserModel__storage_, nickName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "birthday",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_Birthday,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UserModel__storage_, birthday),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "phone",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_Phone,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UserModel__storage_, phone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "headImg",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_HeadImg,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UserModel__storage_, headImg),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "state",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_State,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UserModel__storage_, state),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "channelId",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_ChannelId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UserModel__storage_, channelId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "address",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_Address,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(UserModel__storage_, address),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "adcode",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_Adcode,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(UserModel__storage_, adcode),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "provinceId",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_ProvinceId,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(UserModel__storage_, provinceId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "cityId",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_CityId,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(UserModel__storage_, cityId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "province",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_Province,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(UserModel__storage_, province),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "city",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_City,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(UserModel__storage_, city),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "county",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_County,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(UserModel__storage_, county),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "building",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_Building,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(UserModel__storage_, building),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "lat",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_Lat,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(UserModel__storage_, lat),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "lng",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_Lng,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(UserModel__storage_, lng),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "rongCloudToken",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_RongCloudToken,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(UserModel__storage_, rongCloudToken),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "remark",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_Remark,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(UserModel__storage_, remark),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_CreateTime,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(UserModel__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "updateTime",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_UpdateTime,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(UserModel__storage_, updateTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "lastTime",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_LastTime,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(UserModel__storage_, lastTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "activeState",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_ActiveState,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(UserModel__storage_, activeState),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "wxNo",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_WxNo,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(UserModel__storage_, wxNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "qqNo",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_QqNo,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(UserModel__storage_, qqNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "email",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_Email,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(UserModel__storage_, email),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "firstTime",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_FirstTime,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(UserModel__storage_, firstTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "diffno",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_Diffno,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(UserModel__storage_, diffno),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "realName",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_RealName,
        .hasIndex = 30,
        .offset = (uint32_t)offsetof(UserModel__storage_, realName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idcard",
        .dataTypeSpecific.className = NULL,
        .number = UserModel_FieldNumber_Idcard,
        .hasIndex = 31,
        .offset = (uint32_t)offsetof(UserModel__storage_, idcard),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserModel class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UserModel__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\016\004\010\000\007\007\000\t\t\000\014\n\000\r\006\000\024\016\000\026\n\000\027\n\000\030\010\000\031\013\000\032\004\000\033\004\000\035\t\000"
        "\037\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - WXMsgInfo

@implementation WXMsgInfo

@dynamic cmdId;
@dynamic keyword;
@dynamic msg;
@dynamic createTime;
@dynamic editor;
@dynamic msgType;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic updateTime;
@dynamic updateStaffId;
@dynamic updateStaffName;

typedef struct WXMsgInfo__storage_ {
  uint32_t _has_storage_[1];
  uint32_t cmdId;
  uint32_t msgType;
  NSString *keyword;
  NSString *msg;
  NSString *editor;
  NSString *createStaffName;
  NSString *updateStaffName;
  uint64_t createTime;
  uint64_t createStaffId;
  uint64_t updateTime;
  uint64_t updateStaffId;
} WXMsgInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "cmdId",
        .dataTypeSpecific.className = NULL,
        .number = WXMsgInfo_FieldNumber_CmdId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(WXMsgInfo__storage_, cmdId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "keyword",
        .dataTypeSpecific.className = NULL,
        .number = WXMsgInfo_FieldNumber_Keyword,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(WXMsgInfo__storage_, keyword),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msg",
        .dataTypeSpecific.className = NULL,
        .number = WXMsgInfo_FieldNumber_Msg,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(WXMsgInfo__storage_, msg),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = WXMsgInfo_FieldNumber_CreateTime,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(WXMsgInfo__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "editor",
        .dataTypeSpecific.className = NULL,
        .number = WXMsgInfo_FieldNumber_Editor,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(WXMsgInfo__storage_, editor),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgType",
        .dataTypeSpecific.className = NULL,
        .number = WXMsgInfo_FieldNumber_MsgType,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(WXMsgInfo__storage_, msgType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = WXMsgInfo_FieldNumber_CreateStaffId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(WXMsgInfo__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = WXMsgInfo_FieldNumber_CreateStaffName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(WXMsgInfo__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "updateTime",
        .dataTypeSpecific.className = NULL,
        .number = WXMsgInfo_FieldNumber_UpdateTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(WXMsgInfo__storage_, updateTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "updateStaffId",
        .dataTypeSpecific.className = NULL,
        .number = WXMsgInfo_FieldNumber_UpdateStaffId,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(WXMsgInfo__storage_, updateStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "updateStaffName",
        .dataTypeSpecific.className = NULL,
        .number = WXMsgInfo_FieldNumber_UpdateStaffName,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(WXMsgInfo__storage_, updateStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[WXMsgInfo class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(WXMsgInfo__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\001\005\000\004\n\000\006\007\000\007\r\000\010\017\000\t\n\000\n\r\000\013\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - WXMenuInfo

@implementation WXMenuInfo

@dynamic menuId;
@dynamic parentId;
@dynamic menuName;
@dynamic menuType;
@dynamic menuURL;
@dynamic menuMsg;
@dynamic createTime;
@dynamic editor;
@dynamic subMenusArray, subMenusArray_Count;
@dynamic state;

typedef struct WXMenuInfo__storage_ {
  uint32_t _has_storage_[1];
  uint32_t menuType;
  uint32_t state;
  NSString *menuName;
  NSString *menuURL;
  NSString *menuMsg;
  NSString *editor;
  NSMutableArray *subMenusArray;
  uint64_t menuId;
  uint64_t parentId;
  uint64_t createTime;
} WXMenuInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "menuId",
        .dataTypeSpecific.className = NULL,
        .number = WXMenuInfo_FieldNumber_MenuId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(WXMenuInfo__storage_, menuId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "parentId",
        .dataTypeSpecific.className = NULL,
        .number = WXMenuInfo_FieldNumber_ParentId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(WXMenuInfo__storage_, parentId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "menuName",
        .dataTypeSpecific.className = NULL,
        .number = WXMenuInfo_FieldNumber_MenuName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(WXMenuInfo__storage_, menuName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "menuType",
        .dataTypeSpecific.className = NULL,
        .number = WXMenuInfo_FieldNumber_MenuType,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(WXMenuInfo__storage_, menuType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "menuURL",
        .dataTypeSpecific.className = NULL,
        .number = WXMenuInfo_FieldNumber_MenuURL,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(WXMenuInfo__storage_, menuURL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "menuMsg",
        .dataTypeSpecific.className = NULL,
        .number = WXMenuInfo_FieldNumber_MenuMsg,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(WXMenuInfo__storage_, menuMsg),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = WXMenuInfo_FieldNumber_CreateTime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(WXMenuInfo__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "editor",
        .dataTypeSpecific.className = NULL,
        .number = WXMenuInfo_FieldNumber_Editor,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(WXMenuInfo__storage_, editor),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "subMenusArray",
        .dataTypeSpecific.className = GPBStringifySymbol(WXMenuInfo),
        .number = WXMenuInfo_FieldNumber_SubMenusArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(WXMenuInfo__storage_, subMenusArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "state",
        .dataTypeSpecific.className = NULL,
        .number = WXMenuInfo_FieldNumber_State,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(WXMenuInfo__storage_, state),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[WXMenuInfo class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(WXMenuInfo__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\001\006\000\002\010\000\003\010\000\004\010\000\006\005!!\000\007\007\000\010\n\000\n\000subMenus\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - WXMPUserInfo

@implementation WXMPUserInfo

@dynamic openId;
@dynamic unionid;
@dynamic userId;
@dynamic actType;
@dynamic channelId;
@dynamic createTime;

typedef struct WXMPUserInfo__storage_ {
  uint32_t _has_storage_[1];
  uint32_t actType;
  uint32_t channelId;
  NSString *openId;
  NSString *unionid;
  uint64_t userId;
  uint64_t createTime;
} WXMPUserInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "openId",
        .dataTypeSpecific.className = NULL,
        .number = WXMPUserInfo_FieldNumber_OpenId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(WXMPUserInfo__storage_, openId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "unionid",
        .dataTypeSpecific.className = NULL,
        .number = WXMPUserInfo_FieldNumber_Unionid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(WXMPUserInfo__storage_, unionid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = WXMPUserInfo_FieldNumber_UserId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(WXMPUserInfo__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "actType",
        .dataTypeSpecific.className = NULL,
        .number = WXMPUserInfo_FieldNumber_ActType,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(WXMPUserInfo__storage_, actType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "channelId",
        .dataTypeSpecific.className = NULL,
        .number = WXMPUserInfo_FieldNumber_ChannelId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(WXMPUserInfo__storage_, channelId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = WXMPUserInfo_FieldNumber_CreateTime,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(WXMPUserInfo__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[WXMPUserInfo class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(WXMPUserInfo__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001\006\000\003\006\000\004\007\000\005\t\000\006\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - WXUser

@implementation WXUser

@dynamic userId;
@dynamic thirdType;
@dynamic wxAppId;
@dynamic openId;
@dynamic unionid;
@dynamic accessKey;
@dynamic refreshKey;
@dynamic expiresTime;
@dynamic nickName;
@dynamic headImg;
@dynamic sex;
@dynamic createTime;
@dynamic channelId;

typedef struct WXUser__storage_ {
  uint32_t _has_storage_[1];
  int32_t thirdType;
  uint32_t sex;
  NSString *wxAppId;
  NSString *openId;
  NSString *unionid;
  NSString *accessKey;
  NSString *refreshKey;
  NSString *nickName;
  NSString *headImg;
  NSString *channelId;
  uint64_t userId;
  uint64_t expiresTime;
  uint64_t createTime;
} WXUser__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = WXUser_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(WXUser__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "thirdType",
        .dataTypeSpecific.className = NULL,
        .number = WXUser_FieldNumber_ThirdType,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(WXUser__storage_, thirdType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeSInt32,
      },
      {
        .name = "wxAppId",
        .dataTypeSpecific.className = NULL,
        .number = WXUser_FieldNumber_WxAppId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(WXUser__storage_, wxAppId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "openId",
        .dataTypeSpecific.className = NULL,
        .number = WXUser_FieldNumber_OpenId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(WXUser__storage_, openId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "unionid",
        .dataTypeSpecific.className = NULL,
        .number = WXUser_FieldNumber_Unionid,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(WXUser__storage_, unionid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "accessKey",
        .dataTypeSpecific.className = NULL,
        .number = WXUser_FieldNumber_AccessKey,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(WXUser__storage_, accessKey),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "refreshKey",
        .dataTypeSpecific.className = NULL,
        .number = WXUser_FieldNumber_RefreshKey,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(WXUser__storage_, refreshKey),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expiresTime",
        .dataTypeSpecific.className = NULL,
        .number = WXUser_FieldNumber_ExpiresTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(WXUser__storage_, expiresTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "nickName",
        .dataTypeSpecific.className = NULL,
        .number = WXUser_FieldNumber_NickName,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(WXUser__storage_, nickName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "headImg",
        .dataTypeSpecific.className = NULL,
        .number = WXUser_FieldNumber_HeadImg,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(WXUser__storage_, headImg),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sex",
        .dataTypeSpecific.className = NULL,
        .number = WXUser_FieldNumber_Sex,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(WXUser__storage_, sex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = WXUser_FieldNumber_CreateTime,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(WXUser__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "channelId",
        .dataTypeSpecific.className = NULL,
        .number = WXUser_FieldNumber_ChannelId,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(WXUser__storage_, channelId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[WXUser class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(WXUser__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\013\001\006\000\002\t\000\003\007\000\004\006\000\006\t\000\007\n\000\010\013\000\t\010\000\n\007\000\014\n\000\r\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - BannerModel

@implementation BannerModel

@dynamic id_p;
@dynamic name;
@dynamic bannerType;
@dynamic URL;
@dynamic imgURL;
@dynamic desc;
@dynamic startDate;
@dynamic endDate;
@dynamic editor;
@dynamic createTime;
@dynamic imgId;
@dynamic sort;

typedef struct BannerModel__storage_ {
  uint32_t _has_storage_[1];
  uint32_t id_p;
  uint32_t bannerType;
  uint32_t sort;
  NSString *name;
  NSString *URL;
  NSString *imgURL;
  NSString *desc;
  NSString *editor;
  NSString *imgId;
  uint64_t startDate;
  uint64_t endDate;
  uint64_t createTime;
} BannerModel__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = BannerModel_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(BannerModel__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = BannerModel_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(BannerModel__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bannerType",
        .dataTypeSpecific.className = NULL,
        .number = BannerModel_FieldNumber_BannerType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(BannerModel__storage_, bannerType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "URL",
        .dataTypeSpecific.className = NULL,
        .number = BannerModel_FieldNumber_URL,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(BannerModel__storage_, URL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "imgURL",
        .dataTypeSpecific.className = NULL,
        .number = BannerModel_FieldNumber_ImgURL,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(BannerModel__storage_, imgURL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "desc",
        .dataTypeSpecific.className = NULL,
        .number = BannerModel_FieldNumber_Desc,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(BannerModel__storage_, desc),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "startDate",
        .dataTypeSpecific.className = NULL,
        .number = BannerModel_FieldNumber_StartDate,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(BannerModel__storage_, startDate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "endDate",
        .dataTypeSpecific.className = NULL,
        .number = BannerModel_FieldNumber_EndDate,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(BannerModel__storage_, endDate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "editor",
        .dataTypeSpecific.className = NULL,
        .number = BannerModel_FieldNumber_Editor,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(BannerModel__storage_, editor),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = BannerModel_FieldNumber_CreateTime,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(BannerModel__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "imgId",
        .dataTypeSpecific.className = NULL,
        .number = BannerModel_FieldNumber_ImgId,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(BannerModel__storage_, imgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sort",
        .dataTypeSpecific.className = NULL,
        .number = BannerModel_FieldNumber_Sort,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(BannerModel__storage_, sort),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[BannerModel class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(BannerModel__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\003\n\000\004!!!\000\005\004!!\000\007\t\000\010\007\000\014\n\000\r\005\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SplashScreenModel

@implementation SplashScreenModel

@dynamic id_p;
@dynamic name;
@dynamic duration;
@dynamic type;
@dynamic URL;
@dynamic imgURL;
@dynamic desc;
@dynamic startDate;
@dynamic endDate;
@dynamic editor;
@dynamic createTime;
@dynamic imgId;

typedef struct SplashScreenModel__storage_ {
  uint32_t _has_storage_[1];
  uint32_t id_p;
  uint32_t duration;
  uint32_t type;
  NSString *name;
  NSString *URL;
  NSString *imgURL;
  NSString *desc;
  NSString *editor;
  NSString *imgId;
  uint64_t startDate;
  uint64_t endDate;
  uint64_t createTime;
} SplashScreenModel__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = SplashScreenModel_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SplashScreenModel__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = SplashScreenModel_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(SplashScreenModel__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "duration",
        .dataTypeSpecific.className = NULL,
        .number = SplashScreenModel_FieldNumber_Duration,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(SplashScreenModel__storage_, duration),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = SplashScreenModel_FieldNumber_Type,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(SplashScreenModel__storage_, type),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "URL",
        .dataTypeSpecific.className = NULL,
        .number = SplashScreenModel_FieldNumber_URL,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(SplashScreenModel__storage_, URL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "imgURL",
        .dataTypeSpecific.className = NULL,
        .number = SplashScreenModel_FieldNumber_ImgURL,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(SplashScreenModel__storage_, imgURL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "desc",
        .dataTypeSpecific.className = NULL,
        .number = SplashScreenModel_FieldNumber_Desc,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(SplashScreenModel__storage_, desc),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "startDate",
        .dataTypeSpecific.className = NULL,
        .number = SplashScreenModel_FieldNumber_StartDate,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(SplashScreenModel__storage_, startDate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "endDate",
        .dataTypeSpecific.className = NULL,
        .number = SplashScreenModel_FieldNumber_EndDate,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(SplashScreenModel__storage_, endDate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "editor",
        .dataTypeSpecific.className = NULL,
        .number = SplashScreenModel_FieldNumber_Editor,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(SplashScreenModel__storage_, editor),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = SplashScreenModel_FieldNumber_CreateTime,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(SplashScreenModel__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "imgId",
        .dataTypeSpecific.className = NULL,
        .number = SplashScreenModel_FieldNumber_ImgId,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(SplashScreenModel__storage_, imgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SplashScreenModel class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SplashScreenModel__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\005!!!\000\006\004!!\000\010\t\000\t\007\000\014\n\000\r\005\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - AppVersion

@implementation AppVersion

@dynamic id_p;
@dynamic name;
@dynamic version;
@dynamic type;
@dynamic platform;
@dynamic sourceLink;
@dynamic remindLevel;
@dynamic publishTime;
@dynamic remindTime;
@dynamic enabled;

typedef struct AppVersion__storage_ {
  uint32_t _has_storage_[1];
  uint32_t id_p;
  uint32_t version;
  uint32_t type;
  uint32_t platform;
  uint32_t remindLevel;
  uint32_t enabled;
  NSString *name;
  NSString *sourceLink;
  uint64_t publishTime;
  uint64_t remindTime;
} AppVersion__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = AppVersion_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AppVersion__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = AppVersion_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AppVersion__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "version",
        .dataTypeSpecific.className = NULL,
        .number = AppVersion_FieldNumber_Version,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AppVersion__storage_, version),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = AppVersion_FieldNumber_Type,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(AppVersion__storage_, type),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "platform",
        .dataTypeSpecific.className = NULL,
        .number = AppVersion_FieldNumber_Platform,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(AppVersion__storage_, platform),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "sourceLink",
        .dataTypeSpecific.className = NULL,
        .number = AppVersion_FieldNumber_SourceLink,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(AppVersion__storage_, sourceLink),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "remindLevel",
        .dataTypeSpecific.className = NULL,
        .number = AppVersion_FieldNumber_RemindLevel,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(AppVersion__storage_, remindLevel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "publishTime",
        .dataTypeSpecific.className = NULL,
        .number = AppVersion_FieldNumber_PublishTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(AppVersion__storage_, publishTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "remindTime",
        .dataTypeSpecific.className = NULL,
        .number = AppVersion_FieldNumber_RemindTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(AppVersion__storage_, remindTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "enabled",
        .dataTypeSpecific.className = NULL,
        .number = AppVersion_FieldNumber_Enabled,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(AppVersion__storage_, enabled),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AppVersion class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AppVersion__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\006\n\000\007\013\000\010\013\000\t\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - CouponTemplate

@implementation CouponTemplate

@dynamic id_p;
@dynamic couponCode;
@dynamic couponName;
@dynamic couponType;
@dynamic fee;
@dynamic couponDesc;
@dynamic periodType;
@dynamic startDate;
@dynamic endDate;
@dynamic validDays;
@dynamic scence;
@dynamic serviceTypesArray, serviceTypesArray_Count;
@dynamic orgIdsArray, orgIdsArray_Count;
@dynamic branchIdsArray, branchIdsArray_Count;
@dynamic weekday;
@dynamic weekend;
@dynamic holiday;
@dynamic getMaxNum;
@dynamic sendMaxNum;
@dynamic companyId;
@dynamic companyName;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic createTime;

typedef struct CouponTemplate__storage_ {
  uint32_t _has_storage_[1];
  uint32_t couponType;
  uint32_t fee;
  uint32_t periodType;
  uint32_t validDays;
  uint32_t scence;
  uint32_t weekday;
  uint32_t weekend;
  uint32_t holiday;
  uint32_t getMaxNum;
  uint32_t sendMaxNum;
  NSString *couponCode;
  NSString *couponName;
  NSString *couponDesc;
  NSString *startDate;
  NSString *endDate;
  GPBUInt32Array *serviceTypesArray;
  GPBUInt64Array *orgIdsArray;
  GPBUInt64Array *branchIdsArray;
  NSString *companyName;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t companyId;
  uint64_t createStaffId;
  uint64_t createTime;
} CouponTemplate__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "couponCode",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_CouponCode,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, couponCode),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "couponName",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_CouponName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, couponName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "couponType",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_CouponType,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, couponType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "fee",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_Fee,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, fee),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "couponDesc",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_CouponDesc,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, couponDesc),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "periodType",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_PeriodType,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, periodType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "startDate",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_StartDate,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, startDate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "endDate",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_EndDate,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, endDate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "validDays",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_ValidDays,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, validDays),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "scence",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_Scence,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, scence),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "serviceTypesArray",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_ServiceTypesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, serviceTypesArray),
        .flags = GPBFieldRepeated | GPBFieldPacked | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "orgIdsArray",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_OrgIdsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, orgIdsArray),
        .flags = GPBFieldRepeated | GPBFieldPacked | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "branchIdsArray",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_BranchIdsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, branchIdsArray),
        .flags = GPBFieldRepeated | GPBFieldPacked | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "weekday",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_Weekday,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, weekday),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "weekend",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_Weekend,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, weekend),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "holiday",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_Holiday,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, holiday),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "getMaxNum",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_GetMaxNum,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, getMaxNum),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "sendMaxNum",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_SendMaxNum,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, sendMaxNum),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_CompanyId,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "companyName",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_CompanyName,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, companyName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_CreateStaffId,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_CreateStaffName,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = CouponTemplate_FieldNumber_CreateTime,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(CouponTemplate__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CouponTemplate class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CouponTemplate__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\022\002\n\000\003\n\000\004\n\000\006\n\000\007\n\000\010\t\000\t\007\000\n\t\000\014\000serviceTypes\000"
        "\r\000orgIds\000\016\000branchIds\000\022\t\000\023\n\000\024\t\000\025\013\000\026\r\000\027\017\000\030"
        "\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UserCoupon

@implementation UserCoupon

@dynamic id_p;
@dynamic templateId;
@dynamic userId;
@dynamic startDate;
@dynamic endDate;
@dynamic createTime;
@dynamic useTime;
@dynamic sendCompanyId;
@dynamic sendStaffId;
@dynamic useOrgId;
@dynamic useBranchId;
@dynamic status;
@dynamic channelId;

typedef struct UserCoupon__storage_ {
  uint32_t _has_storage_[1];
  uint32_t status;
  NSString *startDate;
  NSString *endDate;
  NSString *channelId;
  uint64_t id_p;
  uint64_t templateId;
  uint64_t userId;
  uint64_t createTime;
  uint64_t useTime;
  uint64_t sendCompanyId;
  uint64_t sendStaffId;
  uint64_t useOrgId;
  uint64_t useBranchId;
} UserCoupon__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = UserCoupon_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UserCoupon__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "templateId",
        .dataTypeSpecific.className = NULL,
        .number = UserCoupon_FieldNumber_TemplateId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UserCoupon__storage_, templateId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UserCoupon_FieldNumber_UserId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UserCoupon__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "startDate",
        .dataTypeSpecific.className = NULL,
        .number = UserCoupon_FieldNumber_StartDate,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UserCoupon__storage_, startDate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "endDate",
        .dataTypeSpecific.className = NULL,
        .number = UserCoupon_FieldNumber_EndDate,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UserCoupon__storage_, endDate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = UserCoupon_FieldNumber_CreateTime,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UserCoupon__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "useTime",
        .dataTypeSpecific.className = NULL,
        .number = UserCoupon_FieldNumber_UseTime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UserCoupon__storage_, useTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "sendCompanyId",
        .dataTypeSpecific.className = NULL,
        .number = UserCoupon_FieldNumber_SendCompanyId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UserCoupon__storage_, sendCompanyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "sendStaffId",
        .dataTypeSpecific.className = NULL,
        .number = UserCoupon_FieldNumber_SendStaffId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UserCoupon__storage_, sendStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "useOrgId",
        .dataTypeSpecific.className = NULL,
        .number = UserCoupon_FieldNumber_UseOrgId,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(UserCoupon__storage_, useOrgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "useBranchId",
        .dataTypeSpecific.className = NULL,
        .number = UserCoupon_FieldNumber_UseBranchId,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(UserCoupon__storage_, useBranchId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = UserCoupon_FieldNumber_Status,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(UserCoupon__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "channelId",
        .dataTypeSpecific.className = NULL,
        .number = UserCoupon_FieldNumber_ChannelId,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(UserCoupon__storage_, channelId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserCoupon class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UserCoupon__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\013\002\n\000\003\006\000\004\t\000\005\007\000\006\n\000\007\007\000\010\r\000\t\013\000\n\010\000\013\013\000\r\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UserJGModel

@implementation UserJGModel

@dynamic jpushId;
@dynamic jgAppId;
@dynamic userId;
@dynamic hgId;
@dynamic createTime;
@dynamic deviceType;
@dynamic pushType;

typedef struct UserJGModel__storage_ {
  uint32_t _has_storage_[1];
  uint32_t jgAppId;
  uint32_t deviceType;
  uint32_t pushType;
  NSString *jpushId;
  uint64_t userId;
  uint64_t hgId;
  uint64_t createTime;
} UserJGModel__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "jpushId",
        .dataTypeSpecific.className = NULL,
        .number = UserJGModel_FieldNumber_JpushId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UserJGModel__storage_, jpushId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "jgAppId",
        .dataTypeSpecific.className = NULL,
        .number = UserJGModel_FieldNumber_JgAppId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UserJGModel__storage_, jgAppId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UserJGModel_FieldNumber_UserId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UserJGModel__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "hgId",
        .dataTypeSpecific.className = NULL,
        .number = UserJGModel_FieldNumber_HgId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UserJGModel__storage_, hgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = UserJGModel_FieldNumber_CreateTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UserJGModel__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "deviceType",
        .dataTypeSpecific.className = NULL,
        .number = UserJGModel_FieldNumber_DeviceType,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UserJGModel__storage_, deviceType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "pushType",
        .dataTypeSpecific.className = NULL,
        .number = UserJGModel_FieldNumber_PushType,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UserJGModel__storage_, pushType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserJGModel class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UserJGModel__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\001\007\000\002\007\000\003\006\000\004\004\000\005\n\000\006\n\000\007\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - RechargeSetting

@implementation RechargeSetting

@dynamic id_p;
@dynamic name;
@dynamic fee;
@dynamic present;
@dynamic createTime;
@dynamic feeStr;
@dynamic presentStr;

typedef struct RechargeSetting__storage_ {
  uint32_t _has_storage_[1];
  uint32_t id_p;
  uint32_t fee;
  uint32_t present;
  NSString *name;
  NSString *feeStr;
  NSString *presentStr;
  uint64_t createTime;
} RechargeSetting__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = RechargeSetting_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(RechargeSetting__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = RechargeSetting_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(RechargeSetting__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fee",
        .dataTypeSpecific.className = NULL,
        .number = RechargeSetting_FieldNumber_Fee,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(RechargeSetting__storage_, fee),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "present",
        .dataTypeSpecific.className = NULL,
        .number = RechargeSetting_FieldNumber_Present,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(RechargeSetting__storage_, present),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = RechargeSetting_FieldNumber_CreateTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(RechargeSetting__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "feeStr",
        .dataTypeSpecific.className = NULL,
        .number = RechargeSetting_FieldNumber_FeeStr,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(RechargeSetting__storage_, feeStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "presentStr",
        .dataTypeSpecific.className = NULL,
        .number = RechargeSetting_FieldNumber_PresentStr,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(RechargeSetting__storage_, presentStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[RechargeSetting class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(RechargeSetting__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\005\n\000\006\006\000\007\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - FeedBack

@implementation FeedBack

@dynamic id_p;
@dynamic userId;
@dynamic suggest;
@dynamic createChannel;
@dynamic createTime;
@dynamic reply;
@dynamic state;
@dynamic replyStaffId;
@dynamic replyStaffName;
@dynamic fbType;
@dynamic userName;
@dynamic phone;
@dynamic replyTime;
@dynamic feedbackType;
@dynamic orgId;

typedef struct FeedBack__storage_ {
  uint32_t _has_storage_[1];
  uint32_t state;
  uint32_t fbType;
  uint32_t feedbackType;
  NSString *suggest;
  NSString *createChannel;
  NSString *createTime;
  NSString *reply;
  NSString *replyStaffName;
  NSString *userName;
  NSString *phone;
  NSString *replyTime;
  uint64_t id_p;
  uint64_t userId;
  uint64_t replyStaffId;
  uint64_t orgId;
} FeedBack__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = FeedBack_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(FeedBack__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = FeedBack_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(FeedBack__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "suggest",
        .dataTypeSpecific.className = NULL,
        .number = FeedBack_FieldNumber_Suggest,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(FeedBack__storage_, suggest),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createChannel",
        .dataTypeSpecific.className = NULL,
        .number = FeedBack_FieldNumber_CreateChannel,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(FeedBack__storage_, createChannel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = FeedBack_FieldNumber_CreateTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(FeedBack__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "reply",
        .dataTypeSpecific.className = NULL,
        .number = FeedBack_FieldNumber_Reply,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(FeedBack__storage_, reply),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "state",
        .dataTypeSpecific.className = NULL,
        .number = FeedBack_FieldNumber_State,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(FeedBack__storage_, state),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "replyStaffId",
        .dataTypeSpecific.className = NULL,
        .number = FeedBack_FieldNumber_ReplyStaffId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(FeedBack__storage_, replyStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "replyStaffName",
        .dataTypeSpecific.className = NULL,
        .number = FeedBack_FieldNumber_ReplyStaffName,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(FeedBack__storage_, replyStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fbType",
        .dataTypeSpecific.className = NULL,
        .number = FeedBack_FieldNumber_FbType,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(FeedBack__storage_, fbType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "userName",
        .dataTypeSpecific.className = NULL,
        .number = FeedBack_FieldNumber_UserName,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(FeedBack__storage_, userName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "phone",
        .dataTypeSpecific.className = NULL,
        .number = FeedBack_FieldNumber_Phone,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(FeedBack__storage_, phone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "replyTime",
        .dataTypeSpecific.className = NULL,
        .number = FeedBack_FieldNumber_ReplyTime,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(FeedBack__storage_, replyTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "feedbackType",
        .dataTypeSpecific.className = NULL,
        .number = FeedBack_FieldNumber_FeedbackType,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(FeedBack__storage_, feedbackType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "orgId",
        .dataTypeSpecific.className = NULL,
        .number = FeedBack_FieldNumber_OrgId,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(FeedBack__storage_, orgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[FeedBack class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(FeedBack__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\n\002\006\000\004\r\000\005\n\000\010\014\000\t\016\000\n\006\000\013\010\000\r\t\000\016\014\000\017\005\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Language

@implementation Language

@dynamic id_p;
@dynamic name;

typedef struct Language__storage_ {
  uint32_t _has_storage_[1];
  uint32_t id_p;
  NSString *name;
} Language__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = Language_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(Language__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = Language_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(Language__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[Language class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(Language__storage_)
                                         flags:0];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Information

@implementation Information

@dynamic id_p;
@dynamic imgURL;
@dynamic title;
@dynamic sketch;
@dynamic createTime;
@dynamic description_p;
@dynamic status;
@dynamic URL;

typedef struct Information__storage_ {
  uint32_t _has_storage_[1];
  uint32_t id_p;
  uint32_t status;
  NSString *imgURL;
  NSString *title;
  NSString *sketch;
  NSString *description_p;
  NSString *URL;
  uint64_t createTime;
} Information__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = Information_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(Information__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "imgURL",
        .dataTypeSpecific.className = NULL,
        .number = Information_FieldNumber_ImgURL,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(Information__storage_, imgURL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "title",
        .dataTypeSpecific.className = NULL,
        .number = Information_FieldNumber_Title,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(Information__storage_, title),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sketch",
        .dataTypeSpecific.className = NULL,
        .number = Information_FieldNumber_Sketch,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(Information__storage_, sketch),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = Information_FieldNumber_CreateTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(Information__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "description_p",
        .dataTypeSpecific.className = NULL,
        .number = Information_FieldNumber_Description_p,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(Information__storage_, description_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = Information_FieldNumber_Status,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(Information__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "URL",
        .dataTypeSpecific.className = NULL,
        .number = Information_FieldNumber_URL,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(Information__storage_, URL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[Information class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(Information__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\002\004!!\000\005\n\000\010!!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - HospitalBra

@implementation HospitalBra

@dynamic name;
@dynamic sex;
@dynamic age;
@dynamic phone;
@dynamic branchName;
@dynamic orgName;
@dynamic orgNo;
@dynamic admissionDate;
@dynamic orgId;
@dynamic branchId;
@dynamic kinsId;
@dynamic imgId;
@dynamic bedNo;
@dynamic inStatus;

typedef struct HospitalBra__storage_ {
  uint32_t _has_storage_[1];
  uint32_t sex;
  uint32_t age;
  uint32_t inStatus;
  NSString *name;
  NSString *phone;
  NSString *branchName;
  NSString *orgName;
  NSString *orgNo;
  NSString *admissionDate;
  NSString *imgId;
  NSString *bedNo;
  uint64_t orgId;
  uint64_t branchId;
  uint64_t kinsId;
} HospitalBra__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = HospitalBra_FieldNumber_Name,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(HospitalBra__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sex",
        .dataTypeSpecific.className = NULL,
        .number = HospitalBra_FieldNumber_Sex,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(HospitalBra__storage_, sex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "age",
        .dataTypeSpecific.className = NULL,
        .number = HospitalBra_FieldNumber_Age,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(HospitalBra__storage_, age),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "phone",
        .dataTypeSpecific.className = NULL,
        .number = HospitalBra_FieldNumber_Phone,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(HospitalBra__storage_, phone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "branchName",
        .dataTypeSpecific.className = NULL,
        .number = HospitalBra_FieldNumber_BranchName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(HospitalBra__storage_, branchName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "orgName",
        .dataTypeSpecific.className = NULL,
        .number = HospitalBra_FieldNumber_OrgName,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(HospitalBra__storage_, orgName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "orgNo",
        .dataTypeSpecific.className = NULL,
        .number = HospitalBra_FieldNumber_OrgNo,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(HospitalBra__storage_, orgNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "admissionDate",
        .dataTypeSpecific.className = NULL,
        .number = HospitalBra_FieldNumber_AdmissionDate,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(HospitalBra__storage_, admissionDate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "orgId",
        .dataTypeSpecific.className = NULL,
        .number = HospitalBra_FieldNumber_OrgId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(HospitalBra__storage_, orgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "branchId",
        .dataTypeSpecific.className = NULL,
        .number = HospitalBra_FieldNumber_BranchId,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(HospitalBra__storage_, branchId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "kinsId",
        .dataTypeSpecific.className = NULL,
        .number = HospitalBra_FieldNumber_KinsId,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(HospitalBra__storage_, kinsId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "imgId",
        .dataTypeSpecific.className = NULL,
        .number = HospitalBra_FieldNumber_ImgId,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(HospitalBra__storage_, imgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bedNo",
        .dataTypeSpecific.className = NULL,
        .number = HospitalBra_FieldNumber_BedNo,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(HospitalBra__storage_, bedNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "inStatus",
        .dataTypeSpecific.className = NULL,
        .number = HospitalBra_FieldNumber_InStatus,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(HospitalBra__storage_, inStatus),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[HospitalBra class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(HospitalBra__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\n\005\n\000\006\007\000\007\004A\000\010\r\000\t\005\000\n\010\000\013\006\000\014\005\000\r\004A\000\016\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - WxKeywordReply

@implementation WxKeywordReply

@dynamic toUserName;
@dynamic fromUserName;
@dynamic createTime;
@dynamic msgType;
@dynamic content;
@dynamic msgId;

typedef struct WxKeywordReply__storage_ {
  uint32_t _has_storage_[1];
  NSString *toUserName;
  NSString *fromUserName;
  NSString *msgType;
  NSString *content;
  NSString *msgId;
  uint64_t createTime;
} WxKeywordReply__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "toUserName",
        .dataTypeSpecific.className = NULL,
        .number = WxKeywordReply_FieldNumber_ToUserName,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(WxKeywordReply__storage_, toUserName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fromUserName",
        .dataTypeSpecific.className = NULL,
        .number = WxKeywordReply_FieldNumber_FromUserName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(WxKeywordReply__storage_, fromUserName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = WxKeywordReply_FieldNumber_CreateTime,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(WxKeywordReply__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "msgType",
        .dataTypeSpecific.className = NULL,
        .number = WxKeywordReply_FieldNumber_MsgType,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(WxKeywordReply__storage_, msgType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = WxKeywordReply_FieldNumber_Content,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(WxKeywordReply__storage_, content),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgId",
        .dataTypeSpecific.className = NULL,
        .number = WxKeywordReply_FieldNumber_MsgId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(WxKeywordReply__storage_, msgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[WxKeywordReply class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(WxKeywordReply__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001J\000\002L\000\003J\000\004G\000\005G\000\006E\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - WorkbenchVO

@implementation WorkbenchVO

@dynamic num;
@dynamic desc;
@dynamic nativeURL;

typedef struct WorkbenchVO__storage_ {
  uint32_t _has_storage_[1];
  NSString *num;
  NSString *desc;
  NSString *nativeURL;
} WorkbenchVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "num",
        .dataTypeSpecific.className = NULL,
        .number = WorkbenchVO_FieldNumber_Num,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(WorkbenchVO__storage_, num),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "desc",
        .dataTypeSpecific.className = NULL,
        .number = WorkbenchVO_FieldNumber_Desc,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(WorkbenchVO__storage_, desc),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nativeURL",
        .dataTypeSpecific.className = NULL,
        .number = WorkbenchVO_FieldNumber_NativeURL,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(WorkbenchVO__storage_, nativeURL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[WorkbenchVO class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(WorkbenchVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003\007!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - CommonToolsVO

@implementation CommonToolsVO

@dynamic iconURL;
@dynamic desc;
@dynamic nativeURL;

typedef struct CommonToolsVO__storage_ {
  uint32_t _has_storage_[1];
  NSString *iconURL;
  NSString *desc;
  NSString *nativeURL;
} CommonToolsVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "iconURL",
        .dataTypeSpecific.className = NULL,
        .number = CommonToolsVO_FieldNumber_IconURL,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CommonToolsVO__storage_, iconURL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "desc",
        .dataTypeSpecific.className = NULL,
        .number = CommonToolsVO_FieldNumber_Desc,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CommonToolsVO__storage_, desc),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nativeURL",
        .dataTypeSpecific.className = NULL,
        .number = CommonToolsVO_FieldNumber_NativeURL,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(CommonToolsVO__storage_, nativeURL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CommonToolsVO class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CommonToolsVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\005!!\000\003\007!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MyScheduleVO

@implementation MyScheduleVO

@dynamic orderId;
@dynamic insureNo;
@dynamic serviceItem;
@dynamic serviceType;
@dynamic kinsName;
@dynamic condition;
@dynamic conditionStr;
@dynamic dayNum;
@dynamic addrDetail;
@dynamic contactPhone;
@dynamic startDate;

typedef struct MyScheduleVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t serviceType;
  uint32_t condition;
  uint32_t dayNum;
  NSString *orderId;
  NSString *insureNo;
  NSString *serviceItem;
  NSString *kinsName;
  NSString *conditionStr;
  NSString *addrDetail;
  NSString *contactPhone;
  NSString *startDate;
} MyScheduleVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "orderId",
        .dataTypeSpecific.className = NULL,
        .number = MyScheduleVO_FieldNumber_OrderId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MyScheduleVO__storage_, orderId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "insureNo",
        .dataTypeSpecific.className = NULL,
        .number = MyScheduleVO_FieldNumber_InsureNo,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(MyScheduleVO__storage_, insureNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serviceItem",
        .dataTypeSpecific.className = NULL,
        .number = MyScheduleVO_FieldNumber_ServiceItem,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(MyScheduleVO__storage_, serviceItem),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serviceType",
        .dataTypeSpecific.className = NULL,
        .number = MyScheduleVO_FieldNumber_ServiceType,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(MyScheduleVO__storage_, serviceType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "kinsName",
        .dataTypeSpecific.className = NULL,
        .number = MyScheduleVO_FieldNumber_KinsName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(MyScheduleVO__storage_, kinsName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "condition",
        .dataTypeSpecific.className = NULL,
        .number = MyScheduleVO_FieldNumber_Condition,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(MyScheduleVO__storage_, condition),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "conditionStr",
        .dataTypeSpecific.className = NULL,
        .number = MyScheduleVO_FieldNumber_ConditionStr,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(MyScheduleVO__storage_, conditionStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "dayNum",
        .dataTypeSpecific.className = NULL,
        .number = MyScheduleVO_FieldNumber_DayNum,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(MyScheduleVO__storage_, dayNum),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "addrDetail",
        .dataTypeSpecific.className = NULL,
        .number = MyScheduleVO_FieldNumber_AddrDetail,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(MyScheduleVO__storage_, addrDetail),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contactPhone",
        .dataTypeSpecific.className = NULL,
        .number = MyScheduleVO_FieldNumber_ContactPhone,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(MyScheduleVO__storage_, contactPhone),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "startDate",
        .dataTypeSpecific.className = NULL,
        .number = MyScheduleVO_FieldNumber_StartDate,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(MyScheduleVO__storage_, startDate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MyScheduleVO class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MyScheduleVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\n\001\007\000\002\007A\000\003\013\000\004\013\000\005\010\000\007\014\000\010\006\000\t\n\000\n\014\000\013\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - BalanceData

@implementation BalanceData

@dynamic id_p;
@dynamic companyId;
@dynamic orgId;
@dynamic orderId;
@dynamic invoiceNo;
@dynamic transType;
@dynamic paykindCode;
@dynamic totCost;
@dynamic ownCost;
@dynamic beginDate;
@dynamic endDate;
@dynamic balanceType;
@dynamic balanceOpercode;
@dynamic wasteOpercode;
@dynamic wasteDate;
@dynamic createTime;

typedef struct BalanceData__storage_ {
  uint32_t _has_storage_[1];
  uint32_t transType;
  NSString *orderId;
  NSString *invoiceNo;
  NSString *paykindCode;
  NSString *totCost;
  NSString *ownCost;
  NSString *balanceType;
  NSString *balanceOpercode;
  NSString *wasteOpercode;
  NSString *wasteDate;
  uint64_t id_p;
  uint64_t companyId;
  uint64_t orgId;
  uint64_t beginDate;
  uint64_t endDate;
  uint64_t createTime;
} BalanceData__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = BalanceData_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(BalanceData__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = BalanceData_FieldNumber_CompanyId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(BalanceData__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orgId",
        .dataTypeSpecific.className = NULL,
        .number = BalanceData_FieldNumber_OrgId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(BalanceData__storage_, orgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orderId",
        .dataTypeSpecific.className = NULL,
        .number = BalanceData_FieldNumber_OrderId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(BalanceData__storage_, orderId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "invoiceNo",
        .dataTypeSpecific.className = NULL,
        .number = BalanceData_FieldNumber_InvoiceNo,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(BalanceData__storage_, invoiceNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "transType",
        .dataTypeSpecific.className = NULL,
        .number = BalanceData_FieldNumber_TransType,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(BalanceData__storage_, transType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "paykindCode",
        .dataTypeSpecific.className = NULL,
        .number = BalanceData_FieldNumber_PaykindCode,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(BalanceData__storage_, paykindCode),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "totCost",
        .dataTypeSpecific.className = NULL,
        .number = BalanceData_FieldNumber_TotCost,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(BalanceData__storage_, totCost),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "ownCost",
        .dataTypeSpecific.className = NULL,
        .number = BalanceData_FieldNumber_OwnCost,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(BalanceData__storage_, ownCost),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "beginDate",
        .dataTypeSpecific.className = NULL,
        .number = BalanceData_FieldNumber_BeginDate,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(BalanceData__storage_, beginDate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "endDate",
        .dataTypeSpecific.className = NULL,
        .number = BalanceData_FieldNumber_EndDate,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(BalanceData__storage_, endDate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "balanceType",
        .dataTypeSpecific.className = NULL,
        .number = BalanceData_FieldNumber_BalanceType,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(BalanceData__storage_, balanceType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "balanceOpercode",
        .dataTypeSpecific.className = NULL,
        .number = BalanceData_FieldNumber_BalanceOpercode,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(BalanceData__storage_, balanceOpercode),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "wasteOpercode",
        .dataTypeSpecific.className = NULL,
        .number = BalanceData_FieldNumber_WasteOpercode,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(BalanceData__storage_, wasteOpercode),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "wasteDate",
        .dataTypeSpecific.className = NULL,
        .number = BalanceData_FieldNumber_WasteDate,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(BalanceData__storage_, wasteDate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = BalanceData_FieldNumber_CreateTime,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(BalanceData__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[BalanceData class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(BalanceData__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\017\002\t\000\003\005\000\006\007\000\007\t\000\010\t\000\t\013\000\n\007\000\013\007\000\014\t\000\r\007\000\016\013\000\017\017\000\020\r\000"
        "\021\t\000\022\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UserSituation

@implementation UserSituation

@dynamic id_p;
@dynamic patientName;
@dynamic status;
@dynamic orgNo;
@dynamic deptName;
@dynamic deptId;
@dynamic bedNo;
@dynamic admissionTime;
@dynamic admissionTimeStr;
@dynamic patientInfo;
@dynamic createTime;
@dynamic orderStatus;
@dynamic orgNumber;
@dynamic toDeptName;
@dynamic newbedNo;

typedef struct UserSituation__storage_ {
  uint32_t _has_storage_[1];
  uint32_t status;
  uint32_t orderStatus;
  NSString *patientName;
  NSString *orgNo;
  NSString *deptName;
  NSString *bedNo;
  NSString *admissionTimeStr;
  NSString *patientInfo;
  NSString *orgNumber;
  NSString *toDeptName;
  NSString *newbedNo;
  uint64_t id_p;
  uint64_t deptId;
  uint64_t admissionTime;
  uint64_t createTime;
} UserSituation__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = UserSituation_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UserSituation__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "patientName",
        .dataTypeSpecific.className = NULL,
        .number = UserSituation_FieldNumber_PatientName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UserSituation__storage_, patientName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = UserSituation_FieldNumber_Status,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UserSituation__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "orgNo",
        .dataTypeSpecific.className = NULL,
        .number = UserSituation_FieldNumber_OrgNo,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UserSituation__storage_, orgNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "deptName",
        .dataTypeSpecific.className = NULL,
        .number = UserSituation_FieldNumber_DeptName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UserSituation__storage_, deptName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "deptId",
        .dataTypeSpecific.className = NULL,
        .number = UserSituation_FieldNumber_DeptId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UserSituation__storage_, deptId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "bedNo",
        .dataTypeSpecific.className = NULL,
        .number = UserSituation_FieldNumber_BedNo,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UserSituation__storage_, bedNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "admissionTime",
        .dataTypeSpecific.className = NULL,
        .number = UserSituation_FieldNumber_AdmissionTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UserSituation__storage_, admissionTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "admissionTimeStr",
        .dataTypeSpecific.className = NULL,
        .number = UserSituation_FieldNumber_AdmissionTimeStr,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UserSituation__storage_, admissionTimeStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "patientInfo",
        .dataTypeSpecific.className = NULL,
        .number = UserSituation_FieldNumber_PatientInfo,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(UserSituation__storage_, patientInfo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = UserSituation_FieldNumber_CreateTime,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(UserSituation__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orderStatus",
        .dataTypeSpecific.className = NULL,
        .number = UserSituation_FieldNumber_OrderStatus,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(UserSituation__storage_, orderStatus),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "orgNumber",
        .dataTypeSpecific.className = NULL,
        .number = UserSituation_FieldNumber_OrgNumber,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(UserSituation__storage_, orgNumber),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toDeptName",
        .dataTypeSpecific.className = NULL,
        .number = UserSituation_FieldNumber_ToDeptName,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(UserSituation__storage_, toDeptName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "newbedNo",
        .dataTypeSpecific.className = NULL,
        .number = UserSituation_FieldNumber_NewbedNo,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(UserSituation__storage_, newbedNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserSituation class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UserSituation__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\r\002\013\000\004\005\000\005\010\000\006\006\000\007\005\000\010\r\000\t\020\000\n\013\000\013\n\000\014\013\000\r\t\000\016\n\000\017\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - BigStatistics

@implementation BigStatistics

@dynamic id_p;
@dynamic orderNumber;
@dynamic serviceHistogram;
@dynamic onLineOrg;
@dynamic serviceType;
@dynamic hgList;
@dynamic feedbackHistogram;
@dynamic feedbackList;
@dynamic updateTime;
@dynamic createTime;
@dynamic companyId;

typedef struct BigStatistics__storage_ {
  uint32_t _has_storage_[1];
  NSString *orderNumber;
  NSString *serviceHistogram;
  NSString *onLineOrg;
  NSString *serviceType;
  NSString *hgList;
  NSString *feedbackHistogram;
  NSString *feedbackList;
  NSString *updateTime;
  NSString *createTime;
  uint64_t id_p;
  uint64_t companyId;
} BigStatistics__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = BigStatistics_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(BigStatistics__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orderNumber",
        .dataTypeSpecific.className = NULL,
        .number = BigStatistics_FieldNumber_OrderNumber,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(BigStatistics__storage_, orderNumber),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serviceHistogram",
        .dataTypeSpecific.className = NULL,
        .number = BigStatistics_FieldNumber_ServiceHistogram,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(BigStatistics__storage_, serviceHistogram),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "onLineOrg",
        .dataTypeSpecific.className = NULL,
        .number = BigStatistics_FieldNumber_OnLineOrg,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(BigStatistics__storage_, onLineOrg),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serviceType",
        .dataTypeSpecific.className = NULL,
        .number = BigStatistics_FieldNumber_ServiceType,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(BigStatistics__storage_, serviceType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hgList",
        .dataTypeSpecific.className = NULL,
        .number = BigStatistics_FieldNumber_HgList,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(BigStatistics__storage_, hgList),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "feedbackHistogram",
        .dataTypeSpecific.className = NULL,
        .number = BigStatistics_FieldNumber_FeedbackHistogram,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(BigStatistics__storage_, feedbackHistogram),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "feedbackList",
        .dataTypeSpecific.className = NULL,
        .number = BigStatistics_FieldNumber_FeedbackList,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(BigStatistics__storage_, feedbackList),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "updateTime",
        .dataTypeSpecific.className = NULL,
        .number = BigStatistics_FieldNumber_UpdateTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(BigStatistics__storage_, updateTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = BigStatistics_FieldNumber_CreateTime,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(BigStatistics__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = BigStatistics_FieldNumber_CompanyId,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(BigStatistics__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[BigStatistics class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(BigStatistics__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\n\002\013\000\003\020\000\004\t\000\005\013\000\006\006\000\007\021\000\010\014\000\t\n\000\n\n\000\013\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - AdModel

@implementation AdModel

@dynamic id_p;
@dynamic imgId;
@dynamic URL;
@dynamic adType;
@dynamic status;
@dynamic updateStaffId;
@dynamic updateStaffName;
@dynamic updateTime;
@dynamic createTime;
@dynamic imgURL;

typedef struct AdModel__storage_ {
  uint32_t _has_storage_[1];
  uint32_t adType;
  uint32_t status;
  NSString *imgId;
  NSString *URL;
  NSString *updateStaffName;
  NSString *createTime;
  NSString *imgURL;
  uint64_t id_p;
  uint64_t updateStaffId;
  uint64_t updateTime;
} AdModel__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = AdModel_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AdModel__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "imgId",
        .dataTypeSpecific.className = NULL,
        .number = AdModel_FieldNumber_ImgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AdModel__storage_, imgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "URL",
        .dataTypeSpecific.className = NULL,
        .number = AdModel_FieldNumber_URL,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AdModel__storage_, URL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "adType",
        .dataTypeSpecific.className = NULL,
        .number = AdModel_FieldNumber_AdType,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(AdModel__storage_, adType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = AdModel_FieldNumber_Status,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(AdModel__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "updateStaffId",
        .dataTypeSpecific.className = NULL,
        .number = AdModel_FieldNumber_UpdateStaffId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(AdModel__storage_, updateStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "updateStaffName",
        .dataTypeSpecific.className = NULL,
        .number = AdModel_FieldNumber_UpdateStaffName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(AdModel__storage_, updateStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "updateTime",
        .dataTypeSpecific.className = NULL,
        .number = AdModel_FieldNumber_UpdateTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(AdModel__storage_, updateTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = AdModel_FieldNumber_CreateTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(AdModel__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "imgURL",
        .dataTypeSpecific.className = NULL,
        .number = AdModel_FieldNumber_ImgURL,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(AdModel__storage_, imgURL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AdModel class]
                                     rootClass:[ModelRoot class]
                                          file:ModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AdModel__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\002\005\000\003!!!\000\004\006\000\007\r\000\010\017\000\t\n\000\n\n\000\013\004!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
