// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonData.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

 #import "comm/Stat.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class IMG_POINT;
@class ImgInfo;
GPB_ENUM_FWD_DECLARE(STAT_TYPE);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum APP_SMS_PURPOSE

///短信验证码类型
typedef GPB_ENUM(APP_SMS_PURPOSE) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  APP_SMS_PURPOSE_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  APP_SMS_PURPOSE_SmsDefault = 0,

  ///登录
  APP_SMS_PURPOSE_AspLogin = 1,

  ///绑定手机号
  APP_SMS_PURPOSE_PhoneChange = 2,
};

GPBEnumDescriptor *APP_SMS_PURPOSE_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL APP_SMS_PURPOSE_IsValidValue(int32_t value);

#pragma mark - Enum SNS_TYPE

///第三方开放平台类型
typedef GPB_ENUM(SNS_TYPE) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  SNS_TYPE_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ///未知
  SNS_TYPE_StUnknow = 0,

  ///[1：微信；2：QQ；3：新浪微博；4:微信公众号]
  SNS_TYPE_StWechat = 1,
  SNS_TYPE_StQq = 2,
  SNS_TYPE_StWeibo = 3,
  SNS_TYPE_StWxgz = 4,
};

GPBEnumDescriptor *SNS_TYPE_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL SNS_TYPE_IsValidValue(int32_t value);

#pragma mark - Enum SEX_TYPE

///性别类型
typedef GPB_ENUM(SEX_TYPE) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  SEX_TYPE_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  SEX_TYPE_SexDefault = 0,

  ///[1-男  2-女]
  SEX_TYPE_StMan = 1,
  SEX_TYPE_StWoman = 2,
};

GPBEnumDescriptor *SEX_TYPE_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL SEX_TYPE_IsValidValue(int32_t value);

#pragma mark - Enum IMG_FORMAT

/// 图片格式类型
typedef GPB_ENUM(IMG_FORMAT) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  IMG_FORMAT_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  IMG_FORMAT_ImgDefault = 0,
  IMG_FORMAT_ImgUnknow = 1,
  IMG_FORMAT_ImgJpeg = 2,
  IMG_FORMAT_ImgPng = 3,
  IMG_FORMAT_ImgWebp = 4,
};

GPBEnumDescriptor *IMG_FORMAT_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL IMG_FORMAT_IsValidValue(int32_t value);

#pragma mark - Enum AD_TYPE

typedef GPB_ENUM(AD_TYPE) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  AD_TYPE_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  AD_TYPE_AdDefault = 0,

  ///闪屏
  AD_TYPE_Splash = 1,

  ///首页banner
  AD_TYPE_HomePageBanner = 2,
};

GPBEnumDescriptor *AD_TYPE_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL AD_TYPE_IsValidValue(int32_t value);

#pragma mark - Enum PayType

/// 支付类型
typedef GPB_ENUM(PayType) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  PayType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PayType_DefaultPay = 0,

  /// 支付宝
  PayType_AliZfb = 1,

  /// 微信公众号		H5微信支付
  PayType_WxGz = 2,

  /// 微信app		APP微信支付
  PayType_WxApp = 3,

  /// pos支付
  PayType_PosPay = 4,

  /// 现金支付
  PayType_Cash = 5,

  /// 会员支付
  PayType_Account = 6,

  /// 微信二维码支付
  PayType_WxQrcode = 7,

  /// SAAS微信扫码支付
  PayType_WxSaas = 8,

  /// SAAS支付宝扫码支付
  PayType_AliSaas = 9,

  /// 预交金支付
  PayType_PreFee = 10,

  /// 长护险补贴支付
  PayType_Insure = 11,

  /// 优惠或预付金支付
  PayType_RebatePreFee = 12,

  /// 支付宝h5支付
  PayType_AliH5Zfb = 13,

  /// 宝付支付宝app
  PayType_BaofooAliapp = 30,

  /// 宝付微信公众号支付
  PayType_BaofooWxgz = 31,

  /// 宝付微信app支付
  PayType_BaofooWxapp = 32,

  /// 宝付手机网站-支付宝支付
  PayType_BaofooWapAli = 33,

  /// 宝付手机网站-微信支付
  PayType_BaofooWapWx = 34,

  /// 银生宝支付宝h5支付
  PayType_YingsehngbaoAliH5 = 35,

  /// 银生宝微信公众号支付
  PayType_YingsehngbaoWxgzH5 = 36,

  /// pos微信支付
  PayType_PosWx = 40,

  /// pos支付宝支付
  PayType_PosZfb = 41,

  /// pos银联储蓄卡支付
  PayType_PosChuxu = 42,

  /// posQQ钱包
  PayType_PosQq = 43,

  /// pos银联信用卡
  PayType_PosXinyong = 44,

  /// 退支付宝
  PayType_AliZfbRefunnd = 50,

  /// 退微信公众号
  PayType_WxGzRefund = 51,

  /// 退微信app
  PayType_WxAppRefund = 52,

  /// 退账户余额
  PayType_AccountRefund = 53,

  /// 退团购
  PayType_TgRefund = 71,

  /// 退现金
  PayType_CashRefund = 72,
};

GPBEnumDescriptor *PayType_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL PayType_IsValidValue(int32_t value);

#pragma mark - Enum OrderPayStatus

///订单支付状态  0 未支付，1 已支付 ，2 部分支付，3 退款处理中，4 已退款
typedef GPB_ENUM(OrderPayStatus) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  OrderPayStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OrderPayStatus_PayNot = 0,
  OrderPayStatus_Pay = 1,
  OrderPayStatus_PayPart = 2,

  ///退款处理中
  OrderPayStatus_RefundProcess = 3,

  ///已退款
  OrderPayStatus_RefundFinish = 4,

  ///支付流水异常
  OrderPayStatus_Abnormal = 5,
};

GPBEnumDescriptor *OrderPayStatus_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL OrderPayStatus_IsValidValue(int32_t value);

#pragma mark - Enum OrderStatus

typedef GPB_ENUM(OrderStatus) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  OrderStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /// 待付款 (待支付预交金)
  OrderStatus_WaitPayPrefee = 0,

  /// 待派工
  OrderStatus_WaitAssign = 1,

  /// 待服务
  OrderStatus_WaitService = 2,

  /// 服务中
  OrderStatus_ServiceIng = 3,

  /// 服务完成
  OrderStatus_ServiceComplete = 4,

  /// 待评价
  OrderStatus_WaitAppraise = 5,

  /// 已完成
  OrderStatus_OrderComplete = 6,

  ///已取消
  OrderStatus_Cancel = -1,
};

GPBEnumDescriptor *OrderStatus_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL OrderStatus_IsValidValue(int32_t value);

#pragma mark - Enum PayBusiType

///支付业务类型
typedef GPB_ENUM(PayBusiType) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  PayBusiType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /// 不使用
  PayBusiType_DoNotUse = 0,

  /// 定额充值
  PayBusiType_RechargeD = 1,

  /// 任意金额充值
  PayBusiType_RechargeR = 2,

  /// 支付预交金
  PayBusiType_PayPreamount = 3,

  /// 支付结算清单
  PayBusiType_PaySettlement = 4,

  /// 支付订单
  PayBusiType_PayOrder = 5,

  /// 订单附加项
  PayBusiType_PayOrderExtra = 6,

  /// 支付强制提交长护险保证金
  PayBusiType_PayInsure = 7,

  /// 支付自照护理员培训费
  PayBusiType_PayApply = 8,

  /// 支付门禁卡押金
  PayBusiType_PayExtra = 9,

  /// 结算后校正支付
  PayBusiType_PaySettlementClose = 10,

  /// 订单批量结算支付
  PayBusiType_PayOrderbatchsettle = 11,

  /// 退门禁卡押金
  PayBusiType_RefundExtra = 50,

  /// 结算退预交金
  PayBusiType_RefundPrepay = 51,

  /// 结算后校正退款
  PayBusiType_RefundSettlementClose = 52,

  /// 取消订单退预交金
  PayBusiType_RefundPrepayCancel = 53,
};

GPBEnumDescriptor *PayBusiType_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL PayBusiType_IsValidValue(int32_t value);

#pragma mark - Enum InsureOrderStatus

///长护险订单状态
typedef GPB_ENUM(InsureOrderStatus) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  InsureOrderStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /// 待接单
  InsureOrderStatus_InsureWaitReceive = 0,

  /// 待支付（陪护特有）
  InsureOrderStatus_InsureWaitPay = 1,

  /// 待派工
  InsureOrderStatus_InsureWaitAssign = 2,

  /// 待服务
  InsureOrderStatus_InsureWaitService = 3,

  /// 服务中
  InsureOrderStatus_InsureServiceIng = 4,

  /// 待结算（陪护特有）
  InsureOrderStatus_InsureWaitSettle = 5,

  /// 待评价（陪护特有）
  InsureOrderStatus_InsureWaitAppraise = 6,

  /// 已完成
  InsureOrderStatus_InsureOrderComplete = 7,

  /// 已取消
  InsureOrderStatus_InsureCancel = -1,
};

GPBEnumDescriptor *InsureOrderStatus_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL InsureOrderStatus_IsValidValue(int32_t value);

#pragma mark - Enum OrderButton

/// 企业端按钮定义
typedef GPB_ENUM(OrderButton) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  OrderButton_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /// 取消订单
  OrderButton_CancelOrder = 0,

  /// 接单
  OrderButton_Jiedan = 1,

  /// 安排带教
  OrderButton_Teach = 2,

  /// 修改订单
  OrderButton_UpdateOrder = 3,

  /// 发放资质
  OrderButton_SendCert = 4,

  /// 变更陪护家属
  OrderButton_UpdateKins = 5,

  /// 开启服务
  OrderButton_StartService = 6,

  /// 结束服务
  OrderButton_EndService = 7,

  /// 补贴估算
  OrderButton_Subsidy = 8,

  /// 再次下单
  OrderButton_AgainOrder = 9,

  /// 服务确认
  OrderButton_ServiceConfirm = 10,

  /// 申请结束服务
  OrderButton_ApplyEndService = 11,

  /// 指派护士
  OrderButton_AssignHs = 12,

  /// 更换护士
  OrderButton_UpdateHs = 13,

  /// 照护计划审核
  OrderButton_CheckTend = 14,

  /// 照护计划管理
  OrderButton_TendManage = 15,

  /// 回访记录
  OrderButton_VisitRecord = 16,

  /// 自照考核
  OrderButton_SelfAssess = 17,

  /// 指派带教人员
  OrderButton_AssignTeach = 18,

  /// 转出订单
  OrderButton_TransferOrder = 19,

  /// 更换带教人员
  OrderButton_UpdateHgTeach = 20,

  /// 记录带教
  OrderButton_TeachRecord = 21,
};

GPBEnumDescriptor *OrderButton_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL OrderButton_IsValidValue(int32_t value);

#pragma mark - CommonDataRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface CommonDataRoot : GPBRootObject
@end

#pragma mark - IMG_POINT

typedef GPB_ENUM(IMG_POINT_FieldNumber) {
  IMG_POINT_FieldNumber_X = 1,
  IMG_POINT_FieldNumber_Y = 2,
};

@interface IMG_POINT : GPBMessage

@property(nonatomic, readwrite) double x;

@property(nonatomic, readwrite) double y;

@end

#pragma mark - ImgInfo

typedef GPB_ENUM(ImgInfo_FieldNumber) {
  ImgInfo_FieldNumber_ImgId = 1,
  ImgInfo_FieldNumber_Imgurl = 2,
  ImgInfo_FieldNumber_ThumbImgurl = 3,
  ImgInfo_FieldNumber_Height = 4,
  ImgInfo_FieldNumber_Width = 5,
  ImgInfo_FieldNumber_Bgcolor = 6,
  ImgInfo_FieldNumber_Imgtype = 7,
  ImgInfo_FieldNumber_Center = 8,
  ImgInfo_FieldNumber_Suffix = 9,
  ImgInfo_FieldNumber_Type = 10,
};

@interface ImgInfo : GPBMessage

@property(nonatomic, readwrite) uint64_t imgId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imgurl;

@property(nonatomic, readwrite, copy, null_resettable) NSString *thumbImgurl;

@property(nonatomic, readwrite) uint32_t height;

@property(nonatomic, readwrite) uint32_t width;

@property(nonatomic, readwrite) uint32_t bgcolor;

@property(nonatomic, readwrite) IMG_FORMAT imgtype;

///图片中心点
@property(nonatomic, readwrite, strong, null_resettable) IMG_POINT *center;
/// Test to see if @c center has been set.
@property(nonatomic, readwrite) BOOL hasCenter;

///图片后缀
@property(nonatomic, readwrite, copy, null_resettable) NSString *suffix;

///类型 ：petimg ,headimg,feeds
@property(nonatomic, readwrite, copy, null_resettable) NSString *type;

@end

/// Fetches the raw value of a @c ImgInfo's @c imgtype property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t ImgInfo_Imgtype_RawValue(ImgInfo *message);
/// Sets the raw value of an @c ImgInfo's @c imgtype property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetImgInfo_Imgtype_RawValue(ImgInfo *message, int32_t value);

#pragma mark - SplashItem

typedef GPB_ENUM(SplashItem_FieldNumber) {
  SplashItem_FieldNumber_Id_p = 1,
  SplashItem_FieldNumber_ImgInfo = 2,
  SplashItem_FieldNumber_StartTimeCd = 3,
  SplashItem_FieldNumber_EndTimeCd = 4,
  SplashItem_FieldNumber_OnlyOneTime = 5,
};

///闪屏信息
@interface SplashItem : GPBMessage

@property(nonatomic, readwrite) uint32_t id_p;

@property(nonatomic, readwrite, strong, null_resettable) ImgInfo *imgInfo;
/// Test to see if @c imgInfo has been set.
@property(nonatomic, readwrite) BOOL hasImgInfo;

/// 距离开始的相对时间,如果已经开始则为0. 单位：ms毫秒
@property(nonatomic, readwrite) uint64_t startTimeCd;

/// 距离结束的相对时间,如果已经结束则为0. 单位：ms毫秒
@property(nonatomic, readwrite) uint64_t endTimeCd;

/// 指定闪屏是否只显示一次
@property(nonatomic, readwrite) BOOL onlyOneTime;

@end

#pragma mark - ADItem

typedef GPB_ENUM(ADItem_FieldNumber) {
  ADItem_FieldNumber_Id_p = 1,
  ADItem_FieldNumber_Type = 2,
  ADItem_FieldNumber_Index = 3,
  ADItem_FieldNumber_ImgInfo = 4,
  ADItem_FieldNumber_Jumpto = 5,
  ADItem_FieldNumber_StartTimeCd = 6,
  ADItem_FieldNumber_EndTimeCd = 7,
  ADItem_FieldNumber_OnlyOneTime = 8,
  ADItem_FieldNumber_ImgInfoNew = 9,
};

/// 广告信息-（闪屏、banner...）
@interface ADItem : GPBMessage

@property(nonatomic, readwrite) uint32_t id_p;

/// 此广告显示的位置（同时表示类型）
@property(nonatomic, readwrite) AD_TYPE type;

///当前位置的顺序数,排在第几位
@property(nonatomic, readwrite) uint32_t index;

///旧版本banner图片，3.0之前的APP版本使用
@property(nonatomic, readwrite, strong, null_resettable) ImgInfo *imgInfo;
/// Test to see if @c imgInfo has been set.
@property(nonatomic, readwrite) BOOL hasImgInfo;

///点击跳转url
@property(nonatomic, readwrite, copy, null_resettable) NSString *jumpto;

///距离开始的时间，如果已经开始则为0. 单位：毫秒
@property(nonatomic, readwrite) uint64_t startTimeCd;

///距离结束的时间，如果已经开始则为0. 单位：毫秒
@property(nonatomic, readwrite) uint64_t endTimeCd;

/// 指定广告是否只显示一次
@property(nonatomic, readwrite) BOOL onlyOneTime;

///新版本banner图片，3.0以后的APP版本使用
@property(nonatomic, readwrite, strong, null_resettable) ImgInfo *imgInfoNew;
/// Test to see if @c imgInfoNew has been set.
@property(nonatomic, readwrite) BOOL hasImgInfoNew;

@end

/// Fetches the raw value of a @c ADItem's @c type property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t ADItem_Type_RawValue(ADItem *message);
/// Sets the raw value of an @c ADItem's @c type property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetADItem_Type_RawValue(ADItem *message, int32_t value);

#pragma mark - SettingItem

typedef GPB_ENUM(SettingItem_FieldNumber) {
  SettingItem_FieldNumber_K = 1,
  SettingItem_FieldNumber_V = 2,
};

///单条配置信息
@interface SettingItem : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *k;

@property(nonatomic, readwrite, copy, null_resettable) NSData *v;

@end

#pragma mark - StatReportItem

typedef GPB_ENUM(StatReportItem_FieldNumber) {
  StatReportItem_FieldNumber_Type = 1,
  StatReportItem_FieldNumber_Version = 2,
  StatReportItem_FieldNumber_Data_p = 3,
};

///上报数据类型
@interface StatReportItem : GPBMessage

///上报类型
@property(nonatomic, readwrite) enum STAT_TYPE type;

///版本号
@property(nonatomic, readwrite) uint32_t version;

/// 请求数据
@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

@end

/// Fetches the raw value of a @c StatReportItem's @c type property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t StatReportItem_Type_RawValue(StatReportItem *message);
/// Sets the raw value of an @c StatReportItem's @c type property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetStatReportItem_Type_RawValue(StatReportItem *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
