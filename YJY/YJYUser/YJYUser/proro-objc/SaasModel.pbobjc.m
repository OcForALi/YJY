// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SaasModel.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "SaasModel.pbobjc.h"
 #import "CommonData.pbobjc.h"
 #import "Model.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - SaasModelRoot

@implementation SaasModelRoot

+ (GPBExtensionRegistry*)extensionRegistry {
  // This is called by +initialize so there is no need to worry
  // about thread safety and initialization of registry.
  static GPBExtensionRegistry* registry = nil;
  if (!registry) {
    GPBDebugCheckRuntimeVersion();
    registry = [[GPBExtensionRegistry alloc] init];
    [registry addExtensions:[CommonDataRoot extensionRegistry]];
    [registry addExtensions:[ModelRoot extensionRegistry]];
  }
  return registry;
}

@end

#pragma mark - SaasModelRoot_FileDescriptor

static GPBFileDescriptor *SaasModelRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Enum PermissionMenuType

GPBEnumDescriptor *PermissionMenuType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "DictMgr\000CompanyMgr\000Comgr\000PriceMgr\000SysMgr"
        "\000WorkerMgr\000UserMgr\000OrderMgr\000DataAnalysin"
        "g\000ServiceMgr\000FinanceMgr\000QualityMgr\000FormM"
        "gr\000SpecialMgr\000";
    static const int32_t values[] = {
        PermissionMenuType_DictMgr,
        PermissionMenuType_CompanyMgr,
        PermissionMenuType_Comgr,
        PermissionMenuType_PriceMgr,
        PermissionMenuType_SysMgr,
        PermissionMenuType_WorkerMgr,
        PermissionMenuType_UserMgr,
        PermissionMenuType_OrderMgr,
        PermissionMenuType_DataAnalysing,
        PermissionMenuType_ServiceMgr,
        PermissionMenuType_FinanceMgr,
        PermissionMenuType_QualityMgr,
        PermissionMenuType_FormMgr,
        PermissionMenuType_SpecialMgr,
    };
    static const char *extraTextFormatInfo = "\016\000\007\000\001\n\000\002c\002\000\003\010\000\004\006\000\005\t\000\006\007\000\007\010\000\010\r\000\t\n\000\n\n\000\013\n\000\014\007\000\r\n\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PermissionMenuType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PermissionMenuType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PermissionMenuType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PermissionMenuType_DictMgr:
    case PermissionMenuType_CompanyMgr:
    case PermissionMenuType_Comgr:
    case PermissionMenuType_PriceMgr:
    case PermissionMenuType_SysMgr:
    case PermissionMenuType_WorkerMgr:
    case PermissionMenuType_UserMgr:
    case PermissionMenuType_OrderMgr:
    case PermissionMenuType_DataAnalysing:
    case PermissionMenuType_ServiceMgr:
    case PermissionMenuType_FinanceMgr:
    case PermissionMenuType_QualityMgr:
    case PermissionMenuType_FormMgr:
    case PermissionMenuType_SpecialMgr:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - HGBaseInfo

@implementation HGBaseInfo

@dynamic id_p;
@dynamic phone;
@dynamic pwd;
@dynamic state;
@dynamic fullName;
@dynamic sex;
@dynamic birthday;
@dynamic pic;
@dynamic nativeplace;
@dynamic province;
@dynamic city;
@dynamic district;
@dynamic address;
@dynamic language;
@dynamic religion;
@dynamic nation;
@dynamic height;
@dynamic weight;
@dynamic marriage;
@dynamic education;
@dynamic idcard;
@dynamic idcardpic;
@dynamic idcardpic2;
@dynamic idcardpic3;
@dynamic idcardExpiredDate;
@dynamic healthCertificate;
@dynamic nursingCertificate;
@dynamic createCompany;
@dynamic createTime;
@dynamic createType;
@dynamic createChannel;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic rongToken;
@dynamic jpushRegistid;
@dynamic activeState;
@dynamic careerStartTime;
@dynamic emergencyContact;
@dynamic emergencyContactPhone;
@dynamic building;
@dynamic onService;
@dynamic mpQrcode;
@dynamic signPic;
@dynamic otherCertificateArray, otherCertificateArray_Count;
@dynamic goodAtProject;
@dynamic serviceNum;
@dynamic bankName;
@dynamic bankNo;
@dynamic jobTitle;
@dynamic serviceOrg;
@dynamic medicalReport;
@dynamic certification;

typedef struct HGBaseInfo__storage_ {
  uint32_t _has_storage_[2];
  uint32_t state;
  uint32_t sex;
  uint32_t marriage;
  uint32_t education;
  uint32_t createType;
  uint32_t activeState;
  uint32_t onService;
  uint32_t serviceNum;
  uint32_t jobTitle;
  NSString *phone;
  NSString *pwd;
  NSString *fullName;
  NSString *birthday;
  NSString *pic;
  NSString *nativeplace;
  NSString *province;
  NSString *city;
  NSString *district;
  NSString *address;
  NSString *language;
  NSString *religion;
  NSString *nation;
  NSString *height;
  NSString *weight;
  NSString *idcard;
  NSString *idcardpic;
  NSString *idcardpic2;
  NSString *idcardpic3;
  NSString *healthCertificate;
  NSString *nursingCertificate;
  NSString *createChannel;
  NSString *createStaffName;
  NSString *rongToken;
  NSString *jpushRegistid;
  NSString *emergencyContact;
  NSString *emergencyContactPhone;
  NSString *building;
  NSString *mpQrcode;
  NSString *signPic;
  NSMutableArray *otherCertificateArray;
  NSString *goodAtProject;
  NSString *bankName;
  NSString *bankNo;
  NSString *serviceOrg;
  NSString *medicalReport;
  NSString *certification;
  uint64_t id_p;
  uint64_t idcardExpiredDate;
  uint64_t createCompany;
  uint64_t createTime;
  uint64_t createStaffId;
  uint64_t careerStartTime;
} HGBaseInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "phone",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Phone,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, phone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pwd",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Pwd,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, pwd),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "state",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_State,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, state),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "fullName",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_FullName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, fullName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sex",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Sex,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, sex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "birthday",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Birthday,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, birthday),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pic",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Pic,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, pic),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nativeplace",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Nativeplace,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, nativeplace),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "province",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Province,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, province),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "city",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_City,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, city),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "district",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_District,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, district),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "address",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Address,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, address),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "language",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Language,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, language),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "religion",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Religion,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, religion),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nation",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Nation,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, nation),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "height",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Height,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, height),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "weight",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Weight,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, weight),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "marriage",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Marriage,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, marriage),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "education",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Education,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, education),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "idcard",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Idcard,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, idcard),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idcardpic",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Idcardpic,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, idcardpic),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idcardpic2",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Idcardpic2,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, idcardpic2),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idcardpic3",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Idcardpic3,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, idcardpic3),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idcardExpiredDate",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_IdcardExpiredDate,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, idcardExpiredDate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "healthCertificate",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_HealthCertificate,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, healthCertificate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nursingCertificate",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_NursingCertificate,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, nursingCertificate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createCompany",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_CreateCompany,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, createCompany),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_CreateTime,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createType",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_CreateType,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, createType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createChannel",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_CreateChannel,
        .hasIndex = 30,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, createChannel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_CreateStaffId,
        .hasIndex = 31,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_CreateStaffName,
        .hasIndex = 32,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rongToken",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_RongToken,
        .hasIndex = 33,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, rongToken),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "jpushRegistid",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_JpushRegistid,
        .hasIndex = 34,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, jpushRegistid),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "activeState",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_ActiveState,
        .hasIndex = 35,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, activeState),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "careerStartTime",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_CareerStartTime,
        .hasIndex = 36,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, careerStartTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "emergencyContact",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_EmergencyContact,
        .hasIndex = 37,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, emergencyContact),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "emergencyContactPhone",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_EmergencyContactPhone,
        .hasIndex = 38,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, emergencyContactPhone),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "building",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Building,
        .hasIndex = 39,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, building),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "onService",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_OnService,
        .hasIndex = 40,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, onService),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "mpQrcode",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_MpQrcode,
        .hasIndex = 41,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, mpQrcode),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "signPic",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_SignPic,
        .hasIndex = 42,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, signPic),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "otherCertificateArray",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_OtherCertificateArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, otherCertificateArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "goodAtProject",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_GoodAtProject,
        .hasIndex = 43,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, goodAtProject),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serviceNum",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_ServiceNum,
        .hasIndex = 44,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, serviceNum),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "bankName",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_BankName,
        .hasIndex = 45,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, bankName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bankNo",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_BankNo,
        .hasIndex = 46,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, bankNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "jobTitle",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_JobTitle,
        .hasIndex = 47,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, jobTitle),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "serviceOrg",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_ServiceOrg,
        .hasIndex = 48,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, serviceOrg),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "medicalReport",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_MedicalReport,
        .hasIndex = 49,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, medicalReport),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "certification",
        .dataTypeSpecific.className = NULL,
        .number = HGBaseInfo_FieldNumber_Certification,
        .hasIndex = 50,
        .offset = (uint32_t)offsetof(HGBaseInfo__storage_, certification),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[HGBaseInfo class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(HGBaseInfo__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\033\005\010\000\031\021\000\032\021\000\033\022\000\034\r\000\035\n\000\036\n\000\037\r\000 \r\000!\017\000\"\t\000#\r\000$\013\000"
        "%\017\000&\020\000\'\025\000)\t\000*\003b\003\000+\007\000,\000otherCertificate\000-"
        "\r\000.\n\000/\010\0000\005A\0001\010\0002\n\0003\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OrgModel

@implementation OrgModel

@dynamic id_p;
@dynamic orgName;
@dynamic orgType;
@dynamic detailedType;
@dynamic orgLevel;
@dynamic telephone;
@dynamic phone;
@dynamic operateMode;
@dynamic officialWebsite;
@dynamic province;
@dynamic city;
@dynamic district;
@dynamic address;
@dynamic building;
@dynamic gpsType;
@dynamic lng;
@dynamic lat;
@dynamic state;
@dynamic createTime;
@dynamic createType;
@dynamic createChannel;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic provinceId;
@dynamic cityId;
@dynamic countyId;
@dynamic firstCaseName;
@dynamic fullPinYin;
@dynamic tagsArray, tagsArray_Count;
@dynamic serviceNum;
@dynamic strategyURL;
@dynamic serviceDetail;

typedef struct OrgModel__storage_ {
  uint32_t _has_storage_[1];
  uint32_t orgType;
  uint32_t detailedType;
  uint32_t orgLevel;
  uint32_t operateMode;
  uint32_t gpsType;
  uint32_t state;
  uint32_t createType;
  uint32_t serviceNum;
  NSString *orgName;
  NSString *telephone;
  NSString *phone;
  NSString *officialWebsite;
  NSString *province;
  NSString *city;
  NSString *district;
  NSString *address;
  NSString *building;
  NSString *createChannel;
  NSString *createStaffName;
  NSString *firstCaseName;
  NSString *fullPinYin;
  NSMutableArray *tagsArray;
  NSString *strategyURL;
  NSString *serviceDetail;
  uint64_t id_p;
  double lng;
  double lat;
  uint64_t createTime;
  uint64_t createStaffId;
  uint64_t provinceId;
  uint64_t cityId;
  uint64_t countyId;
} OrgModel__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OrgModel__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orgName",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_OrgName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OrgModel__storage_, orgName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "orgType",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_OrgType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OrgModel__storage_, orgType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "detailedType",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_DetailedType,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OrgModel__storage_, detailedType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "orgLevel",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_OrgLevel,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OrgModel__storage_, orgLevel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "telephone",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_Telephone,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OrgModel__storage_, telephone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "phone",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_Phone,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OrgModel__storage_, phone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "operateMode",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_OperateMode,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OrgModel__storage_, operateMode),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "officialWebsite",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_OfficialWebsite,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OrgModel__storage_, officialWebsite),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "province",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_Province,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OrgModel__storage_, province),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "city",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_City,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OrgModel__storage_, city),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "district",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_District,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OrgModel__storage_, district),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "address",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_Address,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(OrgModel__storage_, address),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "building",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_Building,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(OrgModel__storage_, building),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "gpsType",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_GpsType,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(OrgModel__storage_, gpsType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "lng",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_Lng,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(OrgModel__storage_, lng),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "lat",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_Lat,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(OrgModel__storage_, lat),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "state",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_State,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(OrgModel__storage_, state),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_CreateTime,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(OrgModel__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createType",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_CreateType,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(OrgModel__storage_, createType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createChannel",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_CreateChannel,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(OrgModel__storage_, createChannel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_CreateStaffId,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(OrgModel__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_CreateStaffName,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(OrgModel__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "provinceId",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_ProvinceId,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(OrgModel__storage_, provinceId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "cityId",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_CityId,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(OrgModel__storage_, cityId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "countyId",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_CountyId,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(OrgModel__storage_, countyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "firstCaseName",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_FirstCaseName,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(OrgModel__storage_, firstCaseName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fullPinYin",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_FullPinYin,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(OrgModel__storage_, fullPinYin),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "tagsArray",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_TagsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OrgModel__storage_, tagsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serviceNum",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_ServiceNum,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(OrgModel__storage_, serviceNum),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "strategyURL",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_StrategyURL,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(OrgModel__storage_, strategyURL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serviceDetail",
        .dataTypeSpecific.className = NULL,
        .number = OrgModel_FieldNumber_ServiceDetail,
        .hasIndex = 30,
        .offset = (uint32_t)offsetof(OrgModel__storage_, serviceDetail),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OrgModel class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OrgModel__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\024\002\007\000\003\007\000\004\014\000\005\010\000\010\013\000\t\017\000\017\007\000\023\n\000\024\n\000\025\r\000\026\r\000\027\017\000\030\n\000"
        "\031\006\000\032\010\000\033\r\000\034\n\000\036\n\000\037\t!!\000 \r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - BranchModel

@implementation BranchModel

@dynamic id_p;
@dynamic orgId;
@dynamic branchName;
@dynamic createTime;
@dynamic createType;
@dynamic createChannel;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic state;
@dynamic hasOrg, org;
@dynamic mpQrcode;

typedef struct BranchModel__storage_ {
  uint32_t _has_storage_[1];
  uint32_t createType;
  uint32_t state;
  NSString *branchName;
  NSString *createChannel;
  NSString *createStaffName;
  OrgModel *org;
  NSString *mpQrcode;
  uint64_t id_p;
  uint64_t orgId;
  uint64_t createTime;
  uint64_t createStaffId;
} BranchModel__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = BranchModel_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(BranchModel__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orgId",
        .dataTypeSpecific.className = NULL,
        .number = BranchModel_FieldNumber_OrgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(BranchModel__storage_, orgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "branchName",
        .dataTypeSpecific.className = NULL,
        .number = BranchModel_FieldNumber_BranchName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(BranchModel__storage_, branchName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = BranchModel_FieldNumber_CreateTime,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(BranchModel__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createType",
        .dataTypeSpecific.className = NULL,
        .number = BranchModel_FieldNumber_CreateType,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(BranchModel__storage_, createType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createChannel",
        .dataTypeSpecific.className = NULL,
        .number = BranchModel_FieldNumber_CreateChannel,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(BranchModel__storage_, createChannel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = BranchModel_FieldNumber_CreateStaffId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(BranchModel__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = BranchModel_FieldNumber_CreateStaffName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(BranchModel__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "state",
        .dataTypeSpecific.className = NULL,
        .number = BranchModel_FieldNumber_State,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(BranchModel__storage_, state),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "org",
        .dataTypeSpecific.className = GPBStringifySymbol(OrgModel),
        .number = BranchModel_FieldNumber_Org,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(BranchModel__storage_, org),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "mpQrcode",
        .dataTypeSpecific.className = NULL,
        .number = BranchModel_FieldNumber_MpQrcode,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(BranchModel__storage_, mpQrcode),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[BranchModel class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(BranchModel__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\002\005\000\003\n\000\004\n\000\005\n\000\006\r\000\007\r\000\010\017\000\013\003b\003\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Company

@implementation Company

@dynamic id_p;
@dynamic companyName;
@dynamic adminId;
@dynamic adminPhone;
@dynamic legalManName;
@dynamic province;
@dynamic city;
@dynamic address;
@dynamic state;
@dynamic businessLicence;
@dynamic legalManLicence;
@dynamic officialWebsite;
@dynamic linkman;
@dynamic createTime;
@dynamic createType;
@dynamic createChannel;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic county;
@dynamic provinceId;
@dynamic cityId;
@dynamic countyId;

typedef struct Company__storage_ {
  uint32_t _has_storage_[1];
  uint32_t state;
  uint32_t createType;
  NSString *companyName;
  NSString *adminPhone;
  NSString *legalManName;
  NSString *province;
  NSString *city;
  NSString *address;
  NSString *businessLicence;
  NSString *legalManLicence;
  NSString *officialWebsite;
  NSString *linkman;
  NSString *createChannel;
  NSString *createStaffName;
  NSString *county;
  uint64_t id_p;
  uint64_t adminId;
  uint64_t createTime;
  uint64_t createStaffId;
  uint64_t provinceId;
  uint64_t cityId;
  uint64_t countyId;
} Company__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(Company__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "companyName",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_CompanyName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(Company__storage_, companyName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "adminId",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_AdminId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(Company__storage_, adminId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "adminPhone",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_AdminPhone,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(Company__storage_, adminPhone),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "legalManName",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_LegalManName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(Company__storage_, legalManName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "province",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_Province,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(Company__storage_, province),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "city",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_City,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(Company__storage_, city),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "address",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_Address,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(Company__storage_, address),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "state",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_State,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(Company__storage_, state),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "businessLicence",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_BusinessLicence,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(Company__storage_, businessLicence),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "legalManLicence",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_LegalManLicence,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(Company__storage_, legalManLicence),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "officialWebsite",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_OfficialWebsite,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(Company__storage_, officialWebsite),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "linkman",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_Linkman,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(Company__storage_, linkman),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_CreateTime,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(Company__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createType",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_CreateType,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(Company__storage_, createType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createChannel",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_CreateChannel,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(Company__storage_, createChannel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_CreateStaffId,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(Company__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_CreateStaffName,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(Company__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "county",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_County,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(Company__storage_, county),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "provinceId",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_ProvinceId,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(Company__storage_, provinceId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "cityId",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_CityId,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(Company__storage_, cityId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "countyId",
        .dataTypeSpecific.className = NULL,
        .number = Company_FieldNumber_CountyId,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(Company__storage_, countyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[Company class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(Company__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\017\002\013\000\003\007\000\004\n\000\005\014\000\n\017\000\013\017\000\014\017\000\016\n\000\017\n\000\020\r\000\021\r\000\022\017\000\024\n\000"
        "\025\006\000\026\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - CompanyOrg

@implementation CompanyOrg

@dynamic id_p;
@dynamic companyId;
@dynamic orgId;
@dynamic branchId;
@dynamic prepayAmount;
@dynamic createTime;
@dynamic createType;
@dynamic createChannel;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic hasOrg, org;
@dynamic hasBranch, branch;
@dynamic hasCompany, company;
@dynamic dudaoIdArray, dudaoIdArray_Count;
@dynamic chairmanId;
@dynamic chairmanName;
@dynamic chairmanPhone;
@dynamic isAll;
@dynamic branchName;
@dynamic havaEntranceCard;
@dynamic entranceCardPrice;
@dynamic mpQrcode;
@dynamic changeServiceConfig;
@dynamic dudaoChargeConfig;
@dynamic lastDayFeeConfig;
@dynamic kfPhone;
@dynamic measurementConfig;
@dynamic isShowClientExtra;
@dynamic changeBranchConfig;
@dynamic showPhone;
@dynamic startOrderFeeConfig;
@dynamic hangBedConfig;
@dynamic prcOrderSignConfig;
@dynamic prcAuditConfig;

typedef struct CompanyOrg__storage_ {
  uint32_t _has_storage_[2];
  uint32_t createType;
  uint32_t isAll;
  uint32_t havaEntranceCard;
  uint32_t changeServiceConfig;
  uint32_t dudaoChargeConfig;
  uint32_t lastDayFeeConfig;
  uint32_t measurementConfig;
  uint32_t isShowClientExtra;
  uint32_t changeBranchConfig;
  uint32_t showPhone;
  uint32_t startOrderFeeConfig;
  uint32_t hangBedConfig;
  uint32_t prcOrderSignConfig;
  uint32_t prcAuditConfig;
  NSString *createChannel;
  NSString *createStaffName;
  OrgModel *org;
  BranchModel *branch;
  Company *company;
  GPBUInt64Array *dudaoIdArray;
  NSString *chairmanName;
  NSString *chairmanPhone;
  NSString *branchName;
  NSString *mpQrcode;
  NSString *kfPhone;
  uint64_t id_p;
  uint64_t companyId;
  uint64_t orgId;
  uint64_t branchId;
  uint64_t prepayAmount;
  uint64_t createTime;
  uint64_t createStaffId;
  uint64_t chairmanId;
  uint64_t entranceCardPrice;
} CompanyOrg__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_CompanyId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orgId",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_OrgId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, orgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "branchId",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_BranchId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, branchId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "prepayAmount",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_PrepayAmount,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, prepayAmount),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_CreateTime,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createType",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_CreateType,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, createType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createChannel",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_CreateChannel,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, createChannel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_CreateStaffId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_CreateStaffName,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "org",
        .dataTypeSpecific.className = GPBStringifySymbol(OrgModel),
        .number = CompanyOrg_FieldNumber_Org,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, org),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "branch",
        .dataTypeSpecific.className = GPBStringifySymbol(BranchModel),
        .number = CompanyOrg_FieldNumber_Branch,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, branch),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "company",
        .dataTypeSpecific.className = GPBStringifySymbol(Company),
        .number = CompanyOrg_FieldNumber_Company,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, company),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "dudaoIdArray",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_DudaoIdArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, dudaoIdArray),
        .flags = GPBFieldRepeated | GPBFieldPacked | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "chairmanId",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_ChairmanId,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, chairmanId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "chairmanName",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_ChairmanName,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, chairmanName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "chairmanPhone",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_ChairmanPhone,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, chairmanPhone),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isAll",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_IsAll,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, isAll),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "branchName",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_BranchName,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, branchName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "havaEntranceCard",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_HavaEntranceCard,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, havaEntranceCard),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "entranceCardPrice",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_EntranceCardPrice,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, entranceCardPrice),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "mpQrcode",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_MpQrcode,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, mpQrcode),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "changeServiceConfig",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_ChangeServiceConfig,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, changeServiceConfig),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "dudaoChargeConfig",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_DudaoChargeConfig,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, dudaoChargeConfig),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "lastDayFeeConfig",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_LastDayFeeConfig,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, lastDayFeeConfig),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "kfPhone",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_KfPhone,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, kfPhone),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "measurementConfig",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_MeasurementConfig,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, measurementConfig),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "isShowClientExtra",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_IsShowClientExtra,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, isShowClientExtra),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "changeBranchConfig",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_ChangeBranchConfig,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, changeBranchConfig),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "showPhone",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_ShowPhone,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, showPhone),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "startOrderFeeConfig",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_StartOrderFeeConfig,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, startOrderFeeConfig),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "hangBedConfig",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_HangBedConfig,
        .hasIndex = 30,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, hangBedConfig),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "prcOrderSignConfig",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_PrcOrderSignConfig,
        .hasIndex = 31,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, prcOrderSignConfig),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "prcAuditConfig",
        .dataTypeSpecific.className = NULL,
        .number = CompanyOrg_FieldNumber_PrcAuditConfig,
        .hasIndex = 32,
        .offset = (uint32_t)offsetof(CompanyOrg__storage_, prcAuditConfig),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CompanyOrg class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CompanyOrg__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\036\002\t\000\003\005\000\004\010\000\005\014\000\006\n\000\007\n\000\010\r\000\t\r\000\n\017\000\016\000dudaoId\000\017\n"
        "\000\020\014\000\021\r\000\022\005\000\023\n\000\024\020\000\025\021\000\026\003b\003\000\027\023\000\030\021\000\032\020\000\033\007\000\034\021\000\035"
        "\021\000\036\022\000\037\t\000 \023\000!\r\000\"\022\000#\016\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - RoomModel

@implementation RoomModel

@dynamic roomId;
@dynamic companyId;
@dynamic orgId;
@dynamic branchId;
@dynamic roomNo;
@dynamic state;
@dynamic createTime;
@dynamic createType;
@dynamic createChannel;
@dynamic createStaffId;
@dynamic createStaffName;

typedef struct RoomModel__storage_ {
  uint32_t _has_storage_[1];
  uint32_t state;
  uint32_t createType;
  NSString *roomNo;
  NSString *createChannel;
  NSString *createStaffName;
  uint64_t roomId;
  uint64_t companyId;
  uint64_t orgId;
  uint64_t branchId;
  uint64_t createTime;
  uint64_t createStaffId;
} RoomModel__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "roomId",
        .dataTypeSpecific.className = NULL,
        .number = RoomModel_FieldNumber_RoomId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(RoomModel__storage_, roomId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = RoomModel_FieldNumber_CompanyId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(RoomModel__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orgId",
        .dataTypeSpecific.className = NULL,
        .number = RoomModel_FieldNumber_OrgId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(RoomModel__storage_, orgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "branchId",
        .dataTypeSpecific.className = NULL,
        .number = RoomModel_FieldNumber_BranchId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(RoomModel__storage_, branchId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "roomNo",
        .dataTypeSpecific.className = NULL,
        .number = RoomModel_FieldNumber_RoomNo,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(RoomModel__storage_, roomNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "state",
        .dataTypeSpecific.className = NULL,
        .number = RoomModel_FieldNumber_State,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(RoomModel__storage_, state),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = RoomModel_FieldNumber_CreateTime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(RoomModel__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createType",
        .dataTypeSpecific.className = NULL,
        .number = RoomModel_FieldNumber_CreateType,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(RoomModel__storage_, createType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createChannel",
        .dataTypeSpecific.className = NULL,
        .number = RoomModel_FieldNumber_CreateChannel,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(RoomModel__storage_, createChannel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = RoomModel_FieldNumber_CreateStaffId,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(RoomModel__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = RoomModel_FieldNumber_CreateStaffName,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(RoomModel__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[RoomModel class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(RoomModel__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\n\001\006\000\002\t\000\003\005\000\004\010\000\005\006\000\007\n\000\010\n\000\t\r\000\n\r\000\013\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - BedModel

@implementation BedModel

@dynamic bedId;
@dynamic companyId;
@dynamic orgId;
@dynamic branchId;
@dynamic roomId;
@dynamic bedNo;
@dynamic state;
@dynamic createTime;
@dynamic createType;
@dynamic createChannel;
@dynamic createStaffId;
@dynamic createStaffName;

typedef struct BedModel__storage_ {
  uint32_t _has_storage_[1];
  uint32_t state;
  uint32_t createType;
  NSString *bedNo;
  NSString *createChannel;
  NSString *createStaffName;
  uint64_t bedId;
  uint64_t companyId;
  uint64_t orgId;
  uint64_t branchId;
  uint64_t roomId;
  uint64_t createTime;
  uint64_t createStaffId;
} BedModel__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "bedId",
        .dataTypeSpecific.className = NULL,
        .number = BedModel_FieldNumber_BedId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(BedModel__storage_, bedId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = BedModel_FieldNumber_CompanyId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(BedModel__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orgId",
        .dataTypeSpecific.className = NULL,
        .number = BedModel_FieldNumber_OrgId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(BedModel__storage_, orgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "branchId",
        .dataTypeSpecific.className = NULL,
        .number = BedModel_FieldNumber_BranchId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(BedModel__storage_, branchId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "roomId",
        .dataTypeSpecific.className = NULL,
        .number = BedModel_FieldNumber_RoomId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(BedModel__storage_, roomId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "bedNo",
        .dataTypeSpecific.className = NULL,
        .number = BedModel_FieldNumber_BedNo,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(BedModel__storage_, bedNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "state",
        .dataTypeSpecific.className = NULL,
        .number = BedModel_FieldNumber_State,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(BedModel__storage_, state),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = BedModel_FieldNumber_CreateTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(BedModel__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createType",
        .dataTypeSpecific.className = NULL,
        .number = BedModel_FieldNumber_CreateType,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(BedModel__storage_, createType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createChannel",
        .dataTypeSpecific.className = NULL,
        .number = BedModel_FieldNumber_CreateChannel,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(BedModel__storage_, createChannel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = BedModel_FieldNumber_CreateStaffId,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(BedModel__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = BedModel_FieldNumber_CreateStaffName,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(BedModel__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[BedModel class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(BedModel__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\013\001\005\000\002\t\000\003\005\000\004\010\000\005\006\000\006\005\000\010\n\000\t\n\000\n\r\000\013\r\000\014\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Price

@implementation Price

@dynamic priceId;
@dynamic companyBranchId;
@dynamic companyId;
@dynamic orgId;
@dynamic branchId;
@dynamic state;
@dynamic longTermInsurance;
@dynamic serviceType;
@dynamic serviceItem;
@dynamic serviceUnit;
@dynamic price;
@dynamic description_p;
@dynamic createTime;
@dynamic createType;
@dynamic createChannel;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic priceStr;
@dynamic isrequired;
@dynamic defaultStatus;
@dynamic hgRebatePrice;
@dynamic hgKinsRebatePrice;
@dynamic prepayFee;
@dynamic prepayFeeStr;
@dynamic totalPrice;
@dynamic consentText;
@dynamic showScope;
@dynamic serviceSubjoinType;
@dynamic subjoinGroupingType;
@dynamic adlMinScore;
@dynamic adlMaxScore;
@dynamic subsidy;
@dynamic isTendApply;
@dynamic fitPeople;
@dynamic serviceContent;
@dynamic serviceProcess;
@dynamic serviceState;
@dynamic billingNotice;
@dynamic serviceIntro;
@dynamic qas;

typedef struct Price__storage_ {
  uint32_t _has_storage_[2];
  int32_t state;
  uint32_t longTermInsurance;
  uint32_t serviceType;
  uint32_t serviceUnit;
  uint32_t createType;
  uint32_t isrequired;
  uint32_t defaultStatus;
  uint32_t showScope;
  uint32_t serviceSubjoinType;
  uint32_t subjoinGroupingType;
  uint32_t adlMinScore;
  uint32_t adlMaxScore;
  uint32_t isTendApply;
  NSString *serviceItem;
  NSString *description_p;
  NSString *createChannel;
  NSString *createStaffName;
  NSString *priceStr;
  NSString *prepayFeeStr;
  NSString *totalPrice;
  NSString *consentText;
  NSString *fitPeople;
  NSString *serviceContent;
  NSString *serviceProcess;
  NSString *serviceState;
  NSString *billingNotice;
  NSString *serviceIntro;
  NSString *qas;
  uint64_t priceId;
  uint64_t companyBranchId;
  uint64_t companyId;
  uint64_t orgId;
  uint64_t branchId;
  int64_t price;
  uint64_t createTime;
  uint64_t createStaffId;
  int64_t hgRebatePrice;
  int64_t hgKinsRebatePrice;
  int64_t prepayFee;
  uint64_t subsidy;
} Price__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "priceId",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_PriceId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(Price__storage_, priceId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "companyBranchId",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_CompanyBranchId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(Price__storage_, companyBranchId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_CompanyId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(Price__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orgId",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_OrgId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(Price__storage_, orgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "branchId",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_BranchId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(Price__storage_, branchId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "state",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_State,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(Price__storage_, state),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "longTermInsurance",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_LongTermInsurance,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(Price__storage_, longTermInsurance),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "serviceType",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_ServiceType,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(Price__storage_, serviceType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "serviceItem",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_ServiceItem,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(Price__storage_, serviceItem),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serviceUnit",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_ServiceUnit,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(Price__storage_, serviceUnit),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "price",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_Price,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(Price__storage_, price),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "description_p",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_Description_p,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(Price__storage_, description_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_CreateTime,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(Price__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createType",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_CreateType,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(Price__storage_, createType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createChannel",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_CreateChannel,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(Price__storage_, createChannel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_CreateStaffId,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(Price__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_CreateStaffName,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(Price__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "priceStr",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_PriceStr,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(Price__storage_, priceStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isrequired",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_Isrequired,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(Price__storage_, isrequired),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "defaultStatus",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_DefaultStatus,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(Price__storage_, defaultStatus),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "hgRebatePrice",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_HgRebatePrice,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(Price__storage_, hgRebatePrice),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "hgKinsRebatePrice",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_HgKinsRebatePrice,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(Price__storage_, hgKinsRebatePrice),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "prepayFee",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_PrepayFee,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(Price__storage_, prepayFee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "prepayFeeStr",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_PrepayFeeStr,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(Price__storage_, prepayFeeStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "totalPrice",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_TotalPrice,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(Price__storage_, totalPrice),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "consentText",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_ConsentText,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(Price__storage_, consentText),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "showScope",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_ShowScope,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(Price__storage_, showScope),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "serviceSubjoinType",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_ServiceSubjoinType,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(Price__storage_, serviceSubjoinType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "subjoinGroupingType",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_SubjoinGroupingType,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(Price__storage_, subjoinGroupingType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "adlMinScore",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_AdlMinScore,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(Price__storage_, adlMinScore),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "adlMaxScore",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_AdlMaxScore,
        .hasIndex = 30,
        .offset = (uint32_t)offsetof(Price__storage_, adlMaxScore),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "subsidy",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_Subsidy,
        .hasIndex = 31,
        .offset = (uint32_t)offsetof(Price__storage_, subsidy),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "isTendApply",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_IsTendApply,
        .hasIndex = 32,
        .offset = (uint32_t)offsetof(Price__storage_, isTendApply),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "fitPeople",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_FitPeople,
        .hasIndex = 33,
        .offset = (uint32_t)offsetof(Price__storage_, fitPeople),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serviceContent",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_ServiceContent,
        .hasIndex = 34,
        .offset = (uint32_t)offsetof(Price__storage_, serviceContent),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serviceProcess",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_ServiceProcess,
        .hasIndex = 35,
        .offset = (uint32_t)offsetof(Price__storage_, serviceProcess),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serviceState",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_ServiceState,
        .hasIndex = 36,
        .offset = (uint32_t)offsetof(Price__storage_, serviceState),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "billingNotice",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_BillingNotice,
        .hasIndex = 37,
        .offset = (uint32_t)offsetof(Price__storage_, billingNotice),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serviceIntro",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_ServiceIntro,
        .hasIndex = 38,
        .offset = (uint32_t)offsetof(Price__storage_, serviceIntro),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "qas",
        .dataTypeSpecific.className = NULL,
        .number = Price_FieldNumber_Qas,
        .hasIndex = 39,
        .offset = (uint32_t)offsetof(Price__storage_, qas),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[Price class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(Price__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\"\001\007\000\002\017\000\003\t\000\004\005\000\005\010\000\007\021\000\010\013\000\t\013\000\n\013\000\r\n\000\016\n\000\017\r\000\020\r\000"
        "\021\017\000\022\010\000\024\r\000\025\r\000\026\021\000\027\t\000\030\014\000\031\n\000\032\013\000\033\t\000\034\022\000\035\023\000\036\013\000\037"
        "\013\000!\013\000\"\t\000#\016\000$\016\000%\014\000&\r\000\'\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - HGBankCard

@implementation HGBankCard

@dynamic id_p;
@dynamic cardNo;
@dynamic bank;
@dynamic city;
@dynamic branch;
@dynamic pic1;
@dynamic pic2;
@dynamic expiredDate;
@dynamic state;
@dynamic hgId;
@dynamic companyId;
@dynamic createTime;
@dynamic createType;
@dynamic createChannel;
@dynamic createStaffId;
@dynamic createStaffName;

typedef struct HGBankCard__storage_ {
  uint32_t _has_storage_[1];
  uint32_t state;
  uint32_t createType;
  NSString *cardNo;
  NSString *bank;
  NSString *city;
  NSString *branch;
  NSString *pic1;
  NSString *pic2;
  NSString *createChannel;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t expiredDate;
  uint64_t hgId;
  uint64_t companyId;
  uint64_t createTime;
  uint64_t createStaffId;
} HGBankCard__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = HGBankCard_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(HGBankCard__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "cardNo",
        .dataTypeSpecific.className = NULL,
        .number = HGBankCard_FieldNumber_CardNo,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(HGBankCard__storage_, cardNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bank",
        .dataTypeSpecific.className = NULL,
        .number = HGBankCard_FieldNumber_Bank,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(HGBankCard__storage_, bank),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "city",
        .dataTypeSpecific.className = NULL,
        .number = HGBankCard_FieldNumber_City,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(HGBankCard__storage_, city),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "branch",
        .dataTypeSpecific.className = NULL,
        .number = HGBankCard_FieldNumber_Branch,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(HGBankCard__storage_, branch),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pic1",
        .dataTypeSpecific.className = NULL,
        .number = HGBankCard_FieldNumber_Pic1,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(HGBankCard__storage_, pic1),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pic2",
        .dataTypeSpecific.className = NULL,
        .number = HGBankCard_FieldNumber_Pic2,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(HGBankCard__storage_, pic2),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expiredDate",
        .dataTypeSpecific.className = NULL,
        .number = HGBankCard_FieldNumber_ExpiredDate,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(HGBankCard__storage_, expiredDate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "state",
        .dataTypeSpecific.className = NULL,
        .number = HGBankCard_FieldNumber_State,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(HGBankCard__storage_, state),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "hgId",
        .dataTypeSpecific.className = NULL,
        .number = HGBankCard_FieldNumber_HgId,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(HGBankCard__storage_, hgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = HGBankCard_FieldNumber_CompanyId,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(HGBankCard__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = HGBankCard_FieldNumber_CreateTime,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(HGBankCard__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createType",
        .dataTypeSpecific.className = NULL,
        .number = HGBankCard_FieldNumber_CreateType,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(HGBankCard__storage_, createType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createChannel",
        .dataTypeSpecific.className = NULL,
        .number = HGBankCard_FieldNumber_CreateChannel,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(HGBankCard__storage_, createChannel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = HGBankCard_FieldNumber_CreateStaffId,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(HGBankCard__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = HGBankCard_FieldNumber_CreateStaffName,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(HGBankCard__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[HGBankCard class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(HGBankCard__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\t\002\006\000\010\013\000\n\004\000\013\t\000\014\n\000\r\n\000\016\r\000\017\r\000\020\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - CompanyHG

@implementation CompanyHG

@dynamic companyId;
@dynamic orgId;
@dynamic hgId;
@dynamic hgno;
@dynamic hgType;
@dynamic workType;
@dynamic branchIdsArray, branchIdsArray_Count;
@dynamic joinTime;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic superiorIdArray, superiorIdArray_Count;
@dynamic onduty;
@dynamic roleType;
@dynamic serviceTypesArray, serviceTypesArray_Count;
@dynamic orgIdsNewArray, orgIdsNewArray_Count;
@dynamic branchIdsNewArray, branchIdsNewArray_Count;

typedef struct CompanyHG__storage_ {
  uint32_t _has_storage_[1];
  uint32_t hgType;
  uint32_t workType;
  uint32_t onduty;
  uint32_t roleType;
  NSString *hgno;
  GPBUInt64Array *branchIdsArray;
  NSString *createStaffName;
  GPBUInt64Array *superiorIdArray;
  GPBUInt32Array *serviceTypesArray;
  GPBUInt64Array *orgIdsNewArray;
  GPBUInt64Array *branchIdsNewArray;
  uint64_t companyId;
  uint64_t orgId;
  uint64_t hgId;
  uint64_t joinTime;
  uint64_t createTime;
  uint64_t createStaffId;
} CompanyHG__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHG_FieldNumber_CompanyId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CompanyHG__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orgId",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHG_FieldNumber_OrgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CompanyHG__storage_, orgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "hgId",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHG_FieldNumber_HgId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(CompanyHG__storage_, hgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "hgno",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHG_FieldNumber_Hgno,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(CompanyHG__storage_, hgno),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hgType",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHG_FieldNumber_HgType,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(CompanyHG__storage_, hgType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "workType",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHG_FieldNumber_WorkType,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(CompanyHG__storage_, workType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "branchIdsArray",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHG_FieldNumber_BranchIdsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(CompanyHG__storage_, branchIdsArray),
        .flags = GPBFieldRepeated | GPBFieldPacked | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "joinTime",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHG_FieldNumber_JoinTime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(CompanyHG__storage_, joinTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHG_FieldNumber_CreateTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(CompanyHG__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHG_FieldNumber_CreateStaffId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(CompanyHG__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHG_FieldNumber_CreateStaffName,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(CompanyHG__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "superiorIdArray",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHG_FieldNumber_SuperiorIdArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(CompanyHG__storage_, superiorIdArray),
        .flags = GPBFieldRepeated | GPBFieldPacked | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "onduty",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHG_FieldNumber_Onduty,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(CompanyHG__storage_, onduty),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "roleType",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHG_FieldNumber_RoleType,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(CompanyHG__storage_, roleType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "serviceTypesArray",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHG_FieldNumber_ServiceTypesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(CompanyHG__storage_, serviceTypesArray),
        .flags = GPBFieldRepeated | GPBFieldPacked | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "orgIdsNewArray",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHG_FieldNumber_OrgIdsNewArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(CompanyHG__storage_, orgIdsNewArray),
        .flags = GPBFieldRepeated | GPBFieldPacked | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "branchIdsNewArray",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHG_FieldNumber_BranchIdsNewArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(CompanyHG__storage_, branchIdsNewArray),
        .flags = GPBFieldRepeated | GPBFieldPacked | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CompanyHG class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CompanyHG__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\017\001\t\000\002\005\000\003\004\000\005\006\000\006\010\000\007\000branchIds\000\010\010\000\t\n\000\n\r\000\013\017\000"
        "\014\000superiorId\000\016\010\000\017\000serviceTypes\000\020\000orgIdsN"
        "ew\000\021\000branchIdsNew\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - IDCardInfo

@implementation IDCardInfo

@dynamic issuedBy;
@dynamic idcardExpiredDate;
@dynamic side;
@dynamic sex;
@dynamic fullName;
@dynamic idcard;
@dynamic birthday;
@dynamic nativeplace;
@dynamic nation;
@dynamic age;

typedef struct IDCardInfo__storage_ {
  uint32_t _has_storage_[1];
  uint32_t side;
  uint32_t sex;
  uint32_t age;
  NSString *issuedBy;
  NSString *fullName;
  NSString *idcard;
  NSString *birthday;
  NSString *nativeplace;
  NSString *nation;
  uint64_t idcardExpiredDate;
} IDCardInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "issuedBy",
        .dataTypeSpecific.className = NULL,
        .number = IDCardInfo_FieldNumber_IssuedBy,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(IDCardInfo__storage_, issuedBy),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idcardExpiredDate",
        .dataTypeSpecific.className = NULL,
        .number = IDCardInfo_FieldNumber_IdcardExpiredDate,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(IDCardInfo__storage_, idcardExpiredDate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "side",
        .dataTypeSpecific.className = NULL,
        .number = IDCardInfo_FieldNumber_Side,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(IDCardInfo__storage_, side),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "sex",
        .dataTypeSpecific.className = NULL,
        .number = IDCardInfo_FieldNumber_Sex,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(IDCardInfo__storage_, sex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "fullName",
        .dataTypeSpecific.className = NULL,
        .number = IDCardInfo_FieldNumber_FullName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(IDCardInfo__storage_, fullName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idcard",
        .dataTypeSpecific.className = NULL,
        .number = IDCardInfo_FieldNumber_Idcard,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(IDCardInfo__storage_, idcard),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "birthday",
        .dataTypeSpecific.className = NULL,
        .number = IDCardInfo_FieldNumber_Birthday,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(IDCardInfo__storage_, birthday),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nativeplace",
        .dataTypeSpecific.className = NULL,
        .number = IDCardInfo_FieldNumber_Nativeplace,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(IDCardInfo__storage_, nativeplace),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nation",
        .dataTypeSpecific.className = NULL,
        .number = IDCardInfo_FieldNumber_Nation,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(IDCardInfo__storage_, nation),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "age",
        .dataTypeSpecific.className = NULL,
        .number = IDCardInfo_FieldNumber_Age,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(IDCardInfo__storage_, age),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[IDCardInfo class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(IDCardInfo__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\002\021\000\005\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - RoleModel

@implementation RoleModel

@dynamic roleId;
@dynamic companyId;
@dynamic roleName;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;

typedef struct RoleModel__storage_ {
  uint32_t _has_storage_[1];
  NSString *roleName;
  NSString *createStaffName;
  uint64_t roleId;
  uint64_t companyId;
  uint64_t createTime;
  uint64_t createStaffId;
} RoleModel__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "roleId",
        .dataTypeSpecific.className = NULL,
        .number = RoleModel_FieldNumber_RoleId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(RoleModel__storage_, roleId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = RoleModel_FieldNumber_CompanyId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(RoleModel__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "roleName",
        .dataTypeSpecific.className = NULL,
        .number = RoleModel_FieldNumber_RoleName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(RoleModel__storage_, roleName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = RoleModel_FieldNumber_CreateTime,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(RoleModel__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = RoleModel_FieldNumber_CreateStaffId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(RoleModel__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = RoleModel_FieldNumber_CreateStaffName,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(RoleModel__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[RoleModel class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(RoleModel__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001\006\000\002\t\000\003\010\000\004\n\000\005\r\000\006\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - CompanyHGRole

@implementation CompanyHGRole

@dynamic companyId;
@dynamic orgId;
@dynamic branchId;
@dynamic hgId;
@dynamic roleId;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic roleName;

typedef struct CompanyHGRole__storage_ {
  uint32_t _has_storage_[1];
  NSString *createStaffName;
  NSString *roleName;
  uint64_t companyId;
  uint64_t orgId;
  uint64_t branchId;
  uint64_t hgId;
  uint64_t roleId;
  uint64_t createTime;
  uint64_t createStaffId;
} CompanyHGRole__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHGRole_FieldNumber_CompanyId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CompanyHGRole__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orgId",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHGRole_FieldNumber_OrgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CompanyHGRole__storage_, orgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "branchId",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHGRole_FieldNumber_BranchId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(CompanyHGRole__storage_, branchId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "hgId",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHGRole_FieldNumber_HgId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(CompanyHGRole__storage_, hgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "roleId",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHGRole_FieldNumber_RoleId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(CompanyHGRole__storage_, roleId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHGRole_FieldNumber_CreateTime,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(CompanyHGRole__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHGRole_FieldNumber_CreateStaffId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(CompanyHGRole__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHGRole_FieldNumber_CreateStaffName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(CompanyHGRole__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "roleName",
        .dataTypeSpecific.className = NULL,
        .number = CompanyHGRole_FieldNumber_RoleName,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(CompanyHGRole__storage_, roleName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CompanyHGRole class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CompanyHGRole__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\t\001\t\000\002\005\000\003\010\000\004\004\000\005\006\000\006\n\000\007\r\000\010\017\000\t\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - RightConfig

@implementation RightConfig

@dynamic id_p;
@dynamic companyId;
@dynamic roleId;
@dynamic hgIdListArray, hgIdListArray_Count;
@dynamic scopeType;
@dynamic scopeListArray, scopeListArray_Count;
@dynamic rightListArray, rightListArray_Count;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;

typedef struct RightConfig__storage_ {
  uint32_t _has_storage_[1];
  uint32_t scopeType;
  GPBUInt64Array *hgIdListArray;
  GPBUInt64Array *scopeListArray;
  NSMutableArray *rightListArray;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t companyId;
  uint64_t roleId;
  uint64_t createTime;
  uint64_t createStaffId;
} RightConfig__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = RightConfig_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(RightConfig__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = RightConfig_FieldNumber_CompanyId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(RightConfig__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "roleId",
        .dataTypeSpecific.className = NULL,
        .number = RightConfig_FieldNumber_RoleId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(RightConfig__storage_, roleId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "hgIdListArray",
        .dataTypeSpecific.className = NULL,
        .number = RightConfig_FieldNumber_HgIdListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(RightConfig__storage_, hgIdListArray),
        .flags = GPBFieldRepeated | GPBFieldPacked | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "scopeType",
        .dataTypeSpecific.className = NULL,
        .number = RightConfig_FieldNumber_ScopeType,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(RightConfig__storage_, scopeType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "scopeListArray",
        .dataTypeSpecific.className = NULL,
        .number = RightConfig_FieldNumber_ScopeListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(RightConfig__storage_, scopeListArray),
        .flags = GPBFieldRepeated | GPBFieldPacked | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "rightListArray",
        .dataTypeSpecific.className = NULL,
        .number = RightConfig_FieldNumber_RightListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(RightConfig__storage_, rightListArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = RightConfig_FieldNumber_CreateTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(RightConfig__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = RightConfig_FieldNumber_CreateStaffId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(RightConfig__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = RightConfig_FieldNumber_CreateStaffName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(RightConfig__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[RightConfig class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(RightConfig__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\t\002\t\000\003\006\000\004\000hgIdList\000\005\t\000\006\000scopeList\000\007\000right"
        "List\000\010\n\000\t\r\000\n\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UserAddress

@implementation UserAddress

@dynamic addrId;
@dynamic userId;
@dynamic province;
@dynamic city;
@dynamic cityCode;
@dynamic district;
@dynamic adCode;
@dynamic street;
@dynamic building;
@dynamic addrDetail;
@dynamic businessName;
@dynamic businessCode;
@dynamic phone;
@dynamic contacts;
@dynamic phone2;
@dynamic contacts2;
@dynamic gpsType;
@dynamic lng;
@dynamic lat;
@dynamic createTime;
@dynamic createType;
@dynamic createChannel;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic defaultUse;
@dynamic enabled;

typedef struct UserAddress__storage_ {
  uint32_t _has_storage_[1];
  uint32_t gpsType;
  uint32_t createType;
  uint32_t enabled;
  NSString *province;
  NSString *city;
  NSString *cityCode;
  NSString *district;
  NSString *adCode;
  NSString *street;
  NSString *building;
  NSString *addrDetail;
  NSString *businessName;
  NSString *businessCode;
  NSString *phone;
  NSString *contacts;
  NSString *phone2;
  NSString *contacts2;
  NSString *createTime;
  NSString *createChannel;
  NSString *createStaffName;
  uint64_t addrId;
  uint64_t userId;
  double lng;
  double lat;
  uint64_t createStaffId;
  uint64_t defaultUse;
} UserAddress__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "addrId",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_AddrId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UserAddress__storage_, addrId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UserAddress__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "province",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_Province,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UserAddress__storage_, province),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "city",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_City,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UserAddress__storage_, city),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "cityCode",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_CityCode,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UserAddress__storage_, cityCode),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "district",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_District,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UserAddress__storage_, district),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "adCode",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_AdCode,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UserAddress__storage_, adCode),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "street",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_Street,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UserAddress__storage_, street),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "building",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_Building,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UserAddress__storage_, building),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "addrDetail",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_AddrDetail,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(UserAddress__storage_, addrDetail),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "businessName",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_BusinessName,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(UserAddress__storage_, businessName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "businessCode",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_BusinessCode,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(UserAddress__storage_, businessCode),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "phone",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_Phone,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(UserAddress__storage_, phone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contacts",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_Contacts,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(UserAddress__storage_, contacts),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "phone2",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_Phone2,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(UserAddress__storage_, phone2),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contacts2",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_Contacts2,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(UserAddress__storage_, contacts2),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "gpsType",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_GpsType,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(UserAddress__storage_, gpsType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "lng",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_Lng,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(UserAddress__storage_, lng),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "lat",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_Lat,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(UserAddress__storage_, lat),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_CreateTime,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(UserAddress__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createType",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_CreateType,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(UserAddress__storage_, createType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createChannel",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_CreateChannel,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(UserAddress__storage_, createChannel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_CreateStaffId,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(UserAddress__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_CreateStaffName,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(UserAddress__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "defaultUse",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_DefaultUse,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(UserAddress__storage_, defaultUse),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "enabled",
        .dataTypeSpecific.className = NULL,
        .number = UserAddress_FieldNumber_Enabled,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(UserAddress__storage_, enabled),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserAddress class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UserAddress__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\016\001\006\000\002\006\000\005\010\000\007\006\000\n\n\000\013\014\000\014\014\000\021\007\000\024\n\000\025\n\000\026\r\000\027\r\000\030\017\000"
        "\031\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UserAddressVO

@implementation UserAddressVO

@dynamic addrId;
@dynamic userId;
@dynamic province;
@dynamic city;
@dynamic district;
@dynamic building;
@dynamic addrDetail;
@dynamic addressInfo;
@dynamic defaultUse;
@dynamic lng;
@dynamic lat;
@dynamic adCode;
@dynamic contacts;
@dynamic phone;

typedef struct UserAddressVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t defaultUse;
  NSString *province;
  NSString *city;
  NSString *district;
  NSString *building;
  NSString *addrDetail;
  NSString *addressInfo;
  NSString *adCode;
  NSString *contacts;
  NSString *phone;
  uint64_t addrId;
  uint64_t userId;
  double lng;
  double lat;
} UserAddressVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "addrId",
        .dataTypeSpecific.className = NULL,
        .number = UserAddressVO_FieldNumber_AddrId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UserAddressVO__storage_, addrId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UserAddressVO_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UserAddressVO__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "province",
        .dataTypeSpecific.className = NULL,
        .number = UserAddressVO_FieldNumber_Province,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UserAddressVO__storage_, province),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "city",
        .dataTypeSpecific.className = NULL,
        .number = UserAddressVO_FieldNumber_City,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UserAddressVO__storage_, city),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "district",
        .dataTypeSpecific.className = NULL,
        .number = UserAddressVO_FieldNumber_District,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UserAddressVO__storage_, district),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "building",
        .dataTypeSpecific.className = NULL,
        .number = UserAddressVO_FieldNumber_Building,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UserAddressVO__storage_, building),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "addrDetail",
        .dataTypeSpecific.className = NULL,
        .number = UserAddressVO_FieldNumber_AddrDetail,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UserAddressVO__storage_, addrDetail),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "addressInfo",
        .dataTypeSpecific.className = NULL,
        .number = UserAddressVO_FieldNumber_AddressInfo,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UserAddressVO__storage_, addressInfo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "defaultUse",
        .dataTypeSpecific.className = NULL,
        .number = UserAddressVO_FieldNumber_DefaultUse,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UserAddressVO__storage_, defaultUse),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "lng",
        .dataTypeSpecific.className = NULL,
        .number = UserAddressVO_FieldNumber_Lng,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(UserAddressVO__storage_, lng),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "lat",
        .dataTypeSpecific.className = NULL,
        .number = UserAddressVO_FieldNumber_Lat,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(UserAddressVO__storage_, lat),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "adCode",
        .dataTypeSpecific.className = NULL,
        .number = UserAddressVO_FieldNumber_AdCode,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(UserAddressVO__storage_, adCode),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contacts",
        .dataTypeSpecific.className = NULL,
        .number = UserAddressVO_FieldNumber_Contacts,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(UserAddressVO__storage_, contacts),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "phone",
        .dataTypeSpecific.className = NULL,
        .number = UserAddressVO_FieldNumber_Phone,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(UserAddressVO__storage_, phone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserAddressVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UserAddressVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001\006\000\002\006\000\007\n\000\010\013\000\t\n\000\014\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UserBank

@implementation UserBank

@dynamic id_p;
@dynamic userId;
@dynamic cardholderName;
@dynamic bankName;
@dynamic cardNo;
@dynamic bankBranch;
@dynamic bankType;
@dynamic updateTime;
@dynamic createTime;
@dynamic status;

typedef struct UserBank__storage_ {
  uint32_t _has_storage_[1];
  uint32_t bankType;
  int32_t status;
  NSString *cardholderName;
  NSString *bankName;
  NSString *cardNo;
  NSString *bankBranch;
  NSString *updateTime;
  NSString *createTime;
  uint64_t id_p;
  uint64_t userId;
} UserBank__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = UserBank_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UserBank__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UserBank_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UserBank__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "cardholderName",
        .dataTypeSpecific.className = NULL,
        .number = UserBank_FieldNumber_CardholderName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UserBank__storage_, cardholderName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bankName",
        .dataTypeSpecific.className = NULL,
        .number = UserBank_FieldNumber_BankName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UserBank__storage_, bankName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "cardNo",
        .dataTypeSpecific.className = NULL,
        .number = UserBank_FieldNumber_CardNo,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UserBank__storage_, cardNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bankBranch",
        .dataTypeSpecific.className = NULL,
        .number = UserBank_FieldNumber_BankBranch,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UserBank__storage_, bankBranch),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bankType",
        .dataTypeSpecific.className = NULL,
        .number = UserBank_FieldNumber_BankType,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UserBank__storage_, bankType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "updateTime",
        .dataTypeSpecific.className = NULL,
        .number = UserBank_FieldNumber_UpdateTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UserBank__storage_, updateTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = UserBank_FieldNumber_CreateTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UserBank__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = UserBank_FieldNumber_Status,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(UserBank__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserBank class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UserBank__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\002\006\000\003\016\000\004\010\000\005\005A\000\006\n\000\007\010\000\010\n\000\t\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UserBankVO

@implementation UserBankVO

@dynamic hasBank, bank;
@dynamic cardNostr;
@dynamic bankTypeStr;

typedef struct UserBankVO__storage_ {
  uint32_t _has_storage_[1];
  UserBank *bank;
  NSString *cardNostr;
  NSString *bankTypeStr;
} UserBankVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "bank",
        .dataTypeSpecific.className = GPBStringifySymbol(UserBank),
        .number = UserBankVO_FieldNumber_Bank,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UserBankVO__storage_, bank),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "cardNostr",
        .dataTypeSpecific.className = NULL,
        .number = UserBankVO_FieldNumber_CardNostr,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UserBankVO__storage_, cardNostr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bankTypeStr",
        .dataTypeSpecific.className = NULL,
        .number = UserBankVO_FieldNumber_BankTypeStr,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UserBankVO__storage_, bankTypeStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserBankVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UserBankVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\002\005b\002\000\003\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Kinsfolk

@implementation Kinsfolk

@dynamic kinsfolkId;
@dynamic userId;
@dynamic phone;
@dynamic fullName;
@dynamic sex;
@dynamic birthday;
@dynamic pic;
@dynamic nativeplace;
@dynamic province;
@dynamic city;
@dynamic district;
@dynamic address;
@dynamic languageArray, languageArray_Count;
@dynamic religion;
@dynamic nation;
@dynamic height;
@dynamic weight;
@dynamic education;
@dynamic marriage;
@dynamic idcard;
@dynamic idcardpic;
@dynamic idcardpic2;
@dynamic idcardpic3;
@dynamic idcardExpiredDate;
@dynamic createTime;
@dynamic createType;
@dynamic createChannel;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic relation;
@dynamic age;
@dynamic contactsPhone;
@dynamic contacts;
@dynamic contactsRelation;
@dynamic contacts2Phone;
@dynamic contacts2;
@dynamic contacts2Relation;
@dynamic physicalState;
@dynamic medicalNo;
@dynamic actAbility;
@dynamic defaultUse;
@dynamic enable;
@dynamic remark;
@dynamic medicareType;
@dynamic healthCareNo;
@dynamic dwelling;
@dynamic professionType;
@dynamic incomeArray, incomeArray_Count;
@dynamic childrenStatus1;
@dynamic childrenStatus2;
@dynamic infoChannelArray, infoChannelArray_Count;
@dynamic assessManArray, assessManArray_Count;
@dynamic housingType;
@dynamic nurseType;
@dynamic evalId;
@dynamic healthCareImg;
@dynamic kinsfolkImg;
@dynamic staffType;
@dynamic papersType;

typedef struct Kinsfolk__storage_ {
  uint32_t _has_storage_[2];
  uint32_t sex;
  uint32_t education;
  uint32_t marriage;
  uint32_t createType;
  uint32_t age;
  uint32_t actAbility;
  int32_t enable;
  uint32_t medicareType;
  uint32_t dwelling;
  uint32_t professionType;
  uint32_t childrenStatus1;
  uint32_t childrenStatus2;
  uint32_t nurseType;
  uint32_t staffType;
  uint32_t papersType;
  NSString *phone;
  NSString *fullName;
  NSString *birthday;
  NSString *pic;
  NSString *nativeplace;
  NSString *province;
  NSString *city;
  NSString *district;
  NSString *address;
  GPBUInt32Array *languageArray;
  NSString *religion;
  NSString *nation;
  NSString *height;
  NSString *weight;
  NSString *idcard;
  NSString *idcardpic;
  NSString *idcardpic2;
  NSString *idcardpic3;
  NSString *idcardExpiredDate;
  NSString *createTime;
  NSString *createChannel;
  NSString *createStaffName;
  NSString *relation;
  NSString *contactsPhone;
  NSString *contacts;
  NSString *contactsRelation;
  NSString *contacts2Phone;
  NSString *contacts2;
  NSString *contacts2Relation;
  NSString *physicalState;
  NSString *medicalNo;
  NSString *remark;
  NSString *healthCareNo;
  NSMutableArray *incomeArray;
  NSMutableArray *infoChannelArray;
  NSMutableArray *assessManArray;
  NSString *housingType;
  NSString *healthCareImg;
  NSString *kinsfolkImg;
  uint64_t kinsfolkId;
  uint64_t userId;
  uint64_t createStaffId;
  uint64_t defaultUse;
  uint64_t evalId;
} Kinsfolk__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "kinsfolkId",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_KinsfolkId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, kinsfolkId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "phone",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Phone,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, phone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fullName",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_FullName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, fullName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sex",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Sex,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, sex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "birthday",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Birthday,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, birthday),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pic",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Pic,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, pic),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nativeplace",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Nativeplace,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, nativeplace),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "province",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Province,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, province),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "city",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_City,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, city),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "district",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_District,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, district),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "address",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Address,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, address),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "languageArray",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_LanguageArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, languageArray),
        .flags = GPBFieldRepeated | GPBFieldPacked,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "religion",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Religion,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, religion),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nation",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Nation,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, nation),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "height",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Height,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, height),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "weight",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Weight,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, weight),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "education",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Education,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, education),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "marriage",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Marriage,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, marriage),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "idcard",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Idcard,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, idcard),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idcardpic",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Idcardpic,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, idcardpic),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idcardpic2",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Idcardpic2,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, idcardpic2),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idcardpic3",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Idcardpic3,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, idcardpic3),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idcardExpiredDate",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_IdcardExpiredDate,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, idcardExpiredDate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_CreateTime,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createType",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_CreateType,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, createType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createChannel",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_CreateChannel,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, createChannel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_CreateStaffId,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_CreateStaffName,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "relation",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Relation,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, relation),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "age",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Age,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, age),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "contactsPhone",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_ContactsPhone,
        .hasIndex = 30,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, contactsPhone),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contacts",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Contacts,
        .hasIndex = 31,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, contacts),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contactsRelation",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_ContactsRelation,
        .hasIndex = 32,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, contactsRelation),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contacts2Phone",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Contacts2Phone,
        .hasIndex = 33,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, contacts2Phone),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contacts2",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Contacts2,
        .hasIndex = 34,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, contacts2),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contacts2Relation",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Contacts2Relation,
        .hasIndex = 35,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, contacts2Relation),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "physicalState",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_PhysicalState,
        .hasIndex = 36,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, physicalState),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "medicalNo",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_MedicalNo,
        .hasIndex = 37,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, medicalNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "actAbility",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_ActAbility,
        .hasIndex = 38,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, actAbility),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "defaultUse",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_DefaultUse,
        .hasIndex = 39,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, defaultUse),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "enable",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Enable,
        .hasIndex = 40,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, enable),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "remark",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Remark,
        .hasIndex = 41,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, remark),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "medicareType",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_MedicareType,
        .hasIndex = 42,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, medicareType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "healthCareNo",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_HealthCareNo,
        .hasIndex = 43,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, healthCareNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "dwelling",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_Dwelling,
        .hasIndex = 44,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, dwelling),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "professionType",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_ProfessionType,
        .hasIndex = 45,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, professionType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "incomeArray",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_IncomeArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, incomeArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "childrenStatus1",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_ChildrenStatus1,
        .hasIndex = 46,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, childrenStatus1),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "childrenStatus2",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_ChildrenStatus2,
        .hasIndex = 47,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, childrenStatus2),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "infoChannelArray",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_InfoChannelArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, infoChannelArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "assessManArray",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_AssessManArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, assessManArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "housingType",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_HousingType,
        .hasIndex = 48,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, housingType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nurseType",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_NurseType,
        .hasIndex = 49,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, nurseType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "evalId",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_EvalId,
        .hasIndex = 50,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, evalId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "healthCareImg",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_HealthCareImg,
        .hasIndex = 51,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, healthCareImg),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "kinsfolkImg",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_KinsfolkImg,
        .hasIndex = 52,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, kinsfolkImg),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "staffType",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_StaffType,
        .hasIndex = 53,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, staffType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "papersType",
        .dataTypeSpecific.className = NULL,
        .number = Kinsfolk_FieldNumber_PapersType,
        .hasIndex = 54,
        .offset = (uint32_t)offsetof(Kinsfolk__storage_, papersType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[Kinsfolk class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(Kinsfolk__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\037\001\n\000\002\006\000\004\010\000\030\021\000\031\n\000\032\n\000\033\r\000\034\r\000\035\017\000 \r\000\"\020\000#\016\000%\021\000"
        "&\r\000\'\010A\000(\n\000)\n\000,\014\000-\013A\000/\016\0001\017\0002\017\0003\000infoChann"
        "el\0004\000assessMan\0005\013\0006\t\0007\006\0008\r\0009\013\000:\t\000;\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UserAccount

@implementation UserAccount

@dynamic userId;
@dynamic companyId;
@dynamic account;
@dynamic present;
@dynamic totalAccount;
@dynamic integral;
@dynamic totalIntegral;
@dynamic createTime;

typedef struct UserAccount__storage_ {
  uint32_t _has_storage_[1];
  uint64_t userId;
  uint64_t companyId;
  uint64_t account;
  uint64_t present;
  uint64_t totalAccount;
  uint64_t integral;
  uint64_t totalIntegral;
  uint64_t createTime;
} UserAccount__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UserAccount_FieldNumber_UserId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UserAccount__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = UserAccount_FieldNumber_CompanyId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UserAccount__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "account",
        .dataTypeSpecific.className = NULL,
        .number = UserAccount_FieldNumber_Account,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UserAccount__storage_, account),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "present",
        .dataTypeSpecific.className = NULL,
        .number = UserAccount_FieldNumber_Present,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UserAccount__storage_, present),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "totalAccount",
        .dataTypeSpecific.className = NULL,
        .number = UserAccount_FieldNumber_TotalAccount,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UserAccount__storage_, totalAccount),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "integral",
        .dataTypeSpecific.className = NULL,
        .number = UserAccount_FieldNumber_Integral,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UserAccount__storage_, integral),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "totalIntegral",
        .dataTypeSpecific.className = NULL,
        .number = UserAccount_FieldNumber_TotalIntegral,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UserAccount__storage_, totalIntegral),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = UserAccount_FieldNumber_CreateTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UserAccount__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserAccount class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UserAccount__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001\006\000\002\t\000\005\014\000\007\r\000\010\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UserAccountRecord

@implementation UserAccountRecord

@dynamic id_p;
@dynamic userId;
@dynamic companyId;
@dynamic changeAccount;
@dynamic account;
@dynamic changeType;
@dynamic changeDesc;
@dynamic orderId;
@dynamic createTime;
@dynamic remark;

typedef struct UserAccountRecord__storage_ {
  uint32_t _has_storage_[1];
  uint32_t changeType;
  NSString *changeDesc;
  NSString *orderId;
  NSString *remark;
  uint64_t id_p;
  uint64_t userId;
  uint64_t companyId;
  int64_t changeAccount;
  uint64_t account;
  uint64_t createTime;
} UserAccountRecord__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = UserAccountRecord_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UserAccountRecord__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UserAccountRecord_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UserAccountRecord__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = UserAccountRecord_FieldNumber_CompanyId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UserAccountRecord__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "changeAccount",
        .dataTypeSpecific.className = NULL,
        .number = UserAccountRecord_FieldNumber_ChangeAccount,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UserAccountRecord__storage_, changeAccount),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "account",
        .dataTypeSpecific.className = NULL,
        .number = UserAccountRecord_FieldNumber_Account,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UserAccountRecord__storage_, account),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "changeType",
        .dataTypeSpecific.className = NULL,
        .number = UserAccountRecord_FieldNumber_ChangeType,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UserAccountRecord__storage_, changeType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "changeDesc",
        .dataTypeSpecific.className = NULL,
        .number = UserAccountRecord_FieldNumber_ChangeDesc,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UserAccountRecord__storage_, changeDesc),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "orderId",
        .dataTypeSpecific.className = NULL,
        .number = UserAccountRecord_FieldNumber_OrderId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UserAccountRecord__storage_, orderId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = UserAccountRecord_FieldNumber_CreateTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UserAccountRecord__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "remark",
        .dataTypeSpecific.className = NULL,
        .number = UserAccountRecord_FieldNumber_Remark,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(UserAccountRecord__storage_, remark),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserAccountRecord class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UserAccountRecord__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\002\006\000\003\t\000\004\r\000\006\n\000\007\n\000\010\007\000\t\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UserIntegralRecord

@implementation UserIntegralRecord

@dynamic id_p;
@dynamic userId;
@dynamic companyId;
@dynamic changeIntegral;
@dynamic integral;
@dynamic changeType;
@dynamic changeDesc;
@dynamic orderId;
@dynamic createTime;

typedef struct UserIntegralRecord__storage_ {
  uint32_t _has_storage_[1];
  uint32_t changeType;
  NSString *changeDesc;
  NSString *orderId;
  uint64_t id_p;
  uint64_t userId;
  uint64_t companyId;
  uint64_t changeIntegral;
  uint64_t integral;
  uint64_t createTime;
} UserIntegralRecord__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = UserIntegralRecord_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UserIntegralRecord__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UserIntegralRecord_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UserIntegralRecord__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = UserIntegralRecord_FieldNumber_CompanyId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UserIntegralRecord__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "changeIntegral",
        .dataTypeSpecific.className = NULL,
        .number = UserIntegralRecord_FieldNumber_ChangeIntegral,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UserIntegralRecord__storage_, changeIntegral),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "integral",
        .dataTypeSpecific.className = NULL,
        .number = UserIntegralRecord_FieldNumber_Integral,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UserIntegralRecord__storage_, integral),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "changeType",
        .dataTypeSpecific.className = NULL,
        .number = UserIntegralRecord_FieldNumber_ChangeType,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UserIntegralRecord__storage_, changeType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "changeDesc",
        .dataTypeSpecific.className = NULL,
        .number = UserIntegralRecord_FieldNumber_ChangeDesc,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UserIntegralRecord__storage_, changeDesc),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "orderId",
        .dataTypeSpecific.className = NULL,
        .number = UserIntegralRecord_FieldNumber_OrderId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UserIntegralRecord__storage_, orderId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = UserIntegralRecord_FieldNumber_CreateTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UserIntegralRecord__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserIntegralRecord class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UserIntegralRecord__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\002\006\000\003\t\000\004\016\000\006\n\000\007\n\000\010\007\000\t\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UserWithdrawRecord

@implementation UserWithdrawRecord

@dynamic id_p;
@dynamic userId;
@dynamic companyId;
@dynamic userName;
@dynamic phone;
@dynamic fee;
@dynamic account;
@dynamic status;
@dynamic createTime;
@dynamic acceptTime;
@dynamic updateStaffId;
@dynamic updateStaffName;
@dynamic bankId;

typedef struct UserWithdrawRecord__storage_ {
  uint32_t _has_storage_[1];
  uint32_t status;
  NSString *userName;
  NSString *phone;
  NSString *updateStaffName;
  uint64_t id_p;
  uint64_t userId;
  uint64_t companyId;
  uint64_t fee;
  uint64_t account;
  uint64_t createTime;
  uint64_t acceptTime;
  uint64_t updateStaffId;
  uint64_t bankId;
} UserWithdrawRecord__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = UserWithdrawRecord_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UserWithdrawRecord__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UserWithdrawRecord_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UserWithdrawRecord__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = UserWithdrawRecord_FieldNumber_CompanyId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UserWithdrawRecord__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userName",
        .dataTypeSpecific.className = NULL,
        .number = UserWithdrawRecord_FieldNumber_UserName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UserWithdrawRecord__storage_, userName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "phone",
        .dataTypeSpecific.className = NULL,
        .number = UserWithdrawRecord_FieldNumber_Phone,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UserWithdrawRecord__storage_, phone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fee",
        .dataTypeSpecific.className = NULL,
        .number = UserWithdrawRecord_FieldNumber_Fee,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UserWithdrawRecord__storage_, fee),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "account",
        .dataTypeSpecific.className = NULL,
        .number = UserWithdrawRecord_FieldNumber_Account,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UserWithdrawRecord__storage_, account),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = UserWithdrawRecord_FieldNumber_Status,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UserWithdrawRecord__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = UserWithdrawRecord_FieldNumber_CreateTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UserWithdrawRecord__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "acceptTime",
        .dataTypeSpecific.className = NULL,
        .number = UserWithdrawRecord_FieldNumber_AcceptTime,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(UserWithdrawRecord__storage_, acceptTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "updateStaffId",
        .dataTypeSpecific.className = NULL,
        .number = UserWithdrawRecord_FieldNumber_UpdateStaffId,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(UserWithdrawRecord__storage_, updateStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "updateStaffName",
        .dataTypeSpecific.className = NULL,
        .number = UserWithdrawRecord_FieldNumber_UpdateStaffName,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(UserWithdrawRecord__storage_, updateStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bankId",
        .dataTypeSpecific.className = NULL,
        .number = UserWithdrawRecord_FieldNumber_BankId,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(UserWithdrawRecord__storage_, bankId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserWithdrawRecord class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UserWithdrawRecord__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\002\006\000\003\t\000\004\010\000\t\n\000\n\n\000\013\r\000\014\017\000\r\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SystemMessage

@implementation SystemMessage

@dynamic id_p;
@dynamic fromUserId;
@dynamic toUserId;
@dynamic msgType;
@dynamic nativeURL;
@dynamic URL;
@dynamic content;
@dynamic createTime;
@dynamic state;
@dynamic invalidateTime;
@dynamic createTimeStr;
@dynamic msgTypeStr;

typedef struct SystemMessage__storage_ {
  uint32_t _has_storage_[1];
  uint32_t msgType;
  uint32_t state;
  NSString *nativeURL;
  NSString *URL;
  NSString *content;
  NSString *createTimeStr;
  NSString *msgTypeStr;
  uint64_t id_p;
  uint64_t fromUserId;
  uint64_t toUserId;
  uint64_t createTime;
  uint64_t invalidateTime;
} SystemMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = SystemMessage_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SystemMessage__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "fromUserId",
        .dataTypeSpecific.className = NULL,
        .number = SystemMessage_FieldNumber_FromUserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(SystemMessage__storage_, fromUserId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "toUserId",
        .dataTypeSpecific.className = NULL,
        .number = SystemMessage_FieldNumber_ToUserId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(SystemMessage__storage_, toUserId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "msgType",
        .dataTypeSpecific.className = NULL,
        .number = SystemMessage_FieldNumber_MsgType,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(SystemMessage__storage_, msgType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "nativeURL",
        .dataTypeSpecific.className = NULL,
        .number = SystemMessage_FieldNumber_NativeURL,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(SystemMessage__storage_, nativeURL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "URL",
        .dataTypeSpecific.className = NULL,
        .number = SystemMessage_FieldNumber_URL,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(SystemMessage__storage_, URL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = SystemMessage_FieldNumber_Content,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(SystemMessage__storage_, content),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = SystemMessage_FieldNumber_CreateTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(SystemMessage__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "state",
        .dataTypeSpecific.className = NULL,
        .number = SystemMessage_FieldNumber_State,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(SystemMessage__storage_, state),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "invalidateTime",
        .dataTypeSpecific.className = NULL,
        .number = SystemMessage_FieldNumber_InvalidateTime,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(SystemMessage__storage_, invalidateTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createTimeStr",
        .dataTypeSpecific.className = NULL,
        .number = SystemMessage_FieldNumber_CreateTimeStr,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(SystemMessage__storage_, createTimeStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgTypeStr",
        .dataTypeSpecific.className = NULL,
        .number = SystemMessage_FieldNumber_MsgTypeStr,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(SystemMessage__storage_, msgTypeStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SystemMessage class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SystemMessage__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\t\002\n\000\003\010\000\004\007\000\005\007!!\000\006!!!\000\010\n\000\n\016\000\013\r\000\014\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - SystemMessageVO

@implementation SystemMessageVO

@dynamic title;
@dynamic msgType;
@dynamic content;
@dynamic createTime;
@dynamic num;

typedef struct SystemMessageVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t msgType;
  uint32_t num;
  NSString *title;
  NSString *content;
  NSString *createTime;
} SystemMessageVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "title",
        .dataTypeSpecific.className = NULL,
        .number = SystemMessageVO_FieldNumber_Title,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SystemMessageVO__storage_, title),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgType",
        .dataTypeSpecific.className = NULL,
        .number = SystemMessageVO_FieldNumber_MsgType,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(SystemMessageVO__storage_, msgType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = SystemMessageVO_FieldNumber_Content,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(SystemMessageVO__storage_, content),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = SystemMessageVO_FieldNumber_CreateTime,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(SystemMessageVO__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "num",
        .dataTypeSpecific.className = NULL,
        .number = SystemMessageVO_FieldNumber_Num,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(SystemMessageVO__storage_, num),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[SystemMessageVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SystemMessageVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\004\007\000\007\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UserVO

@implementation UserVO

@dynamic id_p;
@dynamic name;
@dynamic phone;
@dynamic sex;
@dynamic account;
@dynamic present;
@dynamic integral;
@dynamic createTime;
@dynamic headImg;
@dynamic headImgURL;
@dynamic couponNum;
@dynamic msgNum;
@dynamic birthday;
@dynamic realName;
@dynamic idcard;
@dynamic isReal;
@dynamic bankNum;
@dynamic hasCash;

typedef struct UserVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t sex;
  uint32_t couponNum;
  uint32_t msgNum;
  uint32_t bankNum;
  NSString *name;
  NSString *phone;
  NSString *headImg;
  NSString *headImgURL;
  NSString *birthday;
  NSString *realName;
  NSString *idcard;
  uint64_t id_p;
  uint64_t account;
  uint64_t present;
  uint64_t integral;
  uint64_t createTime;
} UserVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = UserVO_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UserVO__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = UserVO_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UserVO__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "phone",
        .dataTypeSpecific.className = NULL,
        .number = UserVO_FieldNumber_Phone,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UserVO__storage_, phone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sex",
        .dataTypeSpecific.className = NULL,
        .number = UserVO_FieldNumber_Sex,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UserVO__storage_, sex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "account",
        .dataTypeSpecific.className = NULL,
        .number = UserVO_FieldNumber_Account,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UserVO__storage_, account),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "present",
        .dataTypeSpecific.className = NULL,
        .number = UserVO_FieldNumber_Present,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UserVO__storage_, present),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "integral",
        .dataTypeSpecific.className = NULL,
        .number = UserVO_FieldNumber_Integral,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UserVO__storage_, integral),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = UserVO_FieldNumber_CreateTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UserVO__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "headImg",
        .dataTypeSpecific.className = NULL,
        .number = UserVO_FieldNumber_HeadImg,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UserVO__storage_, headImg),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "headImgURL",
        .dataTypeSpecific.className = NULL,
        .number = UserVO_FieldNumber_HeadImgURL,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(UserVO__storage_, headImgURL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "couponNum",
        .dataTypeSpecific.className = NULL,
        .number = UserVO_FieldNumber_CouponNum,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(UserVO__storage_, couponNum),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "msgNum",
        .dataTypeSpecific.className = NULL,
        .number = UserVO_FieldNumber_MsgNum,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(UserVO__storage_, msgNum),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "birthday",
        .dataTypeSpecific.className = NULL,
        .number = UserVO_FieldNumber_Birthday,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(UserVO__storage_, birthday),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "realName",
        .dataTypeSpecific.className = NULL,
        .number = UserVO_FieldNumber_RealName,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(UserVO__storage_, realName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idcard",
        .dataTypeSpecific.className = NULL,
        .number = UserVO_FieldNumber_Idcard,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(UserVO__storage_, idcard),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isReal",
        .dataTypeSpecific.className = NULL,
        .number = UserVO_FieldNumber_IsReal,
        .hasIndex = 15,
        .offset = 16,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "bankNum",
        .dataTypeSpecific.className = NULL,
        .number = UserVO_FieldNumber_BankNum,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(UserVO__storage_, bankNum),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "hasCash",
        .dataTypeSpecific.className = NULL,
        .number = UserVO_FieldNumber_HasCash,
        .hasIndex = 18,
        .offset = 19,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UserVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\t\010\n\000\t\007\000\n\010!!\000\013\t\000\014\006\000\016\010\000\020\006\000\021\007\000\022\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - IndexServiceItem

@implementation IndexServiceItem

@dynamic id_p;
@dynamic cityIdListArray, cityIdListArray_Count;
@dynamic nativeURL;
@dynamic URL;
@dynamic icon;
@dynamic iconDesc;
@dynamic sort;
@dynamic createTime;
@dynamic updateTime;
@dynamic state;
@dynamic iconURL;
@dynamic st;

typedef struct IndexServiceItem__storage_ {
  uint32_t _has_storage_[1];
  uint32_t sort;
  uint32_t state;
  uint32_t st;
  GPBUInt32Array *cityIdListArray;
  NSString *nativeURL;
  NSString *URL;
  NSString *icon;
  NSString *iconDesc;
  NSString *iconURL;
  uint64_t id_p;
  uint64_t createTime;
  uint64_t updateTime;
} IndexServiceItem__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = IndexServiceItem_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(IndexServiceItem__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "cityIdListArray",
        .dataTypeSpecific.className = NULL,
        .number = IndexServiceItem_FieldNumber_CityIdListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(IndexServiceItem__storage_, cityIdListArray),
        .flags = GPBFieldRepeated | GPBFieldPacked | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "nativeURL",
        .dataTypeSpecific.className = NULL,
        .number = IndexServiceItem_FieldNumber_NativeURL,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(IndexServiceItem__storage_, nativeURL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "URL",
        .dataTypeSpecific.className = NULL,
        .number = IndexServiceItem_FieldNumber_URL,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(IndexServiceItem__storage_, URL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "icon",
        .dataTypeSpecific.className = NULL,
        .number = IndexServiceItem_FieldNumber_Icon,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(IndexServiceItem__storage_, icon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "iconDesc",
        .dataTypeSpecific.className = NULL,
        .number = IndexServiceItem_FieldNumber_IconDesc,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(IndexServiceItem__storage_, iconDesc),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sort",
        .dataTypeSpecific.className = NULL,
        .number = IndexServiceItem_FieldNumber_Sort,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(IndexServiceItem__storage_, sort),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = IndexServiceItem_FieldNumber_CreateTime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(IndexServiceItem__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "updateTime",
        .dataTypeSpecific.className = NULL,
        .number = IndexServiceItem_FieldNumber_UpdateTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(IndexServiceItem__storage_, updateTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "state",
        .dataTypeSpecific.className = NULL,
        .number = IndexServiceItem_FieldNumber_State,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(IndexServiceItem__storage_, state),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "iconURL",
        .dataTypeSpecific.className = NULL,
        .number = IndexServiceItem_FieldNumber_IconURL,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(IndexServiceItem__storage_, iconURL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "st",
        .dataTypeSpecific.className = NULL,
        .number = IndexServiceItem_FieldNumber_St,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(IndexServiceItem__storage_, st),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[IndexServiceItem class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(IndexServiceItem__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\002\000cityIdList\000\003\007!!\000\004!!!\000\006\010\000\010\n\000\t\n\000\013\005!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ServiceCityModel

@implementation ServiceCityModel

@dynamic cityId;
@dynamic cityName;
@dynamic provinceId;
@dynamic provinceName;

typedef struct ServiceCityModel__storage_ {
  uint32_t _has_storage_[1];
  uint32_t cityId;
  uint32_t provinceId;
  NSString *cityName;
  NSString *provinceName;
} ServiceCityModel__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "cityId",
        .dataTypeSpecific.className = NULL,
        .number = ServiceCityModel_FieldNumber_CityId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ServiceCityModel__storage_, cityId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "cityName",
        .dataTypeSpecific.className = NULL,
        .number = ServiceCityModel_FieldNumber_CityName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ServiceCityModel__storage_, cityName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "provinceId",
        .dataTypeSpecific.className = NULL,
        .number = ServiceCityModel_FieldNumber_ProvinceId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ServiceCityModel__storage_, provinceId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "provinceName",
        .dataTypeSpecific.className = NULL,
        .number = ServiceCityModel_FieldNumber_ProvinceName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ServiceCityModel__storage_, provinceName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ServiceCityModel class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ServiceCityModel__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001\006\000\002\010\000\003\n\000\004\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KinsfolkSnapshoot

@implementation KinsfolkSnapshoot

@dynamic id_p;
@dynamic kinsId;
@dynamic userId;
@dynamic name;
@dynamic sex;
@dynamic age;
@dynamic idCardPic;
@dynamic idcardNo;
@dynamic medicalNo;
@dynamic height;
@dynamic weight;
@dynamic actAbility;
@dynamic languageArray, languageArray_Count;
@dynamic memoInfo;
@dynamic createType;
@dynamic createStaffId;
@dynamic createChannel;
@dynamic createStaffName;
@dynamic createTime;
@dynamic medicareType;
@dynamic healthCareNo;

typedef struct KinsfolkSnapshoot__storage_ {
  uint32_t _has_storage_[1];
  uint32_t sex;
  uint32_t age;
  uint32_t actAbility;
  uint32_t createType;
  uint32_t medicareType;
  NSString *name;
  NSString *idcardNo;
  NSString *medicalNo;
  NSString *height;
  NSString *weight;
  GPBUInt32Array *languageArray;
  NSString *memoInfo;
  NSString *createChannel;
  NSString *createStaffName;
  NSString *createTime;
  NSString *healthCareNo;
  uint64_t id_p;
  uint64_t kinsId;
  uint64_t userId;
  uint64_t idCardPic;
  uint64_t createStaffId;
} KinsfolkSnapshoot__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "kinsId",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_KinsId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, kinsId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_UserId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_Name,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sex",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_Sex,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, sex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "age",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_Age,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, age),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "idCardPic",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_IdCardPic,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, idCardPic),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "idcardNo",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_IdcardNo,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, idcardNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "medicalNo",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_MedicalNo,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, medicalNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "height",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_Height,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, height),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "weight",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_Weight,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, weight),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "actAbility",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_ActAbility,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, actAbility),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "languageArray",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_LanguageArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, languageArray),
        .flags = GPBFieldRepeated | GPBFieldPacked,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "memoInfo",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_MemoInfo,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, memoInfo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createType",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_CreateType,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, createType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_CreateStaffId,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createChannel",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_CreateChannel,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, createChannel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_CreateStaffName,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_CreateTime,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "medicareType",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_MedicareType,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, medicareType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "healthCareNo",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkSnapshoot_FieldNumber_HealthCareNo,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(KinsfolkSnapshoot__storage_, healthCareNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KinsfolkSnapshoot class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KinsfolkSnapshoot__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\016\002\006\000\003\006\000\007\t\000\010\010\000\t\010A\000\014\n\000\016\010\000\017\n\000\020\r\000\021\r\000\022\017\000\023\n\000\024\014"
        "\000\025\013A\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MedicareType

@implementation MedicareType

@dynamic id_p;
@dynamic medicare;

typedef struct MedicareType__storage_ {
  uint32_t _has_storage_[1];
  uint32_t id_p;
  NSString *medicare;
} MedicareType__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = MedicareType_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MedicareType__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "medicare",
        .dataTypeSpecific.className = NULL,
        .number = MedicareType_FieldNumber_Medicare,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(MedicareType__storage_, medicare),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MedicareType class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MedicareType__storage_)
                                         flags:0];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OrgDistanceModel

@implementation OrgDistanceModel

@dynamic distance;
@dynamic hasOrgVo, orgVo;

typedef struct OrgDistanceModel__storage_ {
  uint32_t _has_storage_[1];
  OrgVO *orgVo;
  double distance;
} OrgDistanceModel__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "distance",
        .dataTypeSpecific.className = NULL,
        .number = OrgDistanceModel_FieldNumber_Distance,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OrgDistanceModel__storage_, distance),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "orgVo",
        .dataTypeSpecific.className = GPBStringifySymbol(OrgVO),
        .number = OrgDistanceModel_FieldNumber_OrgVo,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OrgDistanceModel__storage_, orgVo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OrgDistanceModel class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OrgDistanceModel__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\002\004A\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KinsfolkVO

@implementation KinsfolkVO

@dynamic kinsId;
@dynamic name;
@dynamic age;
@dynamic sex;
@dynamic relation;
@dynamic idCardNo;
@dynamic height;
@dynamic weight;
@dynamic physicalState;
@dynamic idPic;
@dynamic medicalNo;
@dynamic languageArray, languageArray_Count;
@dynamic idPicURL;
@dynamic actAbility;
@dynamic defaultUse;
@dynamic medicareType;
@dynamic medicare;
@dynamic insureFlag;
@dynamic insureDesc;
@dynamic score;
@dynamic healthCareNo;
@dynamic extraInfo;
@dynamic insureFlagType;
@dynamic healthCareImgURL;
@dynamic kinsfolkImgURL;
@dynamic staffType;
@dynamic idPic2URL;
@dynamic healthCareImgId;
@dynamic kinsfolkImgId;
@dynamic idPic2Id;

typedef struct KinsfolkVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t age;
  uint32_t sex;
  uint32_t actAbility;
  uint32_t medicareType;
  int32_t score;
  uint32_t insureFlagType;
  uint32_t staffType;
  NSString *name;
  NSString *relation;
  NSString *idCardNo;
  NSString *height;
  NSString *weight;
  NSString *physicalState;
  NSString *idPic;
  NSString *medicalNo;
  GPBUInt32Array *languageArray;
  NSString *idPicURL;
  NSString *medicare;
  NSString *insureDesc;
  NSString *healthCareNo;
  NSString *extraInfo;
  NSString *healthCareImgURL;
  NSString *kinsfolkImgURL;
  NSString *idPic2URL;
  NSString *healthCareImgId;
  NSString *kinsfolkImgId;
  NSString *idPic2Id;
  uint64_t kinsId;
} KinsfolkVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "kinsId",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_KinsId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, kinsId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "age",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_Age,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, age),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "sex",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_Sex,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, sex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "relation",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_Relation,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, relation),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idCardNo",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_IdCardNo,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, idCardNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "height",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_Height,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, height),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "weight",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_Weight,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, weight),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "physicalState",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_PhysicalState,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, physicalState),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idPic",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_IdPic,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, idPic),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "medicalNo",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_MedicalNo,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, medicalNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "languageArray",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_LanguageArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, languageArray),
        .flags = GPBFieldRepeated | GPBFieldPacked,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "idPicURL",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_IdPicURL,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, idPicURL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "actAbility",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_ActAbility,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, actAbility),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "defaultUse",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_DefaultUse,
        .hasIndex = 13,
        .offset = 14,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "medicareType",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_MedicareType,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, medicareType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "medicare",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_Medicare,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, medicare),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "insureFlag",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_InsureFlag,
        .hasIndex = 17,
        .offset = 18,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "insureDesc",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_InsureDesc,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, insureDesc),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "score",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_Score,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, score),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "healthCareNo",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_HealthCareNo,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, healthCareNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "extraInfo",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_ExtraInfo,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, extraInfo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "insureFlagType",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_InsureFlagType,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, insureFlagType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "healthCareImgURL",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_HealthCareImgURL,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, healthCareImgURL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "kinsfolkImgURL",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_KinsfolkImgURL,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, kinsfolkImgURL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "staffType",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_StaffType,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, staffType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "idPic2URL",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_IdPic2URL,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, idPic2URL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "healthCareImgId",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_HealthCareImgId,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, healthCareImgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "kinsfolkImgId",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_KinsfolkImgId,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, kinsfolkImgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idPic2Id",
        .dataTypeSpecific.className = NULL,
        .number = KinsfolkVO_FieldNumber_IdPic2Id,
        .hasIndex = 30,
        .offset = (uint32_t)offsetof(KinsfolkVO__storage_, idPic2Id),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KinsfolkVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KinsfolkVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\025\001\006\000\006\010\000\t\r\000\n\005\000\013\010A\000\r\006!!\000\016\n\000\017\n\000\020\014\000\022\n\000\023\n\000\025\013A"
        "\000\026\t\000\027\016\000\030\016!!\000\031\014!!\000\032\t\000\033\007!!\000\034\017\000\035\r\000\036\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - BedModelList

@implementation BedModelList

@dynamic bedListArray, bedListArray_Count;

typedef struct BedModelList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *bedListArray;
} BedModelList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "bedListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(BedModel),
        .number = BedModelList_FieldNumber_BedListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(BedModelList__storage_, bedListArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[BedModelList class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(BedModelList__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\000bedList\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - BranchModelList

@implementation BranchModelList

@dynamic branchListArray, branchListArray_Count;

typedef struct BranchModelList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *branchListArray;
} BranchModelList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "branchListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(BranchModel),
        .number = BranchModelList_FieldNumber_BranchListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(BranchModelList__storage_, branchListArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[BranchModelList class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(BranchModelList__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\002\000branchList\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OrgVO

@implementation OrgVO

@dynamic orgName;
@dynamic servicedNumber;
@dynamic worker;
@dynamic orgLevelStr;
@dynamic orgLevel;
@dynamic orgId;
@dynamic tagListArray, tagListArray_Count;
@dynamic isHis;
@dynamic isLocation;
@dynamic hisType;
@dynamic strategyURL;
@dynamic serviceDetail;

typedef struct OrgVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t worker;
  uint32_t orgLevel;
  uint32_t hisType;
  NSString *orgName;
  NSString *orgLevelStr;
  NSMutableArray *tagListArray;
  NSString *strategyURL;
  NSString *serviceDetail;
  uint64_t servicedNumber;
  uint64_t orgId;
} OrgVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "orgName",
        .dataTypeSpecific.className = NULL,
        .number = OrgVO_FieldNumber_OrgName,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OrgVO__storage_, orgName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "servicedNumber",
        .dataTypeSpecific.className = NULL,
        .number = OrgVO_FieldNumber_ServicedNumber,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OrgVO__storage_, servicedNumber),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "worker",
        .dataTypeSpecific.className = NULL,
        .number = OrgVO_FieldNumber_Worker,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OrgVO__storage_, worker),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "orgLevelStr",
        .dataTypeSpecific.className = NULL,
        .number = OrgVO_FieldNumber_OrgLevelStr,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OrgVO__storage_, orgLevelStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "orgLevel",
        .dataTypeSpecific.className = NULL,
        .number = OrgVO_FieldNumber_OrgLevel,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OrgVO__storage_, orgLevel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "orgId",
        .dataTypeSpecific.className = NULL,
        .number = OrgVO_FieldNumber_OrgId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OrgVO__storage_, orgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "tagListArray",
        .dataTypeSpecific.className = GPBStringifySymbol(OrgTagVO),
        .number = OrgVO_FieldNumber_TagListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OrgVO__storage_, tagListArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "isHis",
        .dataTypeSpecific.className = NULL,
        .number = OrgVO_FieldNumber_IsHis,
        .hasIndex = 6,
        .offset = 7,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "isLocation",
        .dataTypeSpecific.className = NULL,
        .number = OrgVO_FieldNumber_IsLocation,
        .hasIndex = 8,
        .offset = 9,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "hisType",
        .dataTypeSpecific.className = NULL,
        .number = OrgVO_FieldNumber_HisType,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OrgVO__storage_, hisType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "strategyURL",
        .dataTypeSpecific.className = NULL,
        .number = OrgVO_FieldNumber_StrategyURL,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OrgVO__storage_, strategyURL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serviceDetail",
        .dataTypeSpecific.className = NULL,
        .number = OrgVO_FieldNumber_ServiceDetail,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(OrgVO__storage_, serviceDetail),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OrgVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OrgVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\013\001\007\000\002\016\000\004\013\000\005\010\000\006\005\000\007\000tagList\000\010\005\000\t\n\000\n\007\000\013\t!!\000"
        "\014\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PermissionMenuItem

@implementation PermissionMenuItem

@dynamic menuType;
@dynamic name;
@dynamic URL;

typedef struct PermissionMenuItem__storage_ {
  uint32_t _has_storage_[1];
  PermissionMenuType menuType;
  NSString *name;
  NSString *URL;
} PermissionMenuItem__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "menuType",
        .dataTypeSpecific.enumDescFunc = PermissionMenuType_EnumDescriptor,
        .number = PermissionMenuItem_FieldNumber_MenuType,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PermissionMenuItem__storage_, menuType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = PermissionMenuItem_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PermissionMenuItem__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "URL",
        .dataTypeSpecific.className = NULL,
        .number = PermissionMenuItem_FieldNumber_URL,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PermissionMenuItem__storage_, URL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PermissionMenuItem class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PermissionMenuItem__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\010\000\003!!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PermissionMenuItem_MenuType_RawValue(PermissionMenuItem *message) {
  GPBDescriptor *descriptor = [PermissionMenuItem descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PermissionMenuItem_FieldNumber_MenuType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPermissionMenuItem_MenuType_RawValue(PermissionMenuItem *message, int32_t value) {
  GPBDescriptor *descriptor = [PermissionMenuItem descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PermissionMenuItem_FieldNumber_MenuType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PermissionMenu

@implementation PermissionMenu

@dynamic name;
@dynamic menuArray, menuArray_Count;
@dynamic icon;

typedef struct PermissionMenu__storage_ {
  uint32_t _has_storage_[1];
  NSString *name;
  NSMutableArray *menuArray;
  NSString *icon;
} PermissionMenu__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = PermissionMenu_FieldNumber_Name,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PermissionMenu__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "menuArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PermissionMenuItem),
        .number = PermissionMenu_FieldNumber_MenuArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PermissionMenu__storage_, menuArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "icon",
        .dataTypeSpecific.className = NULL,
        .number = PermissionMenu_FieldNumber_Icon,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PermissionMenu__storage_, icon),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PermissionMenu class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PermissionMenu__storage_)
                                         flags:0];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PermissionMenuList

@implementation PermissionMenuList

@dynamic listArray, listArray_Count;

typedef struct PermissionMenuList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *listArray;
} PermissionMenuList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "listArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PermissionMenu),
        .number = PermissionMenuList_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PermissionMenuList__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PermissionMenuList class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PermissionMenuList__storage_)
                                         flags:0];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OrgTag

@implementation OrgTag

@dynamic id_p;
@dynamic tagId;
@dynamic orgId;
@dynamic order;
@dynamic orgName;
@dynamic state;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic createTime;

typedef struct OrgTag__storage_ {
  uint32_t _has_storage_[1];
  uint32_t order;
  uint32_t state;
  NSString *orgName;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t tagId;
  uint64_t orgId;
  uint64_t createStaffId;
  uint64_t createTime;
} OrgTag__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = OrgTag_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OrgTag__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "tagId",
        .dataTypeSpecific.className = NULL,
        .number = OrgTag_FieldNumber_TagId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OrgTag__storage_, tagId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orgId",
        .dataTypeSpecific.className = NULL,
        .number = OrgTag_FieldNumber_OrgId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OrgTag__storage_, orgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "order",
        .dataTypeSpecific.className = NULL,
        .number = OrgTag_FieldNumber_Order,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OrgTag__storage_, order),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "orgName",
        .dataTypeSpecific.className = NULL,
        .number = OrgTag_FieldNumber_OrgName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OrgTag__storage_, orgName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "state",
        .dataTypeSpecific.className = NULL,
        .number = OrgTag_FieldNumber_State,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OrgTag__storage_, state),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = OrgTag_FieldNumber_CreateStaffId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OrgTag__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = OrgTag_FieldNumber_CreateStaffName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OrgTag__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = OrgTag_FieldNumber_CreateTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OrgTag__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OrgTag class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OrgTag__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\002\005\000\003\005\000\005\007\000\007\r\000\010\017\000\t\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OrgTagItem

@implementation OrgTagItem

@dynamic id_p;
@dynamic tagName;
@dynamic color;
@dynamic colorStr;
@dynamic state;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic createTime;

typedef struct OrgTagItem__storage_ {
  uint32_t _has_storage_[1];
  uint32_t color;
  uint32_t state;
  NSString *tagName;
  NSString *colorStr;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t createStaffId;
  uint64_t createTime;
} OrgTagItem__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = OrgTagItem_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OrgTagItem__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "tagName",
        .dataTypeSpecific.className = NULL,
        .number = OrgTagItem_FieldNumber_TagName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OrgTagItem__storage_, tagName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "color",
        .dataTypeSpecific.className = NULL,
        .number = OrgTagItem_FieldNumber_Color,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OrgTagItem__storage_, color),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "colorStr",
        .dataTypeSpecific.className = NULL,
        .number = OrgTagItem_FieldNumber_ColorStr,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OrgTagItem__storage_, colorStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "state",
        .dataTypeSpecific.className = NULL,
        .number = OrgTagItem_FieldNumber_State,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OrgTagItem__storage_, state),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = OrgTagItem_FieldNumber_CreateStaffId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OrgTagItem__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = OrgTagItem_FieldNumber_CreateStaffName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OrgTagItem__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = OrgTagItem_FieldNumber_CreateTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OrgTagItem__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OrgTagItem class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OrgTagItem__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\002\007\000\004\010\000\006\r\000\007\017\000\010\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - CompanyPrepay

@implementation CompanyPrepay

@dynamic companyId;
@dynamic serviceType;
@dynamic serviceTypeName;
@dynamic companyName;
@dynamic prepayAmount;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic createTime;

typedef struct CompanyPrepay__storage_ {
  uint32_t _has_storage_[1];
  uint32_t serviceType;
  NSString *serviceTypeName;
  NSString *companyName;
  NSString *createStaffName;
  uint64_t companyId;
  uint64_t prepayAmount;
  uint64_t createStaffId;
  uint64_t createTime;
} CompanyPrepay__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = CompanyPrepay_FieldNumber_CompanyId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CompanyPrepay__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "serviceType",
        .dataTypeSpecific.className = NULL,
        .number = CompanyPrepay_FieldNumber_ServiceType,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CompanyPrepay__storage_, serviceType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "serviceTypeName",
        .dataTypeSpecific.className = NULL,
        .number = CompanyPrepay_FieldNumber_ServiceTypeName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(CompanyPrepay__storage_, serviceTypeName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "companyName",
        .dataTypeSpecific.className = NULL,
        .number = CompanyPrepay_FieldNumber_CompanyName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(CompanyPrepay__storage_, companyName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "prepayAmount",
        .dataTypeSpecific.className = NULL,
        .number = CompanyPrepay_FieldNumber_PrepayAmount,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(CompanyPrepay__storage_, prepayAmount),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = CompanyPrepay_FieldNumber_CreateStaffId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(CompanyPrepay__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = CompanyPrepay_FieldNumber_CreateStaffName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(CompanyPrepay__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = CompanyPrepay_FieldNumber_CreateTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(CompanyPrepay__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CompanyPrepay class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CompanyPrepay__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\001\t\000\002\013\000\003\017\000\004\013\000\005\014\000\006\r\000\007\017\000\010\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OrgTagVO

@implementation OrgTagVO

@dynamic tagName;
@dynamic color;
@dynamic colorStr;
@dynamic order;
@dynamic orgId;
@dynamic orgName;

typedef struct OrgTagVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t color;
  uint32_t order;
  NSString *tagName;
  NSString *colorStr;
  NSString *orgName;
  uint64_t orgId;
} OrgTagVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "tagName",
        .dataTypeSpecific.className = NULL,
        .number = OrgTagVO_FieldNumber_TagName,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OrgTagVO__storage_, tagName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "color",
        .dataTypeSpecific.className = NULL,
        .number = OrgTagVO_FieldNumber_Color,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OrgTagVO__storage_, color),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "colorStr",
        .dataTypeSpecific.className = NULL,
        .number = OrgTagVO_FieldNumber_ColorStr,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OrgTagVO__storage_, colorStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "order",
        .dataTypeSpecific.className = NULL,
        .number = OrgTagVO_FieldNumber_Order,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OrgTagVO__storage_, order),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "orgId",
        .dataTypeSpecific.className = NULL,
        .number = OrgTagVO_FieldNumber_OrgId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OrgTagVO__storage_, orgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orgName",
        .dataTypeSpecific.className = NULL,
        .number = OrgTagVO_FieldNumber_OrgName,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OrgTagVO__storage_, orgName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OrgTagVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OrgTagVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001\007\000\003\010\000\005\005\000\006\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - CompanyPriceVO

@implementation CompanyPriceVO

@dynamic prepayAmount;
@dynamic hasPrice, price;
@dynamic number;
@dynamic priceFeeStr;
@dynamic payNumber;
@dynamic subjoinGroupingType;

typedef struct CompanyPriceVO__storage_ {
  uint32_t _has_storage_[1];
  int32_t number;
  int32_t payNumber;
  int32_t subjoinGroupingType;
  NSString *prepayAmount;
  Price *price;
  NSString *priceFeeStr;
} CompanyPriceVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "prepayAmount",
        .dataTypeSpecific.className = NULL,
        .number = CompanyPriceVO_FieldNumber_PrepayAmount,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CompanyPriceVO__storage_, prepayAmount),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "price",
        .dataTypeSpecific.className = GPBStringifySymbol(Price),
        .number = CompanyPriceVO_FieldNumber_Price,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CompanyPriceVO__storage_, price),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "number",
        .dataTypeSpecific.className = NULL,
        .number = CompanyPriceVO_FieldNumber_Number,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(CompanyPriceVO__storage_, number),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "priceFeeStr",
        .dataTypeSpecific.className = NULL,
        .number = CompanyPriceVO_FieldNumber_PriceFeeStr,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(CompanyPriceVO__storage_, priceFeeStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payNumber",
        .dataTypeSpecific.className = NULL,
        .number = CompanyPriceVO_FieldNumber_PayNumber,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(CompanyPriceVO__storage_, payNumber),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "subjoinGroupingType",
        .dataTypeSpecific.className = NULL,
        .number = CompanyPriceVO_FieldNumber_SubjoinGroupingType,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(CompanyPriceVO__storage_, subjoinGroupingType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CompanyPriceVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CompanyPriceVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001\014\000\004\013\000\005\t\000\006\023\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureNOModel

@implementation InsureNOModel

@dynamic insureNo;
@dynamic idcard;
@dynamic cityId;
@dynamic userId;
@dynamic contactName;
@dynamic contactPhone;
@dynamic kinsId;
@dynamic kinsName;
@dynamic sex;
@dynamic age;
@dynamic medicareType;
@dynamic medicareNo;
@dynamic height;
@dynamic weight;
@dynamic actAbility;
@dynamic languageArray, languageArray_Count;
@dynamic memoInfo;
@dynamic addrId;
@dynamic phone;
@dynamic name;
@dynamic province;
@dynamic city;
@dynamic district;
@dynamic building;
@dynamic addrDetail;
@dynamic status;
@dynamic orderIdArray, orderIdArray_Count;
@dynamic nurseId;
@dynamic nurseName;
@dynamic managerId;
@dynamic managerName;
@dynamic fee;
@dynamic reviveTime;
@dynamic startTime;
@dynamic endTime;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic score;
@dynamic isForce;
@dynamic payType;
@dynamic nurseLeaderId;
@dynamic nurseLeaderName;
@dynamic orderStatus;
@dynamic healthCareNo;
@dynamic scoreMmse;
@dynamic assessTime;
@dynamic medicalListArray, medicalListArray_Count;
@dynamic kfRemark;
@dynamic hsRemark;
@dynamic channelId;
@dynamic appointTime;
@dynamic scoreAdl;
@dynamic orderTime;
@dynamic managerRemark;
@dynamic updateTime;
@dynamic insureGetType;
@dynamic agencyName;
@dynamic agencyRelation;
@dynamic agencyPhone;
@dynamic dudaoScoreAdl;
@dynamic applyTreatmentType;
@dynamic treatmentType;
@dynamic assessType;
@dynamic securityAssess;
@dynamic userStatusRemark;
@dynamic userSignPic;
@dynamic entrustPic;
@dynamic managerAssessTime;
@dynamic loseAppointAssessTime;
@dynamic kfTime;
@dynamic loseAppointTime;
@dynamic loseNurseId;
@dynamic loseNurseName;
@dynamic caseDiagnosePicArray, caseDiagnosePicArray_Count;
@dynamic hsCasePresentation;
@dynamic isAmentia;
@dynamic dysgnosiaePicArray, dysgnosiaePicArray_Count;
@dynamic medicalHistory;
@dynamic loseNurseLeaderId;
@dynamic loseNurseLeaderName;
@dynamic loseRemark;
@dynamic foundWay;
@dynamic cancelStatus;

typedef struct InsureNOModel__storage_ {
  uint32_t _has_storage_[3];
  uint32_t sex;
  uint32_t age;
  uint32_t medicareType;
  uint32_t actAbility;
  uint32_t status;
  uint32_t fee;
  int32_t score;
  uint32_t isForce;
  uint32_t payType;
  uint32_t orderStatus;
  int32_t scoreMmse;
  int32_t scoreAdl;
  uint32_t insureGetType;
  uint32_t dudaoScoreAdl;
  uint32_t applyTreatmentType;
  uint32_t treatmentType;
  uint32_t assessType;
  uint32_t isAmentia;
  uint32_t foundWay;
  int32_t cancelStatus;
  NSString *insureNo;
  NSString *idcard;
  NSString *cityId;
  NSString *contactName;
  NSString *contactPhone;
  NSString *kinsName;
  NSString *medicareNo;
  NSString *height;
  NSString *weight;
  GPBUInt32Array *languageArray;
  NSString *memoInfo;
  NSString *phone;
  NSString *name;
  NSString *province;
  NSString *city;
  NSString *district;
  NSString *building;
  NSString *addrDetail;
  NSMutableArray *orderIdArray;
  NSString *nurseName;
  NSString *managerName;
  NSString *createStaffName;
  NSString *nurseLeaderName;
  NSString *healthCareNo;
  NSMutableArray *medicalListArray;
  NSString *kfRemark;
  NSString *hsRemark;
  NSString *channelId;
  NSString *managerRemark;
  NSString *agencyName;
  NSString *agencyRelation;
  NSString *agencyPhone;
  NSString *securityAssess;
  NSString *userStatusRemark;
  NSString *userSignPic;
  NSString *entrustPic;
  NSString *loseNurseName;
  NSMutableArray *caseDiagnosePicArray;
  NSString *hsCasePresentation;
  NSMutableArray *dysgnosiaePicArray;
  NSString *medicalHistory;
  NSString *loseNurseLeaderName;
  NSString *loseRemark;
  uint64_t userId;
  uint64_t kinsId;
  uint64_t addrId;
  uint64_t nurseId;
  uint64_t managerId;
  uint64_t reviveTime;
  uint64_t startTime;
  uint64_t endTime;
  uint64_t createTime;
  uint64_t createStaffId;
  uint64_t nurseLeaderId;
  uint64_t assessTime;
  uint64_t appointTime;
  uint64_t orderTime;
  uint64_t updateTime;
  uint64_t managerAssessTime;
  uint64_t loseAppointAssessTime;
  uint64_t kfTime;
  uint64_t loseAppointTime;
  uint64_t loseNurseId;
  uint64_t loseNurseLeaderId;
} InsureNOModel__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "insureNo",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_InsureNo,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, insureNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idcard",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_Idcard,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, idcard),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "cityId",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_CityId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, cityId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_UserId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "contactName",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_ContactName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, contactName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contactPhone",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_ContactPhone,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, contactPhone),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "kinsId",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_KinsId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, kinsId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "kinsName",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_KinsName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, kinsName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sex",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_Sex,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, sex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "age",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_Age,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, age),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "medicareType",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_MedicareType,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, medicareType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "medicareNo",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_MedicareNo,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, medicareNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "height",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_Height,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, height),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "weight",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_Weight,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, weight),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "actAbility",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_ActAbility,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, actAbility),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "languageArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_LanguageArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, languageArray),
        .flags = GPBFieldRepeated | GPBFieldPacked,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "memoInfo",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_MemoInfo,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, memoInfo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "addrId",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_AddrId,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, addrId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "phone",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_Phone,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, phone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_Name,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "province",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_Province,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, province),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "city",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_City,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, city),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "district",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_District,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, district),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "building",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_Building,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, building),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "addrDetail",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_AddrDetail,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, addrDetail),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_Status,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "orderIdArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_OrderIdArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, orderIdArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nurseId",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_NurseId,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, nurseId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "nurseName",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_NurseName,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, nurseName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "managerId",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_ManagerId,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, managerId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "managerName",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_ManagerName,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, managerName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fee",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_Fee,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, fee),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "reviveTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_ReviveTime,
        .hasIndex = 30,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, reviveTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "startTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_StartTime,
        .hasIndex = 31,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, startTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "endTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_EndTime,
        .hasIndex = 32,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, endTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_CreateTime,
        .hasIndex = 33,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_CreateStaffId,
        .hasIndex = 34,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_CreateStaffName,
        .hasIndex = 35,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "score",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_Score,
        .hasIndex = 36,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, score),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "isForce",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_IsForce,
        .hasIndex = 37,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, isForce),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "payType",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_PayType,
        .hasIndex = 38,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, payType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "nurseLeaderId",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_NurseLeaderId,
        .hasIndex = 39,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, nurseLeaderId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "nurseLeaderName",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_NurseLeaderName,
        .hasIndex = 40,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, nurseLeaderName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "orderStatus",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_OrderStatus,
        .hasIndex = 41,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, orderStatus),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "healthCareNo",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_HealthCareNo,
        .hasIndex = 42,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, healthCareNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "scoreMmse",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_ScoreMmse,
        .hasIndex = 43,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, scoreMmse),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "assessTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_AssessTime,
        .hasIndex = 44,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, assessTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "medicalListArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_MedicalListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, medicalListArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "kfRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_KfRemark,
        .hasIndex = 45,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, kfRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hsRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_HsRemark,
        .hasIndex = 46,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, hsRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "channelId",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_ChannelId,
        .hasIndex = 47,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, channelId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appointTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_AppointTime,
        .hasIndex = 48,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, appointTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "scoreAdl",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_ScoreAdl,
        .hasIndex = 49,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, scoreAdl),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "orderTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_OrderTime,
        .hasIndex = 50,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, orderTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "managerRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_ManagerRemark,
        .hasIndex = 51,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, managerRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "updateTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_UpdateTime,
        .hasIndex = 52,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, updateTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "insureGetType",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_InsureGetType,
        .hasIndex = 53,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, insureGetType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "agencyName",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_AgencyName,
        .hasIndex = 54,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, agencyName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "agencyRelation",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_AgencyRelation,
        .hasIndex = 55,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, agencyRelation),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "agencyPhone",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_AgencyPhone,
        .hasIndex = 56,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, agencyPhone),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "dudaoScoreAdl",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_DudaoScoreAdl,
        .hasIndex = 57,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, dudaoScoreAdl),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "applyTreatmentType",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_ApplyTreatmentType,
        .hasIndex = 58,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, applyTreatmentType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "treatmentType",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_TreatmentType,
        .hasIndex = 59,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, treatmentType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "assessType",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_AssessType,
        .hasIndex = 60,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, assessType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "securityAssess",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_SecurityAssess,
        .hasIndex = 61,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, securityAssess),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userStatusRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_UserStatusRemark,
        .hasIndex = 62,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, userStatusRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userSignPic",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_UserSignPic,
        .hasIndex = 63,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, userSignPic),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "entrustPic",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_EntrustPic,
        .hasIndex = 64,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, entrustPic),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "managerAssessTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_ManagerAssessTime,
        .hasIndex = 65,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, managerAssessTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "loseAppointAssessTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_LoseAppointAssessTime,
        .hasIndex = 66,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, loseAppointAssessTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "kfTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_KfTime,
        .hasIndex = 67,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, kfTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "loseAppointTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_LoseAppointTime,
        .hasIndex = 68,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, loseAppointTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "loseNurseId",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_LoseNurseId,
        .hasIndex = 69,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, loseNurseId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "loseNurseName",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_LoseNurseName,
        .hasIndex = 70,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, loseNurseName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "caseDiagnosePicArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_CaseDiagnosePicArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, caseDiagnosePicArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hsCasePresentation",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_HsCasePresentation,
        .hasIndex = 71,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, hsCasePresentation),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isAmentia",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_IsAmentia,
        .hasIndex = 72,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, isAmentia),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "dysgnosiaePicArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_DysgnosiaePicArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, dysgnosiaePicArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "medicalHistory",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_MedicalHistory,
        .hasIndex = 73,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, medicalHistory),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "loseNurseLeaderId",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_LoseNurseLeaderId,
        .hasIndex = 74,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, loseNurseLeaderId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "loseNurseLeaderName",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_LoseNurseLeaderName,
        .hasIndex = 75,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, loseNurseLeaderName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "loseRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_LoseRemark,
        .hasIndex = 76,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, loseRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "foundWay",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_FoundWay,
        .hasIndex = 77,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, foundWay),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "cancelStatus",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOModel_FieldNumber_CancelStatus,
        .hasIndex = 78,
        .offset = (uint32_t)offsetof(InsureNOModel__storage_, cancelStatus),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureNOModel class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureNOModel__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "E\001\007A\000\003\006\000\004\006\000\005\013\000\006\014\000\007\006\000\010\010\000\013\014\000\014\tA\000\017\n\000\021\010\000\022\006\000\031"
        "\n\000\033\000orderId\000\034\007\000\035\t\000\036\t\000\037\013\000!\n\000\"\t\000#\007\000$\n\000(\r\000)"
        "\017\000+\007\000,\007\000-\r\000.\017\000/\013\0000\013A\0001\006c\0002\n\0003\000medicalLis"
        "t\0004\010\0005\010\0006\t\0007\013\0008\006b\0009\t\000:\r\000;\n\000<\r\000=\n\000>\016\000\?\013\000@"
        "\013b\000A\022\000B\r\000C\n\000D\016\000E\020\000F\013\000G\n\000H\021\000I\025\000J\006\000K\017\000L\013\000M"
        "\r\000N\000caseDiagnosePic\000O\022\000P\t\000Q\000dysgnosiaePi"
        "c\000R\016\000S\021\000T\023\000U\n\000V\010\000W\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureVO

@implementation InsureVO

@dynamic insureNo;
@dynamic kinsName;
@dynamic createTime;
@dynamic statusDesc;
@dynamic status;
@dynamic score;

typedef struct InsureVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t status;
  int32_t score;
  NSString *insureNo;
  NSString *kinsName;
  NSString *createTime;
  NSString *statusDesc;
} InsureVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "insureNo",
        .dataTypeSpecific.className = NULL,
        .number = InsureVO_FieldNumber_InsureNo,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureVO__storage_, insureNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "kinsName",
        .dataTypeSpecific.className = NULL,
        .number = InsureVO_FieldNumber_KinsName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureVO__storage_, kinsName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureVO_FieldNumber_CreateTime,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureVO__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "statusDesc",
        .dataTypeSpecific.className = NULL,
        .number = InsureVO_FieldNumber_StatusDesc,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureVO__storage_, statusDesc),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = InsureVO_FieldNumber_Status,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureVO__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "score",
        .dataTypeSpecific.className = NULL,
        .number = InsureVO_FieldNumber_Score,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureVO__storage_, score),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001\007A\000\002\010\000\003\n\000\004\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureFirmVO

@implementation InsureFirmVO

@dynamic hasInsureNo, insureNo;
@dynamic addrInfo;
@dynamic statusTimeStr;
@dynamic statusTime;
@dynamic statusStr;
@dynamic status;
@dynamic assignStatus;

typedef struct InsureFirmVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t status;
  uint32_t assignStatus;
  InsureNOModel *insureNo;
  NSString *addrInfo;
  NSString *statusTimeStr;
  NSString *statusTime;
  NSString *statusStr;
} InsureFirmVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "insureNo",
        .dataTypeSpecific.className = GPBStringifySymbol(InsureNOModel),
        .number = InsureFirmVO_FieldNumber_InsureNo,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureFirmVO__storage_, insureNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "addrInfo",
        .dataTypeSpecific.className = NULL,
        .number = InsureFirmVO_FieldNumber_AddrInfo,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureFirmVO__storage_, addrInfo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "statusTimeStr",
        .dataTypeSpecific.className = NULL,
        .number = InsureFirmVO_FieldNumber_StatusTimeStr,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureFirmVO__storage_, statusTimeStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "statusTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureFirmVO_FieldNumber_StatusTime,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureFirmVO__storage_, statusTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "statusStr",
        .dataTypeSpecific.className = NULL,
        .number = InsureFirmVO_FieldNumber_StatusStr,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureFirmVO__storage_, statusStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = InsureFirmVO_FieldNumber_Status,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureFirmVO__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "assignStatus",
        .dataTypeSpecific.className = NULL,
        .number = InsureFirmVO_FieldNumber_AssignStatus,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InsureFirmVO__storage_, assignStatus),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureFirmVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureFirmVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001\007A\000\002\010\000\003\r\000\004\n\000\005\t\000\007\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureNODetail

@implementation InsureNODetail

@dynamic id_p;
@dynamic insureNo;
@dynamic status;
@dynamic detailType;
@dynamic content;
@dynamic remark;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic createTime;
@dynamic startTime;
@dynamic endTime;
@dynamic isForce;
@dynamic rejectDesc;

typedef struct InsureNODetail__storage_ {
  uint32_t _has_storage_[1];
  uint32_t status;
  uint32_t detailType;
  uint32_t isForce;
  NSString *insureNo;
  NSString *content;
  NSString *remark;
  NSString *createStaffName;
  NSString *rejectDesc;
  uint64_t id_p;
  uint64_t createStaffId;
  uint64_t createTime;
  uint64_t startTime;
  uint64_t endTime;
} InsureNODetail__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = InsureNODetail_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureNODetail__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "insureNo",
        .dataTypeSpecific.className = NULL,
        .number = InsureNODetail_FieldNumber_InsureNo,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureNODetail__storage_, insureNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = InsureNODetail_FieldNumber_Status,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureNODetail__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "detailType",
        .dataTypeSpecific.className = NULL,
        .number = InsureNODetail_FieldNumber_DetailType,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureNODetail__storage_, detailType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = InsureNODetail_FieldNumber_Content,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureNODetail__storage_, content),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "remark",
        .dataTypeSpecific.className = NULL,
        .number = InsureNODetail_FieldNumber_Remark,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureNODetail__storage_, remark),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = InsureNODetail_FieldNumber_CreateStaffId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InsureNODetail__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = InsureNODetail_FieldNumber_CreateStaffName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(InsureNODetail__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureNODetail_FieldNumber_CreateTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(InsureNODetail__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "startTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureNODetail_FieldNumber_StartTime,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(InsureNODetail__storage_, startTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "endTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureNODetail_FieldNumber_EndTime,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(InsureNODetail__storage_, endTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "isForce",
        .dataTypeSpecific.className = NULL,
        .number = InsureNODetail_FieldNumber_IsForce,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(InsureNODetail__storage_, isForce),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "rejectDesc",
        .dataTypeSpecific.className = NULL,
        .number = InsureNODetail_FieldNumber_RejectDesc,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(InsureNODetail__storage_, rejectDesc),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureNODetail class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureNODetail__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\t\002\007A\000\004\n\000\007\r\000\010\017\000\t\n\000\n\t\000\013\007\000\014\007\000\r\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureNODetailVO

@implementation InsureNODetailVO

@dynamic id_p;
@dynamic insureNo;
@dynamic content;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;

typedef struct InsureNODetailVO__storage_ {
  uint32_t _has_storage_[1];
  NSString *insureNo;
  NSString *content;
  NSString *createTime;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t createStaffId;
} InsureNODetailVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = InsureNODetailVO_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureNODetailVO__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "insureNo",
        .dataTypeSpecific.className = NULL,
        .number = InsureNODetailVO_FieldNumber_InsureNo,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureNODetailVO__storage_, insureNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = InsureNODetailVO_FieldNumber_Content,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureNODetailVO__storage_, content),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureNODetailVO_FieldNumber_CreateTime,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureNODetailVO__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = InsureNODetailVO_FieldNumber_CreateStaffId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureNODetailVO__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = InsureNODetailVO_FieldNumber_CreateStaffName,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureNODetailVO__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureNODetailVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureNODetailVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\002\007A\000\004\n\000\005\r\000\006\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureNOAssess

@implementation InsureNOAssess

@dynamic insureNo;
@dynamic kinsName;
@dynamic sex;
@dynamic age;
@dynamic idcard;
@dynamic name;
@dynamic phone;
@dynamic medicareNo;
@dynamic healthCareNo;
@dynamic addrItem;
@dynamic medicalList;
@dynamic appointTime;
@dynamic status;

typedef struct InsureNOAssess__storage_ {
  uint32_t _has_storage_[1];
  uint32_t sex;
  uint32_t age;
  uint32_t status;
  NSString *insureNo;
  NSString *kinsName;
  NSString *idcard;
  NSString *name;
  NSString *phone;
  NSString *medicareNo;
  NSString *healthCareNo;
  NSString *addrItem;
  NSString *medicalList;
  NSString *appointTime;
} InsureNOAssess__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "insureNo",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOAssess_FieldNumber_InsureNo,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureNOAssess__storage_, insureNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "kinsName",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOAssess_FieldNumber_KinsName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureNOAssess__storage_, kinsName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sex",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOAssess_FieldNumber_Sex,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureNOAssess__storage_, sex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "age",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOAssess_FieldNumber_Age,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureNOAssess__storage_, age),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "idcard",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOAssess_FieldNumber_Idcard,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureNOAssess__storage_, idcard),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOAssess_FieldNumber_Name,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureNOAssess__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "phone",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOAssess_FieldNumber_Phone,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InsureNOAssess__storage_, phone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "medicareNo",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOAssess_FieldNumber_MedicareNo,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(InsureNOAssess__storage_, medicareNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "healthCareNo",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOAssess_FieldNumber_HealthCareNo,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(InsureNOAssess__storage_, healthCareNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "addrItem",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOAssess_FieldNumber_AddrItem,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(InsureNOAssess__storage_, addrItem),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "medicalList",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOAssess_FieldNumber_MedicalList,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(InsureNOAssess__storage_, medicalList),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appointTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOAssess_FieldNumber_AppointTime,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(InsureNOAssess__storage_, appointTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = InsureNOAssess_FieldNumber_Status,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(InsureNOAssess__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureNOAssess class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureNOAssess__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\001\007A\000\002\010\000\010\n\000\t\013A\000\n\010\000\013\013\000\014\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - HgPerformanceVO

@implementation HgPerformanceVO

@dynamic phone;
@dynamic fullName;
@dynamic firstTrial;
@dynamic recheck;
@dynamic lastInstance;
@dynamic totality;
@dynamic placeAnOrder;
@dynamic percentConversion;
@dynamic settleAccountsFee;

typedef struct HgPerformanceVO__storage_ {
  uint32_t _has_storage_[1];
  NSString *phone;
  NSString *fullName;
  NSString *percentConversion;
  NSString *settleAccountsFee;
  uint64_t firstTrial;
  uint64_t recheck;
  uint64_t lastInstance;
  uint64_t totality;
  uint64_t placeAnOrder;
} HgPerformanceVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "phone",
        .dataTypeSpecific.className = NULL,
        .number = HgPerformanceVO_FieldNumber_Phone,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(HgPerformanceVO__storage_, phone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fullName",
        .dataTypeSpecific.className = NULL,
        .number = HgPerformanceVO_FieldNumber_FullName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(HgPerformanceVO__storage_, fullName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "firstTrial",
        .dataTypeSpecific.className = NULL,
        .number = HgPerformanceVO_FieldNumber_FirstTrial,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(HgPerformanceVO__storage_, firstTrial),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "recheck",
        .dataTypeSpecific.className = NULL,
        .number = HgPerformanceVO_FieldNumber_Recheck,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(HgPerformanceVO__storage_, recheck),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "lastInstance",
        .dataTypeSpecific.className = NULL,
        .number = HgPerformanceVO_FieldNumber_LastInstance,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(HgPerformanceVO__storage_, lastInstance),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "totality",
        .dataTypeSpecific.className = NULL,
        .number = HgPerformanceVO_FieldNumber_Totality,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(HgPerformanceVO__storage_, totality),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "placeAnOrder",
        .dataTypeSpecific.className = NULL,
        .number = HgPerformanceVO_FieldNumber_PlaceAnOrder,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(HgPerformanceVO__storage_, placeAnOrder),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "percentConversion",
        .dataTypeSpecific.className = NULL,
        .number = HgPerformanceVO_FieldNumber_PercentConversion,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(HgPerformanceVO__storage_, percentConversion),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "settleAccountsFee",
        .dataTypeSpecific.className = NULL,
        .number = HgPerformanceVO_FieldNumber_SettleAccountsFee,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(HgPerformanceVO__storage_, settleAccountsFee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[HgPerformanceVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(HgPerformanceVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\002\010\000\003\n\000\005\014\000\007\014\000\t\021\000\n\021\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - StaffGuideRecord

@implementation StaffGuideRecord

@dynamic id_p;
@dynamic insureNo;
@dynamic orderId;
@dynamic staffId;
@dynamic staffName;
@dynamic guide;
@dynamic content;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic createTime;
@dynamic status;

typedef struct StaffGuideRecord__storage_ {
  uint32_t _has_storage_[1];
  uint32_t guide;
  uint32_t status;
  NSString *insureNo;
  NSString *orderId;
  NSString *staffName;
  NSString *content;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t staffId;
  uint64_t createStaffId;
  uint64_t createTime;
} StaffGuideRecord__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = StaffGuideRecord_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(StaffGuideRecord__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "insureNo",
        .dataTypeSpecific.className = NULL,
        .number = StaffGuideRecord_FieldNumber_InsureNo,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(StaffGuideRecord__storage_, insureNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "orderId",
        .dataTypeSpecific.className = NULL,
        .number = StaffGuideRecord_FieldNumber_OrderId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(StaffGuideRecord__storage_, orderId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "staffId",
        .dataTypeSpecific.className = NULL,
        .number = StaffGuideRecord_FieldNumber_StaffId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(StaffGuideRecord__storage_, staffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "staffName",
        .dataTypeSpecific.className = NULL,
        .number = StaffGuideRecord_FieldNumber_StaffName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(StaffGuideRecord__storage_, staffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "guide",
        .dataTypeSpecific.className = NULL,
        .number = StaffGuideRecord_FieldNumber_Guide,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(StaffGuideRecord__storage_, guide),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = StaffGuideRecord_FieldNumber_Content,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(StaffGuideRecord__storage_, content),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = StaffGuideRecord_FieldNumber_CreateStaffId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(StaffGuideRecord__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = StaffGuideRecord_FieldNumber_CreateStaffName,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(StaffGuideRecord__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = StaffGuideRecord_FieldNumber_CreateTime,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(StaffGuideRecord__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = StaffGuideRecord_FieldNumber_Status,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(StaffGuideRecord__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[StaffGuideRecord class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(StaffGuideRecord__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\002\007A\000\003\007\000\004\007\000\005\t\000\010\r\000\t\017\000\n\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureAccount

@implementation InsureAccount

@dynamic idcard;
@dynamic companyId;
@dynamic orderId;
@dynamic account;
@dynamic totalAccount;
@dynamic createTime;

typedef struct InsureAccount__storage_ {
  uint32_t _has_storage_[1];
  NSString *idcard;
  NSString *orderId;
  uint64_t companyId;
  uint64_t account;
  uint64_t totalAccount;
  uint64_t createTime;
} InsureAccount__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "idcard",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccount_FieldNumber_Idcard,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureAccount__storage_, idcard),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccount_FieldNumber_CompanyId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureAccount__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orderId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccount_FieldNumber_OrderId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureAccount__storage_, orderId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "account",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccount_FieldNumber_Account,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureAccount__storage_, account),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "totalAccount",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccount_FieldNumber_TotalAccount,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureAccount__storage_, totalAccount),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccount_FieldNumber_CreateTime,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureAccount__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureAccount class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureAccount__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\002\t\000\003\007\000\005\014\000\006\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureAccountVO

@implementation InsureAccountVO

@dynamic kinsName;
@dynamic idcard;
@dynamic orderNum;
@dynamic accountStr;

typedef struct InsureAccountVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t orderNum;
  NSString *kinsName;
  NSString *idcard;
  NSString *accountStr;
} InsureAccountVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "kinsName",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccountVO_FieldNumber_KinsName,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureAccountVO__storage_, kinsName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idcard",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccountVO_FieldNumber_Idcard,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureAccountVO__storage_, idcard),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "orderNum",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccountVO_FieldNumber_OrderNum,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureAccountVO__storage_, orderNum),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "accountStr",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccountVO_FieldNumber_AccountStr,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureAccountVO__storage_, accountStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureAccountVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureAccountVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\010\000\003\010\000\004\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureAccountRecord

@implementation InsureAccountRecord

@dynamic id_p;
@dynamic idcard;
@dynamic companyId;
@dynamic changeAccount;
@dynamic account;
@dynamic changeDesc;
@dynamic orderId;
@dynamic changeType;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;

typedef struct InsureAccountRecord__storage_ {
  uint32_t _has_storage_[1];
  uint32_t changeType;
  NSString *idcard;
  NSString *changeDesc;
  NSString *orderId;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t companyId;
  uint64_t changeAccount;
  uint64_t account;
  uint64_t createTime;
  uint64_t createStaffId;
} InsureAccountRecord__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccountRecord_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureAccountRecord__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "idcard",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccountRecord_FieldNumber_Idcard,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureAccountRecord__storage_, idcard),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccountRecord_FieldNumber_CompanyId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureAccountRecord__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "changeAccount",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccountRecord_FieldNumber_ChangeAccount,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureAccountRecord__storage_, changeAccount),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "account",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccountRecord_FieldNumber_Account,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureAccountRecord__storage_, account),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "changeDesc",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccountRecord_FieldNumber_ChangeDesc,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureAccountRecord__storage_, changeDesc),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "orderId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccountRecord_FieldNumber_OrderId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InsureAccountRecord__storage_, orderId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "changeType",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccountRecord_FieldNumber_ChangeType,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(InsureAccountRecord__storage_, changeType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccountRecord_FieldNumber_CreateTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(InsureAccountRecord__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccountRecord_FieldNumber_CreateStaffId,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(InsureAccountRecord__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccountRecord_FieldNumber_CreateStaffName,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(InsureAccountRecord__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureAccountRecord class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureAccountRecord__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\003\t\000\004\r\000\006\n\000\007\007\000\010\n\000\t\n\000\n\r\000\013\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureAccountRecordVO

@implementation InsureAccountRecordVO

@dynamic changeDesc;
@dynamic changeAccountStr;
@dynamic accountStr;
@dynamic orderId;
@dynamic createTime;

typedef struct InsureAccountRecordVO__storage_ {
  uint32_t _has_storage_[1];
  NSString *changeDesc;
  NSString *changeAccountStr;
  NSString *accountStr;
  NSString *orderId;
  NSString *createTime;
} InsureAccountRecordVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "changeDesc",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccountRecordVO_FieldNumber_ChangeDesc,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureAccountRecordVO__storage_, changeDesc),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "changeAccountStr",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccountRecordVO_FieldNumber_ChangeAccountStr,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureAccountRecordVO__storage_, changeAccountStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "accountStr",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccountRecordVO_FieldNumber_AccountStr,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureAccountRecordVO__storage_, accountStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "orderId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccountRecordVO_FieldNumber_OrderId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureAccountRecordVO__storage_, orderId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureAccountRecordVO_FieldNumber_CreateTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureAccountRecordVO__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureAccountRecordVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureAccountRecordVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001\n\000\002\020\000\003\n\000\004\007\000\005\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureAssess

@implementation InsureAssess

@dynamic id_p;
@dynamic insureNo;
@dynamic assessType;
@dynamic score;
@dynamic isEat;
@dynamic isWater;
@dynamic isFace;
@dynamic isWear;
@dynamic isFaec;
@dynamic isPee;
@dynamic isToilet;
@dynamic isCarry;
@dynamic isWalk;
@dynamic isStair;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic createTime;
@dynamic remark;
@dynamic idcard;
@dynamic userId;
@dynamic eatRemark;
@dynamic waterRemark;
@dynamic faceRemark;
@dynamic wearRemark;
@dynamic faecRemark;
@dynamic peeRemark;
@dynamic toiletRemark;
@dynamic carryRemark;
@dynamic walkRemark;
@dynamic stairRemark;

typedef struct InsureAssess__storage_ {
  uint32_t _has_storage_[1];
  uint32_t assessType;
  int32_t score;
  uint32_t isEat;
  uint32_t isWater;
  uint32_t isFace;
  uint32_t isWear;
  uint32_t isFaec;
  uint32_t isPee;
  uint32_t isToilet;
  uint32_t isCarry;
  uint32_t isWalk;
  uint32_t isStair;
  NSString *insureNo;
  NSString *createStaffName;
  NSString *remark;
  NSString *idcard;
  NSString *eatRemark;
  NSString *waterRemark;
  NSString *faceRemark;
  NSString *wearRemark;
  NSString *faecRemark;
  NSString *peeRemark;
  NSString *toiletRemark;
  NSString *carryRemark;
  NSString *walkRemark;
  NSString *stairRemark;
  uint64_t id_p;
  uint64_t createStaffId;
  uint64_t createTime;
  uint64_t userId;
} InsureAssess__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "insureNo",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_InsureNo,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, insureNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "assessType",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_AssessType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, assessType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "score",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_Score,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, score),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "isEat",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_IsEat,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, isEat),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "isWater",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_IsWater,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, isWater),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "isFace",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_IsFace,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, isFace),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "isWear",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_IsWear,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, isWear),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "isFaec",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_IsFaec,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, isFaec),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "isPee",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_IsPee,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, isPee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "isToilet",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_IsToilet,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, isToilet),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "isCarry",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_IsCarry,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, isCarry),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "isWalk",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_IsWalk,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, isWalk),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "isStair",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_IsStair,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, isStair),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_CreateStaffId,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_CreateStaffName,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_CreateTime,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "remark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_Remark,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, remark),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idcard",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_Idcard,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, idcard),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_UserId,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "eatRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_EatRemark,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, eatRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "waterRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_WaterRemark,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, waterRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "faceRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_FaceRemark,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, faceRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "wearRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_WearRemark,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, wearRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "faecRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_FaecRemark,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, faecRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "peeRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_PeeRemark,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, peeRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toiletRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_ToiletRemark,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, toiletRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "carryRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_CarryRemark,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, carryRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "walkRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_WalkRemark,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, walkRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "stairRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssess_FieldNumber_StairRemark,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(InsureAssess__storage_, stairRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureAssess class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureAssess__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\032\002\007A\000\003\n\000\005\005\000\006\007\000\007\006\000\010\006\000\t\006\000\n\005\000\013\010\000\014\007\000\r\006\000\016\007\000\017\r"
        "\000\020\017\000\021\n\000\024\006\000\025\t\000\026\013\000\027\n\000\030\n\000\031\n\000\032\t\000\033\014\000\034\013\000\035\n\000\036\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - AdlAssessItem

@implementation AdlAssessItem

@dynamic itemName;
@dynamic result;
@dynamic remark;
@dynamic score;

typedef struct AdlAssessItem__storage_ {
  uint32_t _has_storage_[1];
  uint32_t result;
  uint32_t score;
  NSString *itemName;
  NSString *remark;
} AdlAssessItem__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "itemName",
        .dataTypeSpecific.className = NULL,
        .number = AdlAssessItem_FieldNumber_ItemName,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AdlAssessItem__storage_, itemName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "result",
        .dataTypeSpecific.className = NULL,
        .number = AdlAssessItem_FieldNumber_Result,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AdlAssessItem__storage_, result),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "remark",
        .dataTypeSpecific.className = NULL,
        .number = AdlAssessItem_FieldNumber_Remark,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AdlAssessItem__storage_, remark),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "score",
        .dataTypeSpecific.className = NULL,
        .number = AdlAssessItem_FieldNumber_Score,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(AdlAssessItem__storage_, score),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AdlAssessItem class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AdlAssessItem__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureAssessMMSE

@implementation InsureAssessMMSE

@dynamic id_p;
@dynamic insureNo;
@dynamic assessType;
@dynamic score;
@dynamic idcard;
@dynamic userId;
@dynamic composure;
@dynamic isMemory;
@dynamic isMind;
@dynamic isRecall;
@dynamic isRename;
@dynamic isRetell;
@dynamic isThree;
@dynamic isWrite;
@dynamic isRead;
@dynamic isStruct;
@dynamic memoryRemark;
@dynamic mindRemark;
@dynamic recallRemark;
@dynamic renameRemark;
@dynamic retellRemark;
@dynamic threeRemark;
@dynamic writeRemark;
@dynamic readRemark;
@dynamic structRemark;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic createTime;
@dynamic remark;

typedef struct InsureAssessMMSE__storage_ {
  uint32_t _has_storage_[1];
  uint32_t assessType;
  int32_t score;
  uint32_t isMemory;
  uint32_t isMind;
  uint32_t isRecall;
  uint32_t isRename;
  uint32_t isRetell;
  uint32_t isThree;
  uint32_t isWrite;
  uint32_t isRead;
  uint32_t isStruct;
  NSString *insureNo;
  NSString *idcard;
  NSString *composure;
  NSString *memoryRemark;
  NSString *mindRemark;
  NSString *recallRemark;
  NSString *renameRemark;
  NSString *retellRemark;
  NSString *threeRemark;
  NSString *writeRemark;
  NSString *readRemark;
  NSString *structRemark;
  NSString *createStaffName;
  NSString *remark;
  uint64_t id_p;
  uint64_t userId;
  uint64_t createStaffId;
  uint64_t createTime;
} InsureAssessMMSE__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "insureNo",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_InsureNo,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, insureNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "assessType",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_AssessType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, assessType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "score",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_Score,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, score),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "idcard",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_Idcard,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, idcard),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_UserId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "composure",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_Composure,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, composure),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isMemory",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_IsMemory,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, isMemory),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "isMind",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_IsMind,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, isMind),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "isRecall",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_IsRecall,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, isRecall),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "isRename",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_IsRename,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, isRename),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "isRetell",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_IsRetell,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, isRetell),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "isThree",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_IsThree,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, isThree),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "isWrite",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_IsWrite,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, isWrite),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "isRead",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_IsRead,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, isRead),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "isStruct",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_IsStruct,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, isStruct),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "memoryRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_MemoryRemark,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, memoryRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "mindRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_MindRemark,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, mindRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "recallRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_RecallRemark,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, recallRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "renameRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_RenameRemark,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, renameRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "retellRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_RetellRemark,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, retellRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "threeRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_ThreeRemark,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, threeRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "writeRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_WriteRemark,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, writeRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "readRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_ReadRemark,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, readRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "structRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_StructRemark,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, structRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_CreateStaffId,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_CreateStaffName,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_CreateTime,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "remark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessMMSE_FieldNumber_Remark,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(InsureAssessMMSE__storage_, remark),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureAssessMMSE class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureAssessMMSE__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\030\002\007A\000\003\n\000\006\006\000\010\010\000\t\006\000\n\010\000\013\010\000\014\010\000\r\007\000\016\007\000\017\006\000\020\010\000\021\014"
        "\000\022\n\000\023\014\000\024\014\000\025\014\000\026\013\000\027\013\000\030\n\000\031\014\000\032\r\000\033\017\000\034\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OrderSubsidy

@implementation OrderSubsidy

@dynamic id_p;
@dynamic orderId;
@dynamic itemType;
@dynamic status;
@dynamic fee;
@dynamic realFee;
@dynamic subsidyTime;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic idcard;

typedef struct OrderSubsidy__storage_ {
  uint32_t _has_storage_[1];
  uint32_t itemType;
  uint32_t status;
  NSString *orderId;
  NSString *createStaffName;
  NSString *idcard;
  uint64_t id_p;
  uint64_t fee;
  uint64_t realFee;
  uint64_t subsidyTime;
  uint64_t createTime;
  uint64_t createStaffId;
} OrderSubsidy__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = OrderSubsidy_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OrderSubsidy__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orderId",
        .dataTypeSpecific.className = NULL,
        .number = OrderSubsidy_FieldNumber_OrderId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OrderSubsidy__storage_, orderId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "itemType",
        .dataTypeSpecific.className = NULL,
        .number = OrderSubsidy_FieldNumber_ItemType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OrderSubsidy__storage_, itemType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = OrderSubsidy_FieldNumber_Status,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OrderSubsidy__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "fee",
        .dataTypeSpecific.className = NULL,
        .number = OrderSubsidy_FieldNumber_Fee,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OrderSubsidy__storage_, fee),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "realFee",
        .dataTypeSpecific.className = NULL,
        .number = OrderSubsidy_FieldNumber_RealFee,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OrderSubsidy__storage_, realFee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "subsidyTime",
        .dataTypeSpecific.className = NULL,
        .number = OrderSubsidy_FieldNumber_SubsidyTime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OrderSubsidy__storage_, subsidyTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = OrderSubsidy_FieldNumber_CreateTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OrderSubsidy__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = OrderSubsidy_FieldNumber_CreateStaffId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OrderSubsidy__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = OrderSubsidy_FieldNumber_CreateStaffName,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OrderSubsidy__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idcard",
        .dataTypeSpecific.className = NULL,
        .number = OrderSubsidy_FieldNumber_Idcard,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OrderSubsidy__storage_, idcard),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OrderSubsidy class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OrderSubsidy__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\002\007\000\003\010\000\006\007\000\007\013\000\010\n\000\t\r\000\n\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KFContactRecord

@implementation KFContactRecord

@dynamic id_p;
@dynamic orderId;
@dynamic insureNo;
@dynamic content;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;

typedef struct KFContactRecord__storage_ {
  uint32_t _has_storage_[1];
  NSString *orderId;
  NSString *insureNo;
  NSString *content;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t createTime;
  uint64_t createStaffId;
} KFContactRecord__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = KFContactRecord_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KFContactRecord__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orderId",
        .dataTypeSpecific.className = NULL,
        .number = KFContactRecord_FieldNumber_OrderId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KFContactRecord__storage_, orderId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "insureNo",
        .dataTypeSpecific.className = NULL,
        .number = KFContactRecord_FieldNumber_InsureNo,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KFContactRecord__storage_, insureNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = KFContactRecord_FieldNumber_Content,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(KFContactRecord__storage_, content),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = KFContactRecord_FieldNumber_CreateTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(KFContactRecord__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = KFContactRecord_FieldNumber_CreateStaffId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(KFContactRecord__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = KFContactRecord_FieldNumber_CreateStaffName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(KFContactRecord__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KFContactRecord class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KFContactRecord__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\002\007\000\003\007A\000\005\n\000\006\r\000\007\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ScheduleVO

@implementation ScheduleVO

@dynamic insureNoid;
@dynamic items;
@dynamic fullName;
@dynamic sex;
@dynamic age;
@dynamic userName;
@dynamic phone;
@dynamic createTime;
@dynamic itemType;
@dynamic orderId;

typedef struct ScheduleVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t sex;
  uint32_t age;
  uint32_t itemType;
  NSString *insureNoid;
  NSString *items;
  NSString *fullName;
  NSString *userName;
  NSString *phone;
  NSString *orderId;
  uint64_t createTime;
} ScheduleVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "insureNoid",
        .dataTypeSpecific.className = NULL,
        .number = ScheduleVO_FieldNumber_InsureNoid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ScheduleVO__storage_, insureNoid),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "items",
        .dataTypeSpecific.className = NULL,
        .number = ScheduleVO_FieldNumber_Items,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ScheduleVO__storage_, items),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fullName",
        .dataTypeSpecific.className = NULL,
        .number = ScheduleVO_FieldNumber_FullName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ScheduleVO__storage_, fullName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sex",
        .dataTypeSpecific.className = NULL,
        .number = ScheduleVO_FieldNumber_Sex,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ScheduleVO__storage_, sex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "age",
        .dataTypeSpecific.className = NULL,
        .number = ScheduleVO_FieldNumber_Age,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(ScheduleVO__storage_, age),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "userName",
        .dataTypeSpecific.className = NULL,
        .number = ScheduleVO_FieldNumber_UserName,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(ScheduleVO__storage_, userName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "phone",
        .dataTypeSpecific.className = NULL,
        .number = ScheduleVO_FieldNumber_Phone,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(ScheduleVO__storage_, phone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = ScheduleVO_FieldNumber_CreateTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(ScheduleVO__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "itemType",
        .dataTypeSpecific.className = NULL,
        .number = ScheduleVO_FieldNumber_ItemType,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(ScheduleVO__storage_, itemType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "orderId",
        .dataTypeSpecific.className = NULL,
        .number = ScheduleVO_FieldNumber_OrderId,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(ScheduleVO__storage_, orderId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ScheduleVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ScheduleVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001\007b\001\000\003\010\000\006\010\000\010\n\000\t\010\000\n\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - AssessVO

@implementation AssessVO

@dynamic insureNoid;
@dynamic kinsName;
@dynamic sex;
@dynamic age;
@dynamic userName;
@dynamic phone;
@dynamic kfRemark;
@dynamic detail;
@dynamic hsRemark;

typedef struct AssessVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t sex;
  uint32_t age;
  NSString *insureNoid;
  NSString *kinsName;
  NSString *userName;
  NSString *phone;
  NSString *kfRemark;
  NSString *detail;
  NSString *hsRemark;
} AssessVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "insureNoid",
        .dataTypeSpecific.className = NULL,
        .number = AssessVO_FieldNumber_InsureNoid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AssessVO__storage_, insureNoid),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "kinsName",
        .dataTypeSpecific.className = NULL,
        .number = AssessVO_FieldNumber_KinsName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AssessVO__storage_, kinsName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sex",
        .dataTypeSpecific.className = NULL,
        .number = AssessVO_FieldNumber_Sex,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AssessVO__storage_, sex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "age",
        .dataTypeSpecific.className = NULL,
        .number = AssessVO_FieldNumber_Age,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(AssessVO__storage_, age),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "userName",
        .dataTypeSpecific.className = NULL,
        .number = AssessVO_FieldNumber_UserName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(AssessVO__storage_, userName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "phone",
        .dataTypeSpecific.className = NULL,
        .number = AssessVO_FieldNumber_Phone,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(AssessVO__storage_, phone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "kfRemark",
        .dataTypeSpecific.className = NULL,
        .number = AssessVO_FieldNumber_KfRemark,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(AssessVO__storage_, kfRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "detail",
        .dataTypeSpecific.className = NULL,
        .number = AssessVO_FieldNumber_Detail,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(AssessVO__storage_, detail),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hsRemark",
        .dataTypeSpecific.className = NULL,
        .number = AssessVO_FieldNumber_HsRemark,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(AssessVO__storage_, hsRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AssessVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AssessVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001\007b\001\000\002\010\000\005\010\000\007\010\000\010F\000\t\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureStaffApply

@implementation InsureStaffApply

@dynamic applyId;
@dynamic userId;
@dynamic userName;
@dynamic userPhone;
@dynamic applyName;
@dynamic applyPhone;
@dynamic idcard;
@dynamic isHealth;
@dynamic isNurse;
@dynamic referrerPhone;
@dynamic fee;
@dynamic payStatus;
@dynamic payType;
@dynamic status;
@dynamic rejectDesc;
@dynamic province;
@dynamic city;
@dynamic cityCode;
@dynamic district;
@dynamic adCode;
@dynamic building;
@dynamic addrDetail;
@dynamic gpsType;
@dynamic lng;
@dynamic lat;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic idcardPic;

typedef struct InsureStaffApply__storage_ {
  uint32_t _has_storage_[1];
  uint32_t isHealth;
  uint32_t isNurse;
  uint32_t payStatus;
  uint32_t payType;
  uint32_t status;
  uint32_t gpsType;
  NSString *applyId;
  NSString *userName;
  NSString *userPhone;
  NSString *applyName;
  NSString *applyPhone;
  NSString *idcard;
  NSString *referrerPhone;
  NSString *rejectDesc;
  NSString *province;
  NSString *city;
  NSString *cityCode;
  NSString *district;
  NSString *adCode;
  NSString *building;
  NSString *addrDetail;
  NSString *createStaffName;
  NSString *idcardPic;
  uint64_t userId;
  uint64_t fee;
  double lng;
  double lat;
  uint64_t createTime;
  uint64_t createStaffId;
} InsureStaffApply__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "applyId",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_ApplyId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, applyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userName",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_UserName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, userName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userPhone",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_UserPhone,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, userPhone),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "applyName",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_ApplyName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, applyName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "applyPhone",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_ApplyPhone,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, applyPhone),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idcard",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_Idcard,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, idcard),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isHealth",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_IsHealth,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, isHealth),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "isNurse",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_IsNurse,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, isNurse),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "referrerPhone",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_ReferrerPhone,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, referrerPhone),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fee",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_Fee,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, fee),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "payStatus",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_PayStatus,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, payStatus),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "payType",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_PayType,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, payType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_Status,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "rejectDesc",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_RejectDesc,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, rejectDesc),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "province",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_Province,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, province),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "city",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_City,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, city),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "cityCode",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_CityCode,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, cityCode),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "district",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_District,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, district),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "adCode",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_AdCode,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, adCode),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "building",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_Building,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, building),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "addrDetail",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_AddrDetail,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, addrDetail),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "gpsType",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_GpsType,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, gpsType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "lng",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_Lng,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, lng),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "lat",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_Lat,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, lat),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_CreateTime,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_CreateStaffId,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_CreateStaffName,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idcardPic",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApply_FieldNumber_IdcardPic,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(InsureStaffApply__storage_, idcardPic),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureStaffApply class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureStaffApply__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\024\001\007\000\002\006\000\003\010\000\004\t\000\005\t\000\006\n\000\010\010\000\t\007\000\n\r\000\014\t\000\r\007\000\017\n\000\022\010\000"
        "\024\006\000\026\n\000\027\007\000\032\n\000\033\r\000\034\017\000\035\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureStaffApplyDetail

@implementation InsureStaffApplyDetail

@dynamic id_p;
@dynamic applyId;
@dynamic content;
@dynamic status;
@dynamic rejectDesc;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;

typedef struct InsureStaffApplyDetail__storage_ {
  uint32_t _has_storage_[1];
  uint32_t status;
  NSString *applyId;
  NSString *content;
  NSString *rejectDesc;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t createTime;
  uint64_t createStaffId;
} InsureStaffApplyDetail__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApplyDetail_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureStaffApplyDetail__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "applyId",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApplyDetail_FieldNumber_ApplyId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureStaffApplyDetail__storage_, applyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApplyDetail_FieldNumber_Content,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureStaffApplyDetail__storage_, content),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApplyDetail_FieldNumber_Status,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureStaffApplyDetail__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "rejectDesc",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApplyDetail_FieldNumber_RejectDesc,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureStaffApplyDetail__storage_, rejectDesc),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApplyDetail_FieldNumber_CreateTime,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureStaffApplyDetail__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApplyDetail_FieldNumber_CreateStaffId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InsureStaffApplyDetail__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = InsureStaffApplyDetail_FieldNumber_CreateStaffName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(InsureStaffApplyDetail__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureStaffApplyDetail class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureStaffApplyDetail__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\002\007\000\005\n\000\006\n\000\007\r\000\010\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OrderInsurePrice

@implementation OrderInsurePrice

@dynamic priceId;
@dynamic number;

typedef struct OrderInsurePrice__storage_ {
  uint32_t _has_storage_[1];
  uint32_t number;
  uint64_t priceId;
} OrderInsurePrice__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "priceId",
        .dataTypeSpecific.className = NULL,
        .number = OrderInsurePrice_FieldNumber_PriceId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OrderInsurePrice__storage_, priceId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "number",
        .dataTypeSpecific.className = NULL,
        .number = OrderInsurePrice_FieldNumber_Number,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OrderInsurePrice__storage_, number),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OrderInsurePrice class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OrderInsurePrice__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - AssignVO

@implementation AssignVO

@dynamic hasAssessVo, assessVo;
@dynamic hgName;
@dynamic hgId;
@dynamic isExist;
@dynamic status;

typedef struct AssignVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t isExist;
  uint32_t status;
  AssessVO *assessVo;
  NSString *hgName;
  uint64_t hgId;
} AssignVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "assessVo",
        .dataTypeSpecific.className = GPBStringifySymbol(AssessVO),
        .number = AssignVO_FieldNumber_AssessVo,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AssignVO__storage_, assessVo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "hgName",
        .dataTypeSpecific.className = NULL,
        .number = AssignVO_FieldNumber_HgName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AssignVO__storage_, hgName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hgId",
        .dataTypeSpecific.className = NULL,
        .number = AssignVO_FieldNumber_HgId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AssignVO__storage_, hgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "isExist",
        .dataTypeSpecific.className = NULL,
        .number = AssignVO_FieldNumber_IsExist,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(AssignVO__storage_, isExist),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = AssignVO_FieldNumber_Status,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(AssignVO__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AssignVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AssignVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001\007A\000\002\006\000\003\004\000\004\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - HgVO

@implementation HgVO

@dynamic id_p;
@dynamic fullName;
@dynamic sex;
@dynamic careerStartTime;
@dynamic seniority;
@dynamic pic;
@dynamic onService;
@dynamic languageArray, languageArray_Count;
@dynamic serveNumber;
@dynamic workType;

typedef struct HgVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t sex;
  uint32_t seniority;
  uint32_t onService;
  uint32_t workType;
  NSString *fullName;
  NSString *pic;
  GPBUInt32Array *languageArray;
  uint64_t id_p;
  uint64_t careerStartTime;
  uint64_t serveNumber;
} HgVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = HgVO_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(HgVO__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "fullName",
        .dataTypeSpecific.className = NULL,
        .number = HgVO_FieldNumber_FullName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(HgVO__storage_, fullName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sex",
        .dataTypeSpecific.className = NULL,
        .number = HgVO_FieldNumber_Sex,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(HgVO__storage_, sex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "careerStartTime",
        .dataTypeSpecific.className = NULL,
        .number = HgVO_FieldNumber_CareerStartTime,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(HgVO__storage_, careerStartTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "seniority",
        .dataTypeSpecific.className = NULL,
        .number = HgVO_FieldNumber_Seniority,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(HgVO__storage_, seniority),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "pic",
        .dataTypeSpecific.className = NULL,
        .number = HgVO_FieldNumber_Pic,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(HgVO__storage_, pic),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "onService",
        .dataTypeSpecific.className = NULL,
        .number = HgVO_FieldNumber_OnService,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(HgVO__storage_, onService),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "languageArray",
        .dataTypeSpecific.className = NULL,
        .number = HgVO_FieldNumber_LanguageArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(HgVO__storage_, languageArray),
        .flags = GPBFieldRepeated | GPBFieldPacked,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "serveNumber",
        .dataTypeSpecific.className = NULL,
        .number = HgVO_FieldNumber_ServeNumber,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(HgVO__storage_, serveNumber),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "workType",
        .dataTypeSpecific.className = NULL,
        .number = HgVO_FieldNumber_WorkType,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(HgVO__storage_, workType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[HgVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(HgVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\002\010\000\004\017\000\007\t\000\t\013\000\n\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PrintRecord

@implementation PrintRecord

@dynamic id_p;
@dynamic orderId;
@dynamic printType;
@dynamic printNum;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic payee;
@dynamic orderExtraId;
@dynamic printNo;
@dynamic orgId;
@dynamic branchId;
@dynamic branchName;
@dynamic kinsName;
@dynamic fee;
@dynamic staffId;
@dynamic staffName;
@dynamic status;

typedef struct PrintRecord__storage_ {
  uint32_t _has_storage_[1];
  uint32_t printType;
  uint32_t printNum;
  uint32_t status;
  NSString *orderId;
  NSString *createStaffName;
  NSString *payee;
  NSString *printNo;
  NSString *branchName;
  NSString *kinsName;
  NSString *staffName;
  uint64_t id_p;
  uint64_t createTime;
  uint64_t createStaffId;
  uint64_t orderExtraId;
  uint64_t orgId;
  uint64_t branchId;
  uint64_t fee;
  uint64_t staffId;
} PrintRecord__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PrintRecord_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PrintRecord__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orderId",
        .dataTypeSpecific.className = NULL,
        .number = PrintRecord_FieldNumber_OrderId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PrintRecord__storage_, orderId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "printType",
        .dataTypeSpecific.className = NULL,
        .number = PrintRecord_FieldNumber_PrintType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PrintRecord__storage_, printType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "printNum",
        .dataTypeSpecific.className = NULL,
        .number = PrintRecord_FieldNumber_PrintNum,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PrintRecord__storage_, printNum),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = PrintRecord_FieldNumber_CreateTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PrintRecord__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = PrintRecord_FieldNumber_CreateStaffId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PrintRecord__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = PrintRecord_FieldNumber_CreateStaffName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PrintRecord__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payee",
        .dataTypeSpecific.className = NULL,
        .number = PrintRecord_FieldNumber_Payee,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PrintRecord__storage_, payee),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "orderExtraId",
        .dataTypeSpecific.className = NULL,
        .number = PrintRecord_FieldNumber_OrderExtraId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PrintRecord__storage_, orderExtraId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "printNo",
        .dataTypeSpecific.className = NULL,
        .number = PrintRecord_FieldNumber_PrintNo,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PrintRecord__storage_, printNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "orgId",
        .dataTypeSpecific.className = NULL,
        .number = PrintRecord_FieldNumber_OrgId,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PrintRecord__storage_, orgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "branchId",
        .dataTypeSpecific.className = NULL,
        .number = PrintRecord_FieldNumber_BranchId,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PrintRecord__storage_, branchId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "branchName",
        .dataTypeSpecific.className = NULL,
        .number = PrintRecord_FieldNumber_BranchName,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(PrintRecord__storage_, branchName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "kinsName",
        .dataTypeSpecific.className = NULL,
        .number = PrintRecord_FieldNumber_KinsName,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(PrintRecord__storage_, kinsName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fee",
        .dataTypeSpecific.className = NULL,
        .number = PrintRecord_FieldNumber_Fee,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(PrintRecord__storage_, fee),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "staffId",
        .dataTypeSpecific.className = NULL,
        .number = PrintRecord_FieldNumber_StaffId,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(PrintRecord__storage_, staffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "staffName",
        .dataTypeSpecific.className = NULL,
        .number = PrintRecord_FieldNumber_StaffName,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(PrintRecord__storage_, staffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = PrintRecord_FieldNumber_Status,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(PrintRecord__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PrintRecord class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PrintRecord__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\016\002\007\000\003\t\000\004\010\000\005\n\000\006\r\000\007\017\000\t\014\000\n\006A\000\013\005\000\014\010\000\r\n\000\016\010\000\020\007"
        "\000\021\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - FinanceRecord

@implementation FinanceRecord

@dynamic id_p;
@dynamic companyId;
@dynamic withdrawId;
@dynamic userId;
@dynamic userName;
@dynamic phone;
@dynamic payType;
@dynamic noteNo;
@dynamic fee;
@dynamic feeStr;
@dynamic realName;
@dynamic cardNo;
@dynamic bankBranch;
@dynamic status;
@dynamic withdrawStatus;
@dynamic failureRemark;
@dynamic acceptTime;
@dynamic withdrawTime;
@dynamic payTime;
@dynamic updateStaffId;
@dynamic updateStaffName;
@dynamic createTime;
@dynamic payId;
@dynamic cardholderName;

typedef struct FinanceRecord__storage_ {
  uint32_t _has_storage_[1];
  uint32_t payType;
  uint32_t status;
  uint32_t withdrawStatus;
  NSString *userName;
  NSString *phone;
  NSString *noteNo;
  NSString *feeStr;
  NSString *realName;
  NSString *cardNo;
  NSString *bankBranch;
  NSString *failureRemark;
  NSString *updateStaffName;
  NSString *payId;
  NSString *cardholderName;
  uint64_t id_p;
  uint64_t companyId;
  uint64_t withdrawId;
  uint64_t userId;
  uint64_t fee;
  uint64_t acceptTime;
  uint64_t withdrawTime;
  uint64_t payTime;
  uint64_t updateStaffId;
  uint64_t createTime;
} FinanceRecord__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_CompanyId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "withdrawId",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_WithdrawId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, withdrawId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_UserId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userName",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_UserName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, userName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "phone",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_Phone,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, phone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payType",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_PayType,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, payType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "noteNo",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_NoteNo,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, noteNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fee",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_Fee,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, fee),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "feeStr",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_FeeStr,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, feeStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "realName",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_RealName,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, realName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "cardNo",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_CardNo,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, cardNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bankBranch",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_BankBranch,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, bankBranch),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_Status,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "withdrawStatus",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_WithdrawStatus,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, withdrawStatus),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "failureRemark",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_FailureRemark,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, failureRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "acceptTime",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_AcceptTime,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, acceptTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "withdrawTime",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_WithdrawTime,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, withdrawTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "payTime",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_PayTime,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, payTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "updateStaffId",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_UpdateStaffId,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, updateStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "updateStaffName",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_UpdateStaffName,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, updateStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_CreateTime,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "payId",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_PayId,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, payId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "cardholderName",
        .dataTypeSpecific.className = NULL,
        .number = FinanceRecord_FieldNumber_CardholderName,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(FinanceRecord__storage_, cardholderName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[FinanceRecord class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(FinanceRecord__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\024\002\t\000\003\n\000\004\006\000\005\010\000\007\007\000\010\005A\000\n\006\000\013\010\000\014\005A\000\r\n\000\017\016\000\020\r\000\021"
        "\n\000\022\014\000\023\007\000\024\r\000\025\017\000\026\n\000\027\005\000\030\016\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - FormRecord

@implementation FormRecord

@dynamic id_p;
@dynamic companyId;
@dynamic fileName;
@dynamic filePath;
@dynamic fileType;
@dynamic condition;
@dynamic fileSize;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic formType;

typedef struct FormRecord__storage_ {
  uint32_t _has_storage_[1];
  uint32_t fileType;
  uint32_t formType;
  NSString *fileName;
  NSString *filePath;
  NSString *condition;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t companyId;
  uint64_t fileSize;
  uint64_t createTime;
  uint64_t createStaffId;
} FormRecord__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = FormRecord_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(FormRecord__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = FormRecord_FieldNumber_CompanyId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(FormRecord__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "fileName",
        .dataTypeSpecific.className = NULL,
        .number = FormRecord_FieldNumber_FileName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(FormRecord__storage_, fileName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "filePath",
        .dataTypeSpecific.className = NULL,
        .number = FormRecord_FieldNumber_FilePath,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(FormRecord__storage_, filePath),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fileType",
        .dataTypeSpecific.className = NULL,
        .number = FormRecord_FieldNumber_FileType,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(FormRecord__storage_, fileType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "condition",
        .dataTypeSpecific.className = NULL,
        .number = FormRecord_FieldNumber_Condition,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(FormRecord__storage_, condition),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fileSize",
        .dataTypeSpecific.className = NULL,
        .number = FormRecord_FieldNumber_FileSize,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(FormRecord__storage_, fileSize),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = FormRecord_FieldNumber_CreateTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(FormRecord__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = FormRecord_FieldNumber_CreateStaffId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(FormRecord__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = FormRecord_FieldNumber_CreateStaffName,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(FormRecord__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "formType",
        .dataTypeSpecific.className = NULL,
        .number = FormRecord_FieldNumber_FormType,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(FormRecord__storage_, formType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[FormRecord class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(FormRecord__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\t\002\t\000\003\010\000\004\010\000\005\010\000\007\010\000\010\n\000\t\r\000\n\017\000\013\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Expenditure

@implementation Expenditure

@dynamic expenditureTime;
@dynamic expenditureFee;
@dynamic expenditureOnefee;
@dynamic expenditureNfee;
@dynamic expenditureAdditionFee;
@dynamic expenditureJjzgfee;
@dynamic expenditureJthsfee;
@dynamic expenditureJkhlfee;
@dynamic expenditureZyllfee;
@dynamic expenditureJpysfee;
@dynamic expenditureJyhlfee;
@dynamic expenditureXlwjfee;
@dynamic expenditureChhffee;
@dynamic expenditureYyyjfee;
@dynamic expenditureLzghfee;
@dynamic expenditureChxfee;
@dynamic expenditureFjxfee;
@dynamic hgRebateFee;
@dynamic needPay;
@dynamic companyId;
@dynamic orgId;
@dynamic branchId;
@dynamic startDate;
@dynamic endDate;
@dynamic expenditureType;
@dynamic expenditureOnetype;
@dynamic expenditureNtype;
@dynamic expenditureAdditionType;
@dynamic expenditureJjzgtype;
@dynamic expenditureJthstype;
@dynamic expenditureJkhltype;
@dynamic expenditureZylltype;
@dynamic expenditureJpystype;
@dynamic expenditureJyhltype;
@dynamic expenditureXlwjtype;
@dynamic expenditureChhftype;
@dynamic expenditureYyyjtype;
@dynamic expenditureLzghtype;
@dynamic expenditureChxtype;
@dynamic expenditureFjxtype;

typedef struct Expenditure__storage_ {
  uint32_t _has_storage_[2];
  uint32_t expenditureType;
  uint32_t expenditureOnetype;
  uint32_t expenditureNtype;
  uint32_t expenditureAdditionType;
  uint32_t expenditureJjzgtype;
  uint32_t expenditureJthstype;
  uint32_t expenditureJkhltype;
  uint32_t expenditureZylltype;
  uint32_t expenditureJpystype;
  uint32_t expenditureJyhltype;
  uint32_t expenditureXlwjtype;
  uint32_t expenditureChhftype;
  uint32_t expenditureYyyjtype;
  uint32_t expenditureLzghtype;
  uint32_t expenditureChxtype;
  uint32_t expenditureFjxtype;
  NSString *expenditureTime;
  NSString *expenditureFee;
  NSString *expenditureOnefee;
  NSString *expenditureNfee;
  NSString *expenditureAdditionFee;
  NSString *expenditureJjzgfee;
  NSString *expenditureJthsfee;
  NSString *expenditureJkhlfee;
  NSString *expenditureZyllfee;
  NSString *expenditureJpysfee;
  NSString *expenditureJyhlfee;
  NSString *expenditureXlwjfee;
  NSString *expenditureChhffee;
  NSString *expenditureYyyjfee;
  NSString *expenditureLzghfee;
  NSString *expenditureChxfee;
  NSString *expenditureFjxfee;
  NSString *hgRebateFee;
  NSString *needPay;
  NSString *startDate;
  NSString *endDate;
  uint64_t companyId;
  uint64_t orgId;
  uint64_t branchId;
} Expenditure__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "expenditureTime",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureTime,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expenditureFee",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureFee,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureFee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expenditureOnefee",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureOnefee,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureOnefee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expenditureNfee",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureNfee,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureNfee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expenditureAdditionFee",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureAdditionFee,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureAdditionFee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expenditureJjzgfee",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureJjzgfee,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureJjzgfee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expenditureJthsfee",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureJthsfee,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureJthsfee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expenditureJkhlfee",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureJkhlfee,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureJkhlfee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expenditureZyllfee",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureZyllfee,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureZyllfee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expenditureJpysfee",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureJpysfee,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureJpysfee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expenditureJyhlfee",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureJyhlfee,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureJyhlfee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expenditureXlwjfee",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureXlwjfee,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureXlwjfee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expenditureChhffee",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureChhffee,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureChhffee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expenditureYyyjfee",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureYyyjfee,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureYyyjfee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expenditureLzghfee",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureLzghfee,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureLzghfee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expenditureChxfee",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureChxfee,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureChxfee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expenditureFjxfee",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureFjxfee,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureFjxfee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hgRebateFee",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_HgRebateFee,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(Expenditure__storage_, hgRebateFee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "needPay",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_NeedPay,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(Expenditure__storage_, needPay),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_CompanyId,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(Expenditure__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orgId",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_OrgId,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(Expenditure__storage_, orgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "branchId",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_BranchId,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(Expenditure__storage_, branchId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "startDate",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_StartDate,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(Expenditure__storage_, startDate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "endDate",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_EndDate,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(Expenditure__storage_, endDate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expenditureType",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureType,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "expenditureOnetype",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureOnetype,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureOnetype),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "expenditureNtype",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureNtype,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureNtype),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "expenditureAdditionType",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureAdditionType,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureAdditionType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "expenditureJjzgtype",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureJjzgtype,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureJjzgtype),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "expenditureJthstype",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureJthstype,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureJthstype),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "expenditureJkhltype",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureJkhltype,
        .hasIndex = 30,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureJkhltype),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "expenditureZylltype",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureZylltype,
        .hasIndex = 31,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureZylltype),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "expenditureJpystype",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureJpystype,
        .hasIndex = 32,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureJpystype),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "expenditureJyhltype",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureJyhltype,
        .hasIndex = 33,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureJyhltype),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "expenditureXlwjtype",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureXlwjtype,
        .hasIndex = 34,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureXlwjtype),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "expenditureChhftype",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureChhftype,
        .hasIndex = 35,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureChhftype),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "expenditureYyyjtype",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureYyyjtype,
        .hasIndex = 36,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureYyyjtype),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "expenditureLzghtype",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureLzghtype,
        .hasIndex = 37,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureLzghtype),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "expenditureChxtype",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureChxtype,
        .hasIndex = 38,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureChxtype),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "expenditureFjxtype",
        .dataTypeSpecific.className = NULL,
        .number = Expenditure_FieldNumber_ExpenditureFjxtype,
        .hasIndex = 39,
        .offset = (uint32_t)offsetof(Expenditure__storage_, expenditureFjxtype),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[Expenditure class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(Expenditure__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "(\001\017\000\002\016\000\003\014c\002\000\004\014C\000\005\026\000\006\014d\002\000\007\014d\002\000\010\014d\002\000\t\014d\002\000\n"
        "\014d\002\000\013\014d\002\000\014\014d\002\000\r\014d\002\000\016\014d\002\000\017\014d\002\000\020\014c\002\000\021\014c\002\000\022"
        "\013\000\023\007\000\024\t\000\025\005\000\026\010\000\027\t\000\030\007\000\031\017\000\032\014c\003\000\033\014D\000\034\027\000\035\014d\003\000"
        "\036\014d\003\000\037\014d\003\000 \014d\003\000!\014d\003\000\"\014d\003\000#\014d\003\000$\014d\003\000%\014d\003\000"
        "&\014d\003\000\'\014c\003\000(\014c\003\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ExtraAccount

@implementation ExtraAccount

@dynamic id_p;
@dynamic orgId;
@dynamic fee;
@dynamic cashFee;

typedef struct ExtraAccount__storage_ {
  uint32_t _has_storage_[1];
  uint64_t id_p;
  uint64_t orgId;
  int64_t fee;
  int64_t cashFee;
} ExtraAccount__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = ExtraAccount_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ExtraAccount__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orgId",
        .dataTypeSpecific.className = NULL,
        .number = ExtraAccount_FieldNumber_OrgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ExtraAccount__storage_, orgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "fee",
        .dataTypeSpecific.className = NULL,
        .number = ExtraAccount_FieldNumber_Fee,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ExtraAccount__storage_, fee),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "cashFee",
        .dataTypeSpecific.className = NULL,
        .number = ExtraAccount_FieldNumber_CashFee,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ExtraAccount__storage_, cashFee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ExtraAccount class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ExtraAccount__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\002\005\000\004\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ExtraAccountRecord

@implementation ExtraAccountRecord

@dynamic id_p;
@dynamic orderId;
@dynamic extraId;
@dynamic orgId;
@dynamic fee;
@dynamic frontFee;
@dynamic backFee;
@dynamic extraType;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic frontCashFee;
@dynamic backCashFee;

typedef struct ExtraAccountRecord__storage_ {
  uint32_t _has_storage_[1];
  uint32_t extraType;
  NSString *orderId;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t extraId;
  uint64_t orgId;
  int64_t fee;
  int64_t frontFee;
  int64_t backFee;
  uint64_t createTime;
  uint64_t createStaffId;
  int64_t frontCashFee;
  int64_t backCashFee;
} ExtraAccountRecord__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = ExtraAccountRecord_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ExtraAccountRecord__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orderId",
        .dataTypeSpecific.className = NULL,
        .number = ExtraAccountRecord_FieldNumber_OrderId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ExtraAccountRecord__storage_, orderId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "extraId",
        .dataTypeSpecific.className = NULL,
        .number = ExtraAccountRecord_FieldNumber_ExtraId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ExtraAccountRecord__storage_, extraId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orgId",
        .dataTypeSpecific.className = NULL,
        .number = ExtraAccountRecord_FieldNumber_OrgId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ExtraAccountRecord__storage_, orgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "fee",
        .dataTypeSpecific.className = NULL,
        .number = ExtraAccountRecord_FieldNumber_Fee,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(ExtraAccountRecord__storage_, fee),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "frontFee",
        .dataTypeSpecific.className = NULL,
        .number = ExtraAccountRecord_FieldNumber_FrontFee,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(ExtraAccountRecord__storage_, frontFee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "backFee",
        .dataTypeSpecific.className = NULL,
        .number = ExtraAccountRecord_FieldNumber_BackFee,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(ExtraAccountRecord__storage_, backFee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "extraType",
        .dataTypeSpecific.className = NULL,
        .number = ExtraAccountRecord_FieldNumber_ExtraType,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(ExtraAccountRecord__storage_, extraType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = ExtraAccountRecord_FieldNumber_CreateTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(ExtraAccountRecord__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = ExtraAccountRecord_FieldNumber_CreateStaffId,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(ExtraAccountRecord__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = ExtraAccountRecord_FieldNumber_CreateStaffName,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(ExtraAccountRecord__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "frontCashFee",
        .dataTypeSpecific.className = NULL,
        .number = ExtraAccountRecord_FieldNumber_FrontCashFee,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(ExtraAccountRecord__storage_, frontCashFee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "backCashFee",
        .dataTypeSpecific.className = NULL,
        .number = ExtraAccountRecord_FieldNumber_BackCashFee,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(ExtraAccountRecord__storage_, backCashFee),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ExtraAccountRecord class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ExtraAccountRecord__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\013\002\007\000\003\007\000\004\005\000\006\010\000\007\007\000\010\t\000\t\n\000\n\r\000\013\017\000\014\014\000\r\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - picUrlId

@implementation picUrlId

@dynamic picId;
@dynamic picURL;

typedef struct picUrlId__storage_ {
  uint32_t _has_storage_[1];
  NSString *picURL;
  uint64_t picId;
} picUrlId__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "picId",
        .dataTypeSpecific.className = NULL,
        .number = picUrlId_FieldNumber_PicId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(picUrlId__storage_, picId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "picURL",
        .dataTypeSpecific.className = NULL,
        .number = picUrlId_FieldNumber_PicURL,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(picUrlId__storage_, picURL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[picUrlId class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(picUrlId__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\005\000\002\004!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UpdateType

@implementation UpdateType

@dynamic updateTypeId;
@dynamic updateTypeStr;

typedef struct UpdateType__storage_ {
  uint32_t _has_storage_[1];
  uint32_t updateTypeId;
  NSString *updateTypeStr;
} UpdateType__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "updateTypeId",
        .dataTypeSpecific.className = NULL,
        .number = UpdateType_FieldNumber_UpdateTypeId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UpdateType__storage_, updateTypeId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "updateTypeStr",
        .dataTypeSpecific.className = NULL,
        .number = UpdateType_FieldNumber_UpdateTypeStr,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UpdateType__storage_, updateTypeStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UpdateType class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UpdateType__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\014\000\002\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OrderPriceNumberVO

@implementation OrderPriceNumberVO

@dynamic serviceItem;
@dynamic priceDesc;
@dynamic number;
@dynamic priceId;

typedef struct OrderPriceNumberVO__storage_ {
  uint32_t _has_storage_[1];
  NSString *serviceItem;
  NSString *priceDesc;
  uint64_t number;
  uint64_t priceId;
} OrderPriceNumberVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "serviceItem",
        .dataTypeSpecific.className = NULL,
        .number = OrderPriceNumberVO_FieldNumber_ServiceItem,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OrderPriceNumberVO__storage_, serviceItem),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "priceDesc",
        .dataTypeSpecific.className = NULL,
        .number = OrderPriceNumberVO_FieldNumber_PriceDesc,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OrderPriceNumberVO__storage_, priceDesc),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "number",
        .dataTypeSpecific.className = NULL,
        .number = OrderPriceNumberVO_FieldNumber_Number,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OrderPriceNumberVO__storage_, number),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "priceId",
        .dataTypeSpecific.className = NULL,
        .number = OrderPriceNumberVO_FieldNumber_PriceId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OrderPriceNumberVO__storage_, priceId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OrderPriceNumberVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OrderPriceNumberVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\013\000\002\t\000\004\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ErrorModel

@implementation ErrorModel

@dynamic id_p;
@dynamic userId;
@dynamic userName;
@dynamic hgId;
@dynamic hgName;
@dynamic createType;
@dynamic terraceType;
@dynamic errorType;
@dynamic createTime;
@dynamic logText;
@dynamic URL;

typedef struct ErrorModel__storage_ {
  uint32_t _has_storage_[1];
  uint32_t createType;
  uint32_t terraceType;
  uint32_t errorType;
  NSString *userName;
  NSString *hgName;
  NSString *logText;
  NSString *URL;
  uint64_t id_p;
  uint64_t userId;
  uint64_t hgId;
  uint64_t createTime;
} ErrorModel__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = ErrorModel_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ErrorModel__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = ErrorModel_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ErrorModel__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userName",
        .dataTypeSpecific.className = NULL,
        .number = ErrorModel_FieldNumber_UserName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ErrorModel__storage_, userName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hgId",
        .dataTypeSpecific.className = NULL,
        .number = ErrorModel_FieldNumber_HgId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ErrorModel__storage_, hgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "hgName",
        .dataTypeSpecific.className = NULL,
        .number = ErrorModel_FieldNumber_HgName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(ErrorModel__storage_, hgName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createType",
        .dataTypeSpecific.className = NULL,
        .number = ErrorModel_FieldNumber_CreateType,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(ErrorModel__storage_, createType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "terraceType",
        .dataTypeSpecific.className = NULL,
        .number = ErrorModel_FieldNumber_TerraceType,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(ErrorModel__storage_, terraceType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "errorType",
        .dataTypeSpecific.className = NULL,
        .number = ErrorModel_FieldNumber_ErrorType,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(ErrorModel__storage_, errorType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = ErrorModel_FieldNumber_CreateTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(ErrorModel__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "logText",
        .dataTypeSpecific.className = NULL,
        .number = ErrorModel_FieldNumber_LogText,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(ErrorModel__storage_, logText),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "URL",
        .dataTypeSpecific.className = NULL,
        .number = ErrorModel_FieldNumber_URL,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(ErrorModel__storage_, URL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ErrorModel class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ErrorModel__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\n\002\006\000\003\010\000\004\004\000\005\006\000\006\n\000\007\013\000\010\t\000\t\n\000\n\007\000\013!!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - WebpageTimeModel

@implementation WebpageTimeModel

@dynamic id_p;
@dynamic expendTime;
@dynamic bpTime;
@dynamic zyTime;
@dynamic HTTPTime;
@dynamic startDomtime;
@dynamic endDomtime;
@dynamic createTime;
@dynamic URL;
@dynamic startTime;
@dynamic netType;
@dynamic userAgent;
@dynamic wxTime;

typedef struct WebpageTimeModel__storage_ {
  uint32_t _has_storage_[1];
  NSString *URL;
  NSString *startTime;
  NSString *netType;
  NSString *userAgent;
  uint64_t id_p;
  uint64_t expendTime;
  uint64_t bpTime;
  uint64_t zyTime;
  uint64_t HTTPTime;
  uint64_t startDomtime;
  uint64_t endDomtime;
  uint64_t createTime;
  uint64_t wxTime;
} WebpageTimeModel__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = WebpageTimeModel_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(WebpageTimeModel__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "expendTime",
        .dataTypeSpecific.className = NULL,
        .number = WebpageTimeModel_FieldNumber_ExpendTime,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(WebpageTimeModel__storage_, expendTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "bpTime",
        .dataTypeSpecific.className = NULL,
        .number = WebpageTimeModel_FieldNumber_BpTime,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(WebpageTimeModel__storage_, bpTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "zyTime",
        .dataTypeSpecific.className = NULL,
        .number = WebpageTimeModel_FieldNumber_ZyTime,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(WebpageTimeModel__storage_, zyTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "HTTPTime",
        .dataTypeSpecific.className = NULL,
        .number = WebpageTimeModel_FieldNumber_HTTPTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(WebpageTimeModel__storage_, HTTPTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "startDomtime",
        .dataTypeSpecific.className = NULL,
        .number = WebpageTimeModel_FieldNumber_StartDomtime,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(WebpageTimeModel__storage_, startDomtime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "endDomtime",
        .dataTypeSpecific.className = NULL,
        .number = WebpageTimeModel_FieldNumber_EndDomtime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(WebpageTimeModel__storage_, endDomtime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = WebpageTimeModel_FieldNumber_CreateTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(WebpageTimeModel__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "URL",
        .dataTypeSpecific.className = NULL,
        .number = WebpageTimeModel_FieldNumber_URL,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(WebpageTimeModel__storage_, URL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "startTime",
        .dataTypeSpecific.className = NULL,
        .number = WebpageTimeModel_FieldNumber_StartTime,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(WebpageTimeModel__storage_, startTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "netType",
        .dataTypeSpecific.className = NULL,
        .number = WebpageTimeModel_FieldNumber_NetType,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(WebpageTimeModel__storage_, netType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userAgent",
        .dataTypeSpecific.className = NULL,
        .number = WebpageTimeModel_FieldNumber_UserAgent,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(WebpageTimeModel__storage_, userAgent),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "wxTime",
        .dataTypeSpecific.className = NULL,
        .number = WebpageTimeModel_FieldNumber_WxTime,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(WebpageTimeModel__storage_, wxTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[WebpageTimeModel class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(WebpageTimeModel__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\014\002\n\000\003\006\000\004\006\000\005!!!%\000\006\006c\003\000\007\004c\003\000\010\n\000\t!!!\000\n\t\000\013\007\000"
        "\014\t\000\r\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PriceVO

@implementation PriceVO

@dynamic priceId;
@dynamic serviceItem;
@dynamic priceDesc;

typedef struct PriceVO__storage_ {
  uint32_t _has_storage_[1];
  NSString *serviceItem;
  NSString *priceDesc;
  uint64_t priceId;
} PriceVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "priceId",
        .dataTypeSpecific.className = NULL,
        .number = PriceVO_FieldNumber_PriceId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PriceVO__storage_, priceId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "serviceItem",
        .dataTypeSpecific.className = NULL,
        .number = PriceVO_FieldNumber_ServiceItem,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PriceVO__storage_, serviceItem),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "priceDesc",
        .dataTypeSpecific.className = NULL,
        .number = PriceVO_FieldNumber_PriceDesc,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PriceVO__storage_, priceDesc),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PriceVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PriceVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\007\000\002\013\000\003\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsurePriceVO

@implementation InsurePriceVO

@dynamic priceId;
@dynamic serviceItem;
@dynamic serviceIntro;
@dynamic priceDesc;
@dynamic serviceType;

typedef struct InsurePriceVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t serviceType;
  NSString *serviceItem;
  NSString *serviceIntro;
  NSString *priceDesc;
  uint64_t priceId;
} InsurePriceVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "priceId",
        .dataTypeSpecific.className = NULL,
        .number = InsurePriceVO_FieldNumber_PriceId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsurePriceVO__storage_, priceId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "serviceItem",
        .dataTypeSpecific.className = NULL,
        .number = InsurePriceVO_FieldNumber_ServiceItem,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsurePriceVO__storage_, serviceItem),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serviceIntro",
        .dataTypeSpecific.className = NULL,
        .number = InsurePriceVO_FieldNumber_ServiceIntro,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsurePriceVO__storage_, serviceIntro),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "priceDesc",
        .dataTypeSpecific.className = NULL,
        .number = InsurePriceVO_FieldNumber_PriceDesc,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsurePriceVO__storage_, priceDesc),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serviceType",
        .dataTypeSpecific.className = NULL,
        .number = InsurePriceVO_FieldNumber_ServiceType,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsurePriceVO__storage_, serviceType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsurePriceVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsurePriceVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001\007\000\002\013\000\003\014\000\004\t\000\005\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - HGApply

@implementation HGApply

@dynamic id_p;
@dynamic companyId;
@dynamic hgName;
@dynamic phone;
@dynamic idcard;
@dynamic status;
@dynamic sendStaffId;
@dynamic sendStaffName;
@dynamic createTime;
@dynamic sendTime;
@dynamic sex;
@dynamic age;
@dynamic hgId;
@dynamic orderIdArray, orderIdArray_Count;
@dynamic fullNamesArray, fullNamesArray_Count;

typedef struct HGApply__storage_ {
  uint32_t _has_storage_[1];
  uint32_t status;
  uint32_t sex;
  NSString *hgName;
  NSString *phone;
  NSString *idcard;
  NSString *sendStaffName;
  NSMutableArray *orderIdArray;
  NSMutableArray *fullNamesArray;
  uint64_t id_p;
  uint64_t companyId;
  uint64_t sendStaffId;
  uint64_t createTime;
  uint64_t sendTime;
  uint64_t age;
  uint64_t hgId;
} HGApply__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = HGApply_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(HGApply__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = HGApply_FieldNumber_CompanyId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(HGApply__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "hgName",
        .dataTypeSpecific.className = NULL,
        .number = HGApply_FieldNumber_HgName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(HGApply__storage_, hgName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "phone",
        .dataTypeSpecific.className = NULL,
        .number = HGApply_FieldNumber_Phone,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(HGApply__storage_, phone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "idcard",
        .dataTypeSpecific.className = NULL,
        .number = HGApply_FieldNumber_Idcard,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(HGApply__storage_, idcard),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = HGApply_FieldNumber_Status,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(HGApply__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "sendStaffId",
        .dataTypeSpecific.className = NULL,
        .number = HGApply_FieldNumber_SendStaffId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(HGApply__storage_, sendStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "sendStaffName",
        .dataTypeSpecific.className = NULL,
        .number = HGApply_FieldNumber_SendStaffName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(HGApply__storage_, sendStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = HGApply_FieldNumber_CreateTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(HGApply__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "sendTime",
        .dataTypeSpecific.className = NULL,
        .number = HGApply_FieldNumber_SendTime,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(HGApply__storage_, sendTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "sex",
        .dataTypeSpecific.className = NULL,
        .number = HGApply_FieldNumber_Sex,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(HGApply__storage_, sex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "age",
        .dataTypeSpecific.className = NULL,
        .number = HGApply_FieldNumber_Age,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(HGApply__storage_, age),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "hgId",
        .dataTypeSpecific.className = NULL,
        .number = HGApply_FieldNumber_HgId,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(HGApply__storage_, hgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orderIdArray",
        .dataTypeSpecific.className = NULL,
        .number = HGApply_FieldNumber_OrderIdArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(HGApply__storage_, orderIdArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fullNamesArray",
        .dataTypeSpecific.className = NULL,
        .number = HGApply_FieldNumber_FullNamesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(HGApply__storage_, fullNamesArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[HGApply class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(HGApply__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\t\002\t\000\003\006\000\007\013\000\010\r\000\t\n\000\n\010\000\r\004\000\016\000orderId\000\017\000fullNa"
        "mes\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureHGListVO

@implementation InsureHGListVO

@dynamic id_p;
@dynamic praise;
@dynamic sex;
@dynamic serviceNum;
@dynamic language;
@dynamic fullName;
@dynamic picURL;
@dynamic nativeplace;
@dynamic hgno;
@dynamic exp;
@dynamic orderNum;
@dynamic age;

typedef struct InsureHGListVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t praise;
  uint32_t sex;
  uint32_t exp;
  uint32_t orderNum;
  uint32_t age;
  NSString *language;
  NSString *fullName;
  NSString *picURL;
  NSString *nativeplace;
  NSString *hgno;
  uint64_t id_p;
  uint64_t serviceNum;
} InsureHGListVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = InsureHGListVO_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureHGListVO__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "praise",
        .dataTypeSpecific.className = NULL,
        .number = InsureHGListVO_FieldNumber_Praise,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureHGListVO__storage_, praise),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "sex",
        .dataTypeSpecific.className = NULL,
        .number = InsureHGListVO_FieldNumber_Sex,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureHGListVO__storage_, sex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "serviceNum",
        .dataTypeSpecific.className = NULL,
        .number = InsureHGListVO_FieldNumber_ServiceNum,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureHGListVO__storage_, serviceNum),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "language",
        .dataTypeSpecific.className = NULL,
        .number = InsureHGListVO_FieldNumber_Language,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureHGListVO__storage_, language),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fullName",
        .dataTypeSpecific.className = NULL,
        .number = InsureHGListVO_FieldNumber_FullName,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureHGListVO__storage_, fullName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "picURL",
        .dataTypeSpecific.className = NULL,
        .number = InsureHGListVO_FieldNumber_PicURL,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InsureHGListVO__storage_, picURL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nativeplace",
        .dataTypeSpecific.className = NULL,
        .number = InsureHGListVO_FieldNumber_Nativeplace,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(InsureHGListVO__storage_, nativeplace),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hgno",
        .dataTypeSpecific.className = NULL,
        .number = InsureHGListVO_FieldNumber_Hgno,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(InsureHGListVO__storage_, hgno),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "exp",
        .dataTypeSpecific.className = NULL,
        .number = InsureHGListVO_FieldNumber_Exp,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(InsureHGListVO__storage_, exp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "orderNum",
        .dataTypeSpecific.className = NULL,
        .number = InsureHGListVO_FieldNumber_OrderNum,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(InsureHGListVO__storage_, orderNum),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "age",
        .dataTypeSpecific.className = NULL,
        .number = InsureHGListVO_FieldNumber_Age,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(InsureHGListVO__storage_, age),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureHGListVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureHGListVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\004\n\000\006\010\000\007\004!!\000\013\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - HGInfoVO

@implementation HGInfoVO

@dynamic id_p;
@dynamic headImg;
@dynamic hgName;
@dynamic sex;
@dynamic age;
@dynamic nativeplace;
@dynamic serviceNum;
@dynamic companyName;
@dynamic hgNo;
@dynamic language;
@dynamic exp;
@dynamic goodAtProject;
@dynamic healthCertificate;
@dynamic nursingCertificate;
@dynamic serviceOrg;
@dynamic phone;

typedef struct HGInfoVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t sex;
  uint32_t age;
  uint32_t serviceNum;
  uint32_t exp;
  NSString *headImg;
  NSString *hgName;
  NSString *nativeplace;
  NSString *companyName;
  NSString *hgNo;
  NSString *language;
  NSString *goodAtProject;
  NSString *healthCertificate;
  NSString *nursingCertificate;
  NSString *serviceOrg;
  NSString *phone;
  uint64_t id_p;
} HGInfoVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = HGInfoVO_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(HGInfoVO__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "headImg",
        .dataTypeSpecific.className = NULL,
        .number = HGInfoVO_FieldNumber_HeadImg,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(HGInfoVO__storage_, headImg),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hgName",
        .dataTypeSpecific.className = NULL,
        .number = HGInfoVO_FieldNumber_HgName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(HGInfoVO__storage_, hgName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sex",
        .dataTypeSpecific.className = NULL,
        .number = HGInfoVO_FieldNumber_Sex,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(HGInfoVO__storage_, sex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "age",
        .dataTypeSpecific.className = NULL,
        .number = HGInfoVO_FieldNumber_Age,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(HGInfoVO__storage_, age),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "nativeplace",
        .dataTypeSpecific.className = NULL,
        .number = HGInfoVO_FieldNumber_Nativeplace,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(HGInfoVO__storage_, nativeplace),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serviceNum",
        .dataTypeSpecific.className = NULL,
        .number = HGInfoVO_FieldNumber_ServiceNum,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(HGInfoVO__storage_, serviceNum),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "companyName",
        .dataTypeSpecific.className = NULL,
        .number = HGInfoVO_FieldNumber_CompanyName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(HGInfoVO__storage_, companyName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hgNo",
        .dataTypeSpecific.className = NULL,
        .number = HGInfoVO_FieldNumber_HgNo,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(HGInfoVO__storage_, hgNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "language",
        .dataTypeSpecific.className = NULL,
        .number = HGInfoVO_FieldNumber_Language,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(HGInfoVO__storage_, language),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "exp",
        .dataTypeSpecific.className = NULL,
        .number = HGInfoVO_FieldNumber_Exp,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(HGInfoVO__storage_, exp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "goodAtProject",
        .dataTypeSpecific.className = NULL,
        .number = HGInfoVO_FieldNumber_GoodAtProject,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(HGInfoVO__storage_, goodAtProject),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "healthCertificate",
        .dataTypeSpecific.className = NULL,
        .number = HGInfoVO_FieldNumber_HealthCertificate,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(HGInfoVO__storage_, healthCertificate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nursingCertificate",
        .dataTypeSpecific.className = NULL,
        .number = HGInfoVO_FieldNumber_NursingCertificate,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(HGInfoVO__storage_, nursingCertificate),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serviceOrg",
        .dataTypeSpecific.className = NULL,
        .number = HGInfoVO_FieldNumber_ServiceOrg,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(HGInfoVO__storage_, serviceOrg),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "phone",
        .dataTypeSpecific.className = NULL,
        .number = HGInfoVO_FieldNumber_Phone,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(HGInfoVO__storage_, phone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[HGInfoVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(HGInfoVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\t\002\007\000\003\006\000\007\n\000\013\013\000\014\003A\000\017\r\000\020\021\000\021\022\000\022\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UserShield

@implementation UserShield

@dynamic id_p;
@dynamic userId;
@dynamic userName;
@dynamic phone;
@dynamic shieldType;
@dynamic shieldStatus;
@dynamic shieldStaffId;
@dynamic shieldStaffName;
@dynamic shieldTime;
@dynamic shieldTimeStr;

typedef struct UserShield__storage_ {
  uint32_t _has_storage_[1];
  uint32_t shieldType;
  int32_t shieldStatus;
  NSString *userName;
  NSString *phone;
  NSString *shieldStaffName;
  NSString *shieldTimeStr;
  uint64_t id_p;
  uint64_t userId;
  uint64_t shieldStaffId;
  uint64_t shieldTime;
} UserShield__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = UserShield_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UserShield__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = UserShield_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UserShield__storage_, userId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "userName",
        .dataTypeSpecific.className = NULL,
        .number = UserShield_FieldNumber_UserName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UserShield__storage_, userName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "phone",
        .dataTypeSpecific.className = NULL,
        .number = UserShield_FieldNumber_Phone,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UserShield__storage_, phone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "shieldType",
        .dataTypeSpecific.className = NULL,
        .number = UserShield_FieldNumber_ShieldType,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UserShield__storage_, shieldType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "shieldStatus",
        .dataTypeSpecific.className = NULL,
        .number = UserShield_FieldNumber_ShieldStatus,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UserShield__storage_, shieldStatus),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "shieldStaffId",
        .dataTypeSpecific.className = NULL,
        .number = UserShield_FieldNumber_ShieldStaffId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UserShield__storage_, shieldStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "shieldStaffName",
        .dataTypeSpecific.className = NULL,
        .number = UserShield_FieldNumber_ShieldStaffName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UserShield__storage_, shieldStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "shieldTime",
        .dataTypeSpecific.className = NULL,
        .number = UserShield_FieldNumber_ShieldTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UserShield__storage_, shieldTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "shieldTimeStr",
        .dataTypeSpecific.className = NULL,
        .number = UserShield_FieldNumber_ShieldTimeStr,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(UserShield__storage_, shieldTimeStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserShield class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UserShield__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\002\006\000\003\010\000\005\n\000\006\014\000\007\r\000\010\017\000\t\n\000\n\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - RefundPay

@implementation RefundPay

@dynamic id_p;
@dynamic orderId;
@dynamic cardNo;
@dynamic receiver;
@dynamic purpose;
@dynamic fee;
@dynamic refundStartTime;
@dynamic refundEndTime;
@dynamic refundStatus;
@dynamic resultCode;
@dynamic failureRemark;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic createTime;
@dynamic mac;

typedef struct RefundPay__storage_ {
  uint32_t _has_storage_[1];
  uint32_t refundStatus;
  NSString *orderId;
  NSString *cardNo;
  NSString *receiver;
  NSString *purpose;
  NSString *resultCode;
  NSString *failureRemark;
  NSString *createStaffName;
  NSString *mac;
  uint64_t id_p;
  uint64_t fee;
  uint64_t refundStartTime;
  uint64_t refundEndTime;
  uint64_t createStaffId;
  uint64_t createTime;
} RefundPay__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = RefundPay_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(RefundPay__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orderId",
        .dataTypeSpecific.className = NULL,
        .number = RefundPay_FieldNumber_OrderId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(RefundPay__storage_, orderId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "cardNo",
        .dataTypeSpecific.className = NULL,
        .number = RefundPay_FieldNumber_CardNo,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(RefundPay__storage_, cardNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "receiver",
        .dataTypeSpecific.className = NULL,
        .number = RefundPay_FieldNumber_Receiver,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(RefundPay__storage_, receiver),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "purpose",
        .dataTypeSpecific.className = NULL,
        .number = RefundPay_FieldNumber_Purpose,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(RefundPay__storage_, purpose),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fee",
        .dataTypeSpecific.className = NULL,
        .number = RefundPay_FieldNumber_Fee,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(RefundPay__storage_, fee),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "refundStartTime",
        .dataTypeSpecific.className = NULL,
        .number = RefundPay_FieldNumber_RefundStartTime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(RefundPay__storage_, refundStartTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "refundEndTime",
        .dataTypeSpecific.className = NULL,
        .number = RefundPay_FieldNumber_RefundEndTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(RefundPay__storage_, refundEndTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "refundStatus",
        .dataTypeSpecific.className = NULL,
        .number = RefundPay_FieldNumber_RefundStatus,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(RefundPay__storage_, refundStatus),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "resultCode",
        .dataTypeSpecific.className = NULL,
        .number = RefundPay_FieldNumber_ResultCode,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(RefundPay__storage_, resultCode),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "failureRemark",
        .dataTypeSpecific.className = NULL,
        .number = RefundPay_FieldNumber_FailureRemark,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(RefundPay__storage_, failureRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = RefundPay_FieldNumber_CreateStaffId,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(RefundPay__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = RefundPay_FieldNumber_CreateStaffName,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(RefundPay__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = RefundPay_FieldNumber_CreateTime,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(RefundPay__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "mac",
        .dataTypeSpecific.className = NULL,
        .number = RefundPay_FieldNumber_Mac,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(RefundPay__storage_, mac),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[RefundPay class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(RefundPay__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\n\002\007\000\003\005A\000\007\017\000\010\r\000\t\014\000\n\n\000\013\r\000\014\r\000\r\017\000\016\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - TjHgFeeDetailVO

@implementation TjHgFeeDetailVO

@dynamic orderId;
@dynamic settleTime;
@dynamic settleTimeStr;
@dynamic fee;
@dynamic feeStr;
@dynamic branchId;
@dynamic branchName;
@dynamic fullName;
@dynamic payTypeStr;
@dynamic payType;
@dynamic serviceType;
@dynamic serviceTypeStr;
@dynamic createName;
@dynamic createId;
@dynamic orgNo;

typedef struct TjHgFeeDetailVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t payType;
  uint32_t serviceType;
  NSString *orderId;
  NSString *settleTimeStr;
  NSString *feeStr;
  NSString *branchName;
  NSString *fullName;
  NSString *payTypeStr;
  NSString *serviceTypeStr;
  NSString *createName;
  NSString *orgNo;
  uint64_t settleTime;
  int64_t fee;
  uint64_t branchId;
  uint64_t createId;
} TjHgFeeDetailVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "orderId",
        .dataTypeSpecific.className = NULL,
        .number = TjHgFeeDetailVO_FieldNumber_OrderId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(TjHgFeeDetailVO__storage_, orderId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "settleTime",
        .dataTypeSpecific.className = NULL,
        .number = TjHgFeeDetailVO_FieldNumber_SettleTime,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(TjHgFeeDetailVO__storage_, settleTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "settleTimeStr",
        .dataTypeSpecific.className = NULL,
        .number = TjHgFeeDetailVO_FieldNumber_SettleTimeStr,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(TjHgFeeDetailVO__storage_, settleTimeStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fee",
        .dataTypeSpecific.className = NULL,
        .number = TjHgFeeDetailVO_FieldNumber_Fee,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(TjHgFeeDetailVO__storage_, fee),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "feeStr",
        .dataTypeSpecific.className = NULL,
        .number = TjHgFeeDetailVO_FieldNumber_FeeStr,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(TjHgFeeDetailVO__storage_, feeStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "branchId",
        .dataTypeSpecific.className = NULL,
        .number = TjHgFeeDetailVO_FieldNumber_BranchId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(TjHgFeeDetailVO__storage_, branchId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "branchName",
        .dataTypeSpecific.className = NULL,
        .number = TjHgFeeDetailVO_FieldNumber_BranchName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(TjHgFeeDetailVO__storage_, branchName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fullName",
        .dataTypeSpecific.className = NULL,
        .number = TjHgFeeDetailVO_FieldNumber_FullName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(TjHgFeeDetailVO__storage_, fullName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payTypeStr",
        .dataTypeSpecific.className = NULL,
        .number = TjHgFeeDetailVO_FieldNumber_PayTypeStr,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(TjHgFeeDetailVO__storage_, payTypeStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payType",
        .dataTypeSpecific.className = NULL,
        .number = TjHgFeeDetailVO_FieldNumber_PayType,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(TjHgFeeDetailVO__storage_, payType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "serviceType",
        .dataTypeSpecific.className = NULL,
        .number = TjHgFeeDetailVO_FieldNumber_ServiceType,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(TjHgFeeDetailVO__storage_, serviceType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "serviceTypeStr",
        .dataTypeSpecific.className = NULL,
        .number = TjHgFeeDetailVO_FieldNumber_ServiceTypeStr,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(TjHgFeeDetailVO__storage_, serviceTypeStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createName",
        .dataTypeSpecific.className = NULL,
        .number = TjHgFeeDetailVO_FieldNumber_CreateName,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(TjHgFeeDetailVO__storage_, createName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createId",
        .dataTypeSpecific.className = NULL,
        .number = TjHgFeeDetailVO_FieldNumber_CreateId,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(TjHgFeeDetailVO__storage_, createId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orgNo",
        .dataTypeSpecific.className = NULL,
        .number = TjHgFeeDetailVO_FieldNumber_OrgNo,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(TjHgFeeDetailVO__storage_, orgNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[TjHgFeeDetailVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(TjHgFeeDetailVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\016\001\007\000\002\n\000\003\r\000\005\006\000\006\010\000\007\n\000\010\010\000\t\n\000\n\007\000\013\013\000\014\016\000\r\n\000\016\010\000"
        "\017\004A\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PriceType

@implementation PriceType

@dynamic id_p;
@dynamic companyId;
@dynamic companyName;
@dynamic serviceType;
@dynamic serviceTypeName;
@dynamic state;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic createTime;
@dynamic createTimeStr;
@dynamic remarkType;

typedef struct PriceType__storage_ {
  uint32_t _has_storage_[1];
  uint32_t serviceType;
  uint32_t state;
  uint32_t remarkType;
  NSString *companyName;
  NSString *serviceTypeName;
  NSString *createStaffName;
  NSString *createTimeStr;
  uint64_t id_p;
  uint64_t companyId;
  uint64_t createStaffId;
  uint64_t createTime;
} PriceType__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = PriceType_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PriceType__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = PriceType_FieldNumber_CompanyId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PriceType__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "companyName",
        .dataTypeSpecific.className = NULL,
        .number = PriceType_FieldNumber_CompanyName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PriceType__storage_, companyName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serviceType",
        .dataTypeSpecific.className = NULL,
        .number = PriceType_FieldNumber_ServiceType,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PriceType__storage_, serviceType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "serviceTypeName",
        .dataTypeSpecific.className = NULL,
        .number = PriceType_FieldNumber_ServiceTypeName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PriceType__storage_, serviceTypeName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "state",
        .dataTypeSpecific.className = NULL,
        .number = PriceType_FieldNumber_State,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PriceType__storage_, state),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = PriceType_FieldNumber_CreateStaffId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PriceType__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = PriceType_FieldNumber_CreateStaffName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PriceType__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = PriceType_FieldNumber_CreateTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PriceType__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createTimeStr",
        .dataTypeSpecific.className = NULL,
        .number = PriceType_FieldNumber_CreateTimeStr,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PriceType__storage_, createTimeStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "remarkType",
        .dataTypeSpecific.className = NULL,
        .number = PriceType_FieldNumber_RemarkType,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PriceType__storage_, remarkType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PriceType class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PriceType__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\t\002\t\000\003\013\000\004\013\000\005\017\000\007\r\000\010\017\000\t\n\000\n\r\000\013\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - FeedBackVO

@implementation FeedBackVO

@dynamic hasFeedBack, feedBack;
@dynamic newTimeStr;
@dynamic replyStaffNameStr;

typedef struct FeedBackVO__storage_ {
  uint32_t _has_storage_[1];
  FeedBack *feedBack;
  NSString *newTimeStr;
  NSString *replyStaffNameStr;
} FeedBackVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "feedBack",
        .dataTypeSpecific.className = GPBStringifySymbol(FeedBack),
        .number = FeedBackVO_FieldNumber_FeedBack,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(FeedBackVO__storage_, feedBack),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "newTimeStr",
        .dataTypeSpecific.className = NULL,
        .number = FeedBackVO_FieldNumber_NewTimeStr,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(FeedBackVO__storage_, newTimeStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "replyStaffNameStr",
        .dataTypeSpecific.className = NULL,
        .number = FeedBackVO_FieldNumber_ReplyStaffNameStr,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(FeedBackVO__storage_, replyStaffNameStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[FeedBackVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(FeedBackVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\010\000\002\n\000\003\021\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UserSituationVO

@implementation UserSituationVO

@dynamic number;
@dynamic title;
@dynamic type;

typedef struct UserSituationVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t type;
  NSString *title;
  uint64_t number;
} UserSituationVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "number",
        .dataTypeSpecific.className = NULL,
        .number = UserSituationVO_FieldNumber_Number,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UserSituationVO__storage_, number),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "title",
        .dataTypeSpecific.className = NULL,
        .number = UserSituationVO_FieldNumber_Title,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UserSituationVO__storage_, title),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = UserSituationVO_FieldNumber_Type,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UserSituationVO__storage_, type),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserSituationVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UserSituationVO__storage_)
                                         flags:0];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UserSituationListVO

@implementation UserSituationListVO

@dynamic patientName;
@dynamic branchBed;
@dynamic admissionTimeStr;
@dynamic admissionTime;
@dynamic statusStr;
@dynamic status;
@dynamic notOrderUpdateStatus;
@dynamic orgNo;
@dynamic bedNo;
@dynamic branchName;
@dynamic newBranchName;

typedef struct UserSituationListVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t status;
  uint32_t notOrderUpdateStatus;
  NSString *patientName;
  NSString *branchBed;
  NSString *admissionTimeStr;
  NSString *statusStr;
  NSString *orgNo;
  NSString *bedNo;
  NSString *branchName;
  NSString *newBranchName;
  uint64_t admissionTime;
} UserSituationListVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "patientName",
        .dataTypeSpecific.className = NULL,
        .number = UserSituationListVO_FieldNumber_PatientName,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UserSituationListVO__storage_, patientName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "branchBed",
        .dataTypeSpecific.className = NULL,
        .number = UserSituationListVO_FieldNumber_BranchBed,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UserSituationListVO__storage_, branchBed),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "admissionTimeStr",
        .dataTypeSpecific.className = NULL,
        .number = UserSituationListVO_FieldNumber_AdmissionTimeStr,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UserSituationListVO__storage_, admissionTimeStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "admissionTime",
        .dataTypeSpecific.className = NULL,
        .number = UserSituationListVO_FieldNumber_AdmissionTime,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UserSituationListVO__storage_, admissionTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "statusStr",
        .dataTypeSpecific.className = NULL,
        .number = UserSituationListVO_FieldNumber_StatusStr,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(UserSituationListVO__storage_, statusStr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = UserSituationListVO_FieldNumber_Status,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(UserSituationListVO__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "notOrderUpdateStatus",
        .dataTypeSpecific.className = NULL,
        .number = UserSituationListVO_FieldNumber_NotOrderUpdateStatus,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(UserSituationListVO__storage_, notOrderUpdateStatus),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "orgNo",
        .dataTypeSpecific.className = NULL,
        .number = UserSituationListVO_FieldNumber_OrgNo,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(UserSituationListVO__storage_, orgNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bedNo",
        .dataTypeSpecific.className = NULL,
        .number = UserSituationListVO_FieldNumber_BedNo,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(UserSituationListVO__storage_, bedNo),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "branchName",
        .dataTypeSpecific.className = NULL,
        .number = UserSituationListVO_FieldNumber_BranchName,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(UserSituationListVO__storage_, branchName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "newBranchName",
        .dataTypeSpecific.className = NULL,
        .number = UserSituationListVO_FieldNumber_NewBranchName,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(UserSituationListVO__storage_, newBranchName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserSituationListVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UserSituationListVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\n\001\013\000\002\t\000\003\020\000\004\r\000\005\t\000\007\024\000\010\004A\000\t\004A\000\n\n\000\013\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OrderPraiseBigVO

@implementation OrderPraiseBigVO

@dynamic count;
@dynamic hgId;
@dynamic hgName;
@dynamic branchId;
@dynamic branchName;
@dynamic orgId;
@dynamic orgName;
@dynamic grade;
@dynamic average;
@dynamic hgPicURL;

typedef struct OrderPraiseBigVO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t count;
  NSString *hgName;
  NSString *branchName;
  NSString *orgName;
  NSString *hgPicURL;
  uint64_t hgId;
  uint64_t branchId;
  uint64_t orgId;
  uint64_t grade;
  double average;
} OrderPraiseBigVO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "count",
        .dataTypeSpecific.className = NULL,
        .number = OrderPraiseBigVO_FieldNumber_Count,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OrderPraiseBigVO__storage_, count),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "hgId",
        .dataTypeSpecific.className = NULL,
        .number = OrderPraiseBigVO_FieldNumber_HgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OrderPraiseBigVO__storage_, hgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "hgName",
        .dataTypeSpecific.className = NULL,
        .number = OrderPraiseBigVO_FieldNumber_HgName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OrderPraiseBigVO__storage_, hgName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "branchId",
        .dataTypeSpecific.className = NULL,
        .number = OrderPraiseBigVO_FieldNumber_BranchId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OrderPraiseBigVO__storage_, branchId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "branchName",
        .dataTypeSpecific.className = NULL,
        .number = OrderPraiseBigVO_FieldNumber_BranchName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OrderPraiseBigVO__storage_, branchName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "orgId",
        .dataTypeSpecific.className = NULL,
        .number = OrderPraiseBigVO_FieldNumber_OrgId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OrderPraiseBigVO__storage_, orgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "orgName",
        .dataTypeSpecific.className = NULL,
        .number = OrderPraiseBigVO_FieldNumber_OrgName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OrderPraiseBigVO__storage_, orgName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "grade",
        .dataTypeSpecific.className = NULL,
        .number = OrderPraiseBigVO_FieldNumber_Grade,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OrderPraiseBigVO__storage_, grade),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "average",
        .dataTypeSpecific.className = NULL,
        .number = OrderPraiseBigVO_FieldNumber_Average,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OrderPraiseBigVO__storage_, average),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "hgPicURL",
        .dataTypeSpecific.className = NULL,
        .number = OrderPraiseBigVO_FieldNumber_HgPicURL,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OrderPraiseBigVO__storage_, hgPicURL),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OrderPraiseBigVO class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OrderPraiseBigVO__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\002\004\000\003\006\000\004\010\000\005\n\000\006\005\000\007\007\000\n\006!!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - HGSign

@implementation HGSign

@dynamic id_p;
@dynamic hgId;
@dynamic hgName;
@dynamic phone;
@dynamic status;
@dynamic signPic;
@dynamic updateTime;
@dynamic createTime;

typedef struct HGSign__storage_ {
  uint32_t _has_storage_[1];
  uint32_t status;
  NSString *hgName;
  NSString *phone;
  NSString *signPic;
  uint64_t id_p;
  uint64_t hgId;
  uint64_t updateTime;
  uint64_t createTime;
} HGSign__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = HGSign_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(HGSign__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "hgId",
        .dataTypeSpecific.className = NULL,
        .number = HGSign_FieldNumber_HgId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(HGSign__storage_, hgId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "hgName",
        .dataTypeSpecific.className = NULL,
        .number = HGSign_FieldNumber_HgName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(HGSign__storage_, hgName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "phone",
        .dataTypeSpecific.className = NULL,
        .number = HGSign_FieldNumber_Phone,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(HGSign__storage_, phone),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = HGSign_FieldNumber_Status,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(HGSign__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "signPic",
        .dataTypeSpecific.className = NULL,
        .number = HGSign_FieldNumber_SignPic,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(HGSign__storage_, signPic),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "updateTime",
        .dataTypeSpecific.className = NULL,
        .number = HGSign_FieldNumber_UpdateTime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(HGSign__storage_, updateTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = HGSign_FieldNumber_CreateTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(HGSign__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[HGSign class]
                                     rootClass:[SaasModelRoot class]
                                          file:SaasModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(HGSign__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\002\004\000\003\006\000\006\007\000\007\n\000\010\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
