// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AssessModel.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "AssessModel.pbobjc.h"
 #import "CommonData.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - AssessModelRoot

@implementation AssessModelRoot

+ (GPBExtensionRegistry*)extensionRegistry {
  // This is called by +initialize so there is no need to worry
  // about thread safety and initialization of registry.
  static GPBExtensionRegistry* registry = nil;
  if (!registry) {
    GPBDebugCheckRuntimeVersion();
    registry = [[GPBExtensionRegistry alloc] init];
    [registry addExtensions:[CommonDataRoot extensionRegistry]];
  }
  return registry;
}

@end

#pragma mark - AssessModelRoot_FileDescriptor

static GPBFileDescriptor *AssessModelRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - InsureAssessResult

@implementation InsureAssessResult

@dynamic id_p;
@dynamic idcard;
@dynamic assessType;
@dynamic relation;
@dynamic assistIdcard;
@dynamic assistPhone;
@dynamic evaluationId;
@dynamic assessAddr;
@dynamic kinsSignPic;
@dynamic assessSignPic;
@dynamic level;
@dynamic abilityLevel;
@dynamic nurseLevel;
@dynamic illLevel;
@dynamic ssrsLevel;
@dynamic tendType;
@dynamic suggestServiceType;
@dynamic suggestServiceContentArray, suggestServiceContentArray_Count;
@dynamic suggestServiceContentOther;
@dynamic suggestServiceTime;
@dynamic specialRemark;
@dynamic status;
@dynamic kinsName;
@dynamic sex;
@dynamic nation;
@dynamic birthday;
@dynamic district;
@dynamic pic;
@dynamic province;
@dynamic city;
@dynamic marriage;
@dynamic dwelling;
@dynamic education;
@dynamic religion;
@dynamic professionType;
@dynamic incomeArray, incomeArray_Count;
@dynamic nurseType;
@dynamic childrenStatus1;
@dynamic childrenStatus2;
@dynamic housingType;
@dynamic infoChannelArray, infoChannelArray_Count;
@dynamic assessManArray, assessManArray_Count;
@dynamic createTime;
@dynamic confirmTime;
@dynamic fianlTime;
@dynamic createStaffId;
@dynamic createStaffName;
@dynamic dynamicDesc;
@dynamic lastTime;
@dynamic kinsId;
@dynamic assistSignPic;

typedef struct InsureAssessResult__storage_ {
  uint32_t _has_storage_[2];
  uint32_t level;
  uint32_t assessType;
  uint32_t abilityLevel;
  uint32_t nurseLevel;
  uint32_t illLevel;
  uint32_t ssrsLevel;
  uint32_t tendType;
  uint32_t suggestServiceType;
  uint32_t status;
  uint32_t sex;
  int32_t marriage;
  uint32_t dwelling;
  uint32_t education;
  uint32_t professionType;
  uint32_t nurseType;
  uint32_t childrenStatus1;
  uint32_t childrenStatus2;
  NSString *idcard;
  NSString *relation;
  NSString *assistIdcard;
  NSString *assistPhone;
  NSString *assessAddr;
  NSString *kinsSignPic;
  NSString *assessSignPic;
  NSMutableArray *suggestServiceContentArray;
  NSString *suggestServiceContentOther;
  NSString *suggestServiceTime;
  NSString *specialRemark;
  NSString *kinsName;
  NSString *nation;
  NSString *birthday;
  NSString *district;
  NSString *pic;
  NSString *province;
  NSString *city;
  NSString *religion;
  NSMutableArray *incomeArray;
  NSString *housingType;
  NSMutableArray *infoChannelArray;
  NSMutableArray *assessManArray;
  NSString *createStaffName;
  NSString *dynamicDesc;
  NSString *assistSignPic;
  uint64_t id_p;
  uint64_t evaluationId;
  uint64_t createTime;
  uint64_t confirmTime;
  uint64_t fianlTime;
  uint64_t createStaffId;
  uint64_t lastTime;
  uint64_t kinsId;
} InsureAssessResult__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "idcard",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_Idcard,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, idcard),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "level",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_Level,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, level),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "assessType",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_AssessType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, assessType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "relation",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_Relation,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, relation),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "assistIdcard",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_AssistIdcard,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, assistIdcard),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "assistPhone",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_AssistPhone,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, assistPhone),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "evaluationId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_EvaluationId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, evaluationId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "assessAddr",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_AssessAddr,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, assessAddr),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "kinsSignPic",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_KinsSignPic,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, kinsSignPic),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "assessSignPic",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_AssessSignPic,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, assessSignPic),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "abilityLevel",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_AbilityLevel,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, abilityLevel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "nurseLevel",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_NurseLevel,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, nurseLevel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "illLevel",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_IllLevel,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, illLevel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "ssrsLevel",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_SsrsLevel,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, ssrsLevel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "tendType",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_TendType,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, tendType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "suggestServiceType",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_SuggestServiceType,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, suggestServiceType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "suggestServiceContentArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_SuggestServiceContentArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, suggestServiceContentArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "suggestServiceContentOther",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_SuggestServiceContentOther,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, suggestServiceContentOther),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "suggestServiceTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_SuggestServiceTime,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, suggestServiceTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "specialRemark",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_SpecialRemark,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, specialRemark),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_Status,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "kinsName",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_KinsName,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, kinsName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sex",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_Sex,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, sex),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "nation",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_Nation,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, nation),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "birthday",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_Birthday,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, birthday),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "district",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_District,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, district),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pic",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_Pic,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, pic),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "province",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_Province,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, province),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "city",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_City,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, city),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "marriage",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_Marriage,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, marriage),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "dwelling",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_Dwelling,
        .hasIndex = 30,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, dwelling),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "education",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_Education,
        .hasIndex = 31,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, education),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "religion",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_Religion,
        .hasIndex = 32,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, religion),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "professionType",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_ProfessionType,
        .hasIndex = 33,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, professionType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "incomeArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_IncomeArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, incomeArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nurseType",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_NurseType,
        .hasIndex = 34,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, nurseType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "childrenStatus1",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_ChildrenStatus1,
        .hasIndex = 35,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, childrenStatus1),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "childrenStatus2",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_ChildrenStatus2,
        .hasIndex = 36,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, childrenStatus2),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "housingType",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_HousingType,
        .hasIndex = 37,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, housingType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "infoChannelArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_InfoChannelArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, infoChannelArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "assessManArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_AssessManArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, assessManArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_CreateTime,
        .hasIndex = 38,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "confirmTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_ConfirmTime,
        .hasIndex = 39,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, confirmTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "fianlTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_FianlTime,
        .hasIndex = 40,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, fianlTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_CreateStaffId,
        .hasIndex = 41,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_CreateStaffName,
        .hasIndex = 42,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "dynamicDesc",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_DynamicDesc,
        .hasIndex = 43,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, dynamicDesc),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "lastTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_LastTime,
        .hasIndex = 44,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, lastTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "kinsId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_KinsId,
        .hasIndex = 45,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, kinsId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "assistSignPic",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessResult_FieldNumber_AssistSignPic,
        .hasIndex = 46,
        .offset = (uint32_t)offsetof(InsureAssessResult__storage_, assistSignPic),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureAssessResult class]
                                     rootClass:[AssessModelRoot class]
                                          file:AssessModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureAssessResult__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\"\004\n\000\006\014\000\007\013\000\010\014\000\t\n\000\n\013\000\013\r\000\014\014\000\r\n\000\016\010\000\017\t\000\020\010\000\021\022\000"
        "\022\000suggestServiceContent\000\023\032\000\024\022\000\025\r\000\027\010\000#\016\000%"
        "\t\000&\017\000\'\017\000(\013\000)\000infoChannel\000*\000assessMan\000+\n\000"
        ",\013\000-\t\000.\r\000/\017\0000\013\0001\010\0002\006\0003\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureAssessAbility

@implementation InsureAssessAbility

@dynamic id_p;
@dynamic resultId;
@dynamic level;
@dynamic adlLevel;
@dynamic adlScore;
@dynamic mindLevel;
@dynamic mindScore;
@dynamic commLevel;
@dynamic commScore;
@dynamic socialLevel;
@dynamic socialScore;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;

typedef struct InsureAssessAbility__storage_ {
  uint32_t _has_storage_[1];
  uint32_t level;
  uint32_t adlLevel;
  uint32_t adlScore;
  uint32_t mindLevel;
  uint32_t mindScore;
  uint32_t commLevel;
  uint32_t commScore;
  uint32_t socialLevel;
  uint32_t socialScore;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t resultId;
  uint64_t createTime;
  uint64_t createStaffId;
} InsureAssessAbility__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbility_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureAssessAbility__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "resultId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbility_FieldNumber_ResultId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureAssessAbility__storage_, resultId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "level",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbility_FieldNumber_Level,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureAssessAbility__storage_, level),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "adlLevel",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbility_FieldNumber_AdlLevel,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureAssessAbility__storage_, adlLevel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "adlScore",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbility_FieldNumber_AdlScore,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureAssessAbility__storage_, adlScore),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "mindLevel",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbility_FieldNumber_MindLevel,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureAssessAbility__storage_, mindLevel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "mindScore",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbility_FieldNumber_MindScore,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InsureAssessAbility__storage_, mindScore),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "commLevel",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbility_FieldNumber_CommLevel,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(InsureAssessAbility__storage_, commLevel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "commScore",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbility_FieldNumber_CommScore,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(InsureAssessAbility__storage_, commScore),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "socialLevel",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbility_FieldNumber_SocialLevel,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(InsureAssessAbility__storage_, socialLevel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "socialScore",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbility_FieldNumber_SocialScore,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(InsureAssessAbility__storage_, socialScore),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbility_FieldNumber_CreateTime,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(InsureAssessAbility__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbility_FieldNumber_CreateStaffId,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(InsureAssessAbility__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbility_FieldNumber_CreateStaffName,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(InsureAssessAbility__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureAssessAbility class]
                                     rootClass:[AssessModelRoot class]
                                          file:AssessModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureAssessAbility__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\014\002\010\000\004\010\000\005\010\000\006\t\000\007\t\000\010\t\000\t\t\000\n\013\000\013\013\000\014\n\000\r\r\000\016\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureAssessAbilityADL

@implementation InsureAssessAbilityADL

@dynamic id_p;
@dynamic resultId;
@dynamic score;
@dynamic level;
@dynamic eat;
@dynamic water;
@dynamic face;
@dynamic wear;
@dynamic faec;
@dynamic pee;
@dynamic toilet;
@dynamic carry;
@dynamic walk;
@dynamic stair;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;

typedef struct InsureAssessAbilityADL__storage_ {
  uint32_t _has_storage_[1];
  uint32_t score;
  uint32_t level;
  uint32_t eat;
  uint32_t water;
  uint32_t face;
  uint32_t wear;
  uint32_t faec;
  uint32_t pee;
  uint32_t toilet;
  uint32_t carry;
  uint32_t walk;
  uint32_t stair;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t resultId;
  uint64_t createTime;
  uint64_t createStaffId;
} InsureAssessAbilityADL__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityADL_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureAssessAbilityADL__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "resultId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityADL_FieldNumber_ResultId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureAssessAbilityADL__storage_, resultId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "score",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityADL_FieldNumber_Score,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureAssessAbilityADL__storage_, score),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "level",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityADL_FieldNumber_Level,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureAssessAbilityADL__storage_, level),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "eat",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityADL_FieldNumber_Eat,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureAssessAbilityADL__storage_, eat),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "water",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityADL_FieldNumber_Water,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureAssessAbilityADL__storage_, water),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "face",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityADL_FieldNumber_Face,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InsureAssessAbilityADL__storage_, face),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "wear",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityADL_FieldNumber_Wear,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(InsureAssessAbilityADL__storage_, wear),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "faec",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityADL_FieldNumber_Faec,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(InsureAssessAbilityADL__storage_, faec),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "pee",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityADL_FieldNumber_Pee,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(InsureAssessAbilityADL__storage_, pee),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "toilet",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityADL_FieldNumber_Toilet,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(InsureAssessAbilityADL__storage_, toilet),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "carry",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityADL_FieldNumber_Carry,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(InsureAssessAbilityADL__storage_, carry),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "walk",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityADL_FieldNumber_Walk,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(InsureAssessAbilityADL__storage_, walk),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "stair",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityADL_FieldNumber_Stair,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(InsureAssessAbilityADL__storage_, stair),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityADL_FieldNumber_CreateTime,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(InsureAssessAbilityADL__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityADL_FieldNumber_CreateStaffId,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(InsureAssessAbilityADL__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityADL_FieldNumber_CreateStaffName,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(InsureAssessAbilityADL__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureAssessAbilityADL class]
                                     rootClass:[AssessModelRoot class]
                                          file:AssessModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureAssessAbilityADL__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\002\010\000\017\n\000\020\r\000\021\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureAssessAbilityMind

@implementation InsureAssessAbilityMind

@dynamic id_p;
@dynamic resultId;
@dynamic score;
@dynamic level;
@dynamic cognitive;
@dynamic attack;
@dynamic depressed;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;

typedef struct InsureAssessAbilityMind__storage_ {
  uint32_t _has_storage_[1];
  uint32_t score;
  uint32_t level;
  uint32_t cognitive;
  uint32_t attack;
  uint32_t depressed;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t resultId;
  uint64_t createTime;
  uint64_t createStaffId;
} InsureAssessAbilityMind__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityMind_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureAssessAbilityMind__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "resultId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityMind_FieldNumber_ResultId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureAssessAbilityMind__storage_, resultId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "score",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityMind_FieldNumber_Score,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureAssessAbilityMind__storage_, score),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "level",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityMind_FieldNumber_Level,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureAssessAbilityMind__storage_, level),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "cognitive",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityMind_FieldNumber_Cognitive,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureAssessAbilityMind__storage_, cognitive),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "attack",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityMind_FieldNumber_Attack,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureAssessAbilityMind__storage_, attack),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "depressed",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityMind_FieldNumber_Depressed,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InsureAssessAbilityMind__storage_, depressed),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityMind_FieldNumber_CreateTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(InsureAssessAbilityMind__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityMind_FieldNumber_CreateStaffId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(InsureAssessAbilityMind__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityMind_FieldNumber_CreateStaffName,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(InsureAssessAbilityMind__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureAssessAbilityMind class]
                                     rootClass:[AssessModelRoot class]
                                          file:AssessModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureAssessAbilityMind__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\002\010\000\010\n\000\t\r\000\n\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureAssessAbilityComm

@implementation InsureAssessAbilityComm

@dynamic id_p;
@dynamic resultId;
@dynamic score;
@dynamic level;
@dynamic mentality;
@dynamic vision;
@dynamic hearing;
@dynamic communication;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;

typedef struct InsureAssessAbilityComm__storage_ {
  uint32_t _has_storage_[1];
  uint32_t score;
  uint32_t level;
  uint32_t mentality;
  uint32_t vision;
  uint32_t hearing;
  uint32_t communication;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t resultId;
  uint64_t createTime;
  uint64_t createStaffId;
} InsureAssessAbilityComm__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityComm_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureAssessAbilityComm__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "resultId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityComm_FieldNumber_ResultId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureAssessAbilityComm__storage_, resultId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "score",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityComm_FieldNumber_Score,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureAssessAbilityComm__storage_, score),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "level",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityComm_FieldNumber_Level,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureAssessAbilityComm__storage_, level),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "mentality",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityComm_FieldNumber_Mentality,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureAssessAbilityComm__storage_, mentality),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "vision",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityComm_FieldNumber_Vision,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureAssessAbilityComm__storage_, vision),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "hearing",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityComm_FieldNumber_Hearing,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InsureAssessAbilityComm__storage_, hearing),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "communication",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityComm_FieldNumber_Communication,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(InsureAssessAbilityComm__storage_, communication),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityComm_FieldNumber_CreateTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(InsureAssessAbilityComm__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityComm_FieldNumber_CreateStaffId,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(InsureAssessAbilityComm__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilityComm_FieldNumber_CreateStaffName,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(InsureAssessAbilityComm__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureAssessAbilityComm class]
                                     rootClass:[AssessModelRoot class]
                                          file:AssessModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureAssessAbilityComm__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\002\010\000\t\n\000\n\r\000\013\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureAssessAbilitySocial

@implementation InsureAssessAbilitySocial

@dynamic id_p;
@dynamic resultId;
@dynamic score;
@dynamic level;
@dynamic viability;
@dynamic workAbility;
@dynamic timeSpace;
@dynamic personal;
@dynamic socialSkills;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;

typedef struct InsureAssessAbilitySocial__storage_ {
  uint32_t _has_storage_[1];
  uint32_t score;
  uint32_t level;
  uint32_t viability;
  uint32_t workAbility;
  uint32_t timeSpace;
  uint32_t personal;
  uint32_t socialSkills;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t resultId;
  uint64_t createTime;
  uint64_t createStaffId;
} InsureAssessAbilitySocial__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilitySocial_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureAssessAbilitySocial__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "resultId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilitySocial_FieldNumber_ResultId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureAssessAbilitySocial__storage_, resultId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "score",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilitySocial_FieldNumber_Score,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureAssessAbilitySocial__storage_, score),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "level",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilitySocial_FieldNumber_Level,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureAssessAbilitySocial__storage_, level),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "viability",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilitySocial_FieldNumber_Viability,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureAssessAbilitySocial__storage_, viability),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "workAbility",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilitySocial_FieldNumber_WorkAbility,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureAssessAbilitySocial__storage_, workAbility),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "timeSpace",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilitySocial_FieldNumber_TimeSpace,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InsureAssessAbilitySocial__storage_, timeSpace),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "personal",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilitySocial_FieldNumber_Personal,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(InsureAssessAbilitySocial__storage_, personal),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "socialSkills",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilitySocial_FieldNumber_SocialSkills,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(InsureAssessAbilitySocial__storage_, socialSkills),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilitySocial_FieldNumber_CreateTime,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(InsureAssessAbilitySocial__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilitySocial_FieldNumber_CreateStaffId,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(InsureAssessAbilitySocial__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessAbilitySocial_FieldNumber_CreateStaffName,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(InsureAssessAbilitySocial__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureAssessAbilitySocial class]
                                     rootClass:[AssessModelRoot class]
                                          file:AssessModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureAssessAbilitySocial__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\002\010\000\006\013\000\007\t\000\t\014\000\n\n\000\013\r\000\014\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureAssessNurse

@implementation InsureAssessNurse

@dynamic id_p;
@dynamic resultId;
@dynamic level;
@dynamic baseNurse;
@dynamic commonNurse;
@dynamic rehaNurse;
@dynamic specialNurseArray, specialNurseArray_Count;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;

typedef struct InsureAssessNurse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t level;
  uint32_t baseNurse;
  uint32_t commonNurse;
  uint32_t rehaNurse;
  NSMutableArray *specialNurseArray;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t resultId;
  uint64_t createTime;
  uint64_t createStaffId;
} InsureAssessNurse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessNurse_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureAssessNurse__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "resultId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessNurse_FieldNumber_ResultId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureAssessNurse__storage_, resultId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "level",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessNurse_FieldNumber_Level,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureAssessNurse__storage_, level),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "baseNurse",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessNurse_FieldNumber_BaseNurse,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureAssessNurse__storage_, baseNurse),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "commonNurse",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessNurse_FieldNumber_CommonNurse,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureAssessNurse__storage_, commonNurse),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "rehaNurse",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessNurse_FieldNumber_RehaNurse,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureAssessNurse__storage_, rehaNurse),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "specialNurseArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessNurse_FieldNumber_SpecialNurseArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureAssessNurse__storage_, specialNurseArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessNurse_FieldNumber_CreateTime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InsureAssessNurse__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessNurse_FieldNumber_CreateStaffId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(InsureAssessNurse__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessNurse_FieldNumber_CreateStaffName,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(InsureAssessNurse__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureAssessNurse class]
                                     rootClass:[AssessModelRoot class]
                                          file:AssessModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureAssessNurse__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\002\010\000\004\t\000\005\013\000\006\t\000\007\000specialNurse\000\010\n\000\t\r\000\n\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureAssessIll

@implementation InsureAssessIll

@dynamic id_p;
@dynamic resultId;
@dynamic level;
@dynamic angiocarpyArray, angiocarpyArray_Count;
@dynamic angiocarpyOther;
@dynamic breatheArray, breatheArray_Count;
@dynamic breatheOther;
@dynamic metabolismArray, metabolismArray_Count;
@dynamic metabolismOther;
@dynamic digestionArray, digestionArray_Count;
@dynamic digestionOther;
@dynamic jointArray, jointArray_Count;
@dynamic jointOther;
@dynamic nerveArray, nerveArray_Count;
@dynamic nerveOther;
@dynamic urinaryArray, urinaryArray_Count;
@dynamic urinaryOther;
@dynamic bloodArray, bloodArray_Count;
@dynamic bloodOther;
@dynamic otherArray, otherArray_Count;
@dynamic secondIllArray, secondIllArray_Count;
@dynamic secondIllOther;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;

typedef struct InsureAssessIll__storage_ {
  uint32_t _has_storage_[1];
  uint32_t level;
  NSMutableArray *angiocarpyArray;
  NSString *angiocarpyOther;
  NSMutableArray *breatheArray;
  NSString *breatheOther;
  NSMutableArray *metabolismArray;
  NSString *metabolismOther;
  NSMutableArray *digestionArray;
  NSString *digestionOther;
  NSMutableArray *jointArray;
  NSString *jointOther;
  NSMutableArray *nerveArray;
  NSString *nerveOther;
  NSMutableArray *urinaryArray;
  NSString *urinaryOther;
  NSMutableArray *bloodArray;
  NSString *bloodOther;
  NSMutableArray *otherArray;
  NSMutableArray *secondIllArray;
  NSString *secondIllOther;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t resultId;
  uint64_t createTime;
  uint64_t createStaffId;
} InsureAssessIll__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "resultId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_ResultId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, resultId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "level",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_Level,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, level),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "angiocarpyArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_AngiocarpyArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, angiocarpyArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "angiocarpyOther",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_AngiocarpyOther,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, angiocarpyOther),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "breatheArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_BreatheArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, breatheArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "breatheOther",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_BreatheOther,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, breatheOther),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "metabolismArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_MetabolismArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, metabolismArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "metabolismOther",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_MetabolismOther,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, metabolismOther),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "digestionArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_DigestionArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, digestionArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "digestionOther",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_DigestionOther,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, digestionOther),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "jointArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_JointArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, jointArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "jointOther",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_JointOther,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, jointOther),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nerveArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_NerveArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, nerveArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nerveOther",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_NerveOther,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, nerveOther),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "urinaryArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_UrinaryArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, urinaryArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "urinaryOther",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_UrinaryOther,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, urinaryOther),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bloodArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_BloodArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, bloodArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bloodOther",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_BloodOther,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, bloodOther),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "otherArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_OtherArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, otherArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "secondIllArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_SecondIllArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, secondIllArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "secondIllOther",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_SecondIllOther,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, secondIllOther),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_CreateTime,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_CreateStaffId,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessIll_FieldNumber_CreateStaffName,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(InsureAssessIll__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureAssessIll class]
                                     rootClass:[AssessModelRoot class]
                                          file:AssessModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureAssessIll__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\016\002\010\000\005\017\000\007\014\000\t\017\000\013\016\000\r\n\000\017\n\000\021\014\000\023\n\000\025\000secondIll\000"
        "\026\016\000\027\n\000\030\r\000\031\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureAssessSSRS

@implementation InsureAssessSSRS

@dynamic id_p;
@dynamic resultId;
@dynamic score;
@dynamic level;
@dynamic friends;
@dynamic liveStatus;
@dynamic neighbor;
@dynamic colleague;
@dynamic familySpouse;
@dynamic familyParent;
@dynamic familyChild;
@dynamic familySibling;
@dynamic familyOther;
@dynamic helpChannelArray, helpChannelArray_Count;
@dynamic helpChannelOther;
@dynamic careChannelArray, careChannelArray_Count;
@dynamic careChannelOther;
@dynamic pourWay;
@dynamic helpWay;
@dynamic publicActivity;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;

typedef struct InsureAssessSSRS__storage_ {
  uint32_t _has_storage_[1];
  uint32_t score;
  uint32_t level;
  uint32_t friends;
  uint32_t liveStatus;
  uint32_t neighbor;
  uint32_t colleague;
  uint32_t familySpouse;
  uint32_t familyParent;
  uint32_t familyChild;
  uint32_t familySibling;
  uint32_t familyOther;
  uint32_t pourWay;
  uint32_t helpWay;
  uint32_t publicActivity;
  NSMutableArray *helpChannelArray;
  NSString *helpChannelOther;
  NSMutableArray *careChannelArray;
  NSString *careChannelOther;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t resultId;
  uint64_t createTime;
  uint64_t createStaffId;
} InsureAssessSSRS__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "resultId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_ResultId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, resultId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "score",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_Score,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, score),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "level",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_Level,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, level),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "friends",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_Friends,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, friends),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "liveStatus",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_LiveStatus,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, liveStatus),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "neighbor",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_Neighbor,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, neighbor),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "colleague",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_Colleague,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, colleague),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "familySpouse",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_FamilySpouse,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, familySpouse),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "familyParent",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_FamilyParent,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, familyParent),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "familyChild",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_FamilyChild,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, familyChild),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "familySibling",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_FamilySibling,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, familySibling),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "familyOther",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_FamilyOther,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, familyOther),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "helpChannelArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_HelpChannelArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, helpChannelArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "helpChannelOther",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_HelpChannelOther,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, helpChannelOther),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "careChannelArray",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_CareChannelArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, careChannelArray),
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "careChannelOther",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_CareChannelOther,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, careChannelOther),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pourWay",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_PourWay,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, pourWay),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "helpWay",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_HelpWay,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, helpWay),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "publicActivity",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_PublicActivity,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, publicActivity),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_CreateTime,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_CreateStaffId,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessSSRS_FieldNumber_CreateStaffName,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(InsureAssessSSRS__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureAssessSSRS class]
                                     rootClass:[AssessModelRoot class]
                                          file:AssessModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureAssessSSRS__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\021\002\010\000\006\n\000\t\014\000\n\014\000\013\013\000\014\r\000\r\013\000\016\000helpChannel\000\017\020\000\020"
        "\000careChannel\000\021\020\000\022\007\000\023\007\000\024\016\000\025\n\000\026\r\000\027\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - InsureAssessTend

@implementation InsureAssessTend

@dynamic id_p;
@dynamic resultId;
@dynamic desireChannel;
@dynamic tendType;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;

typedef struct InsureAssessTend__storage_ {
  uint32_t _has_storage_[1];
  uint32_t desireChannel;
  uint32_t tendType;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t resultId;
  uint64_t createTime;
  uint64_t createStaffId;
} InsureAssessTend__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessTend_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InsureAssessTend__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "resultId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessTend_FieldNumber_ResultId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InsureAssessTend__storage_, resultId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "desireChannel",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessTend_FieldNumber_DesireChannel,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InsureAssessTend__storage_, desireChannel),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "tendType",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessTend_FieldNumber_TendType,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InsureAssessTend__storage_, tendType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessTend_FieldNumber_CreateTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InsureAssessTend__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessTend_FieldNumber_CreateStaffId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InsureAssessTend__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = InsureAssessTend_FieldNumber_CreateStaffName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InsureAssessTend__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[InsureAssessTend class]
                                     rootClass:[AssessModelRoot class]
                                          file:AssessModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InsureAssessTend__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\002\010\000\003\r\000\004\010\000\005\n\000\006\r\000\007\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - EvaluationModel

@implementation EvaluationModel

@dynamic id_p;
@dynamic evalName;
@dynamic companyId;
@dynamic province;
@dynamic city;
@dynamic cityCode;
@dynamic district;
@dynamic adCode;
@dynamic street;
@dynamic building;
@dynamic addrDetail;
@dynamic gpsType;
@dynamic lng;
@dynamic lat;
@dynamic createTime;
@dynamic createStaffId;
@dynamic createStaffName;

typedef struct EvaluationModel__storage_ {
  uint32_t _has_storage_[1];
  uint32_t gpsType;
  NSString *evalName;
  NSString *province;
  NSString *city;
  NSString *cityCode;
  NSString *district;
  NSString *adCode;
  NSString *street;
  NSString *building;
  NSString *addrDetail;
  NSString *createStaffName;
  uint64_t id_p;
  uint64_t companyId;
  double lng;
  double lat;
  uint64_t createTime;
  uint64_t createStaffId;
} EvaluationModel__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = EvaluationModel_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(EvaluationModel__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "evalName",
        .dataTypeSpecific.className = NULL,
        .number = EvaluationModel_FieldNumber_EvalName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(EvaluationModel__storage_, evalName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "companyId",
        .dataTypeSpecific.className = NULL,
        .number = EvaluationModel_FieldNumber_CompanyId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(EvaluationModel__storage_, companyId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "province",
        .dataTypeSpecific.className = NULL,
        .number = EvaluationModel_FieldNumber_Province,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(EvaluationModel__storage_, province),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "city",
        .dataTypeSpecific.className = NULL,
        .number = EvaluationModel_FieldNumber_City,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(EvaluationModel__storage_, city),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "cityCode",
        .dataTypeSpecific.className = NULL,
        .number = EvaluationModel_FieldNumber_CityCode,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(EvaluationModel__storage_, cityCode),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "district",
        .dataTypeSpecific.className = NULL,
        .number = EvaluationModel_FieldNumber_District,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(EvaluationModel__storage_, district),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "adCode",
        .dataTypeSpecific.className = NULL,
        .number = EvaluationModel_FieldNumber_AdCode,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(EvaluationModel__storage_, adCode),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "street",
        .dataTypeSpecific.className = NULL,
        .number = EvaluationModel_FieldNumber_Street,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(EvaluationModel__storage_, street),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "building",
        .dataTypeSpecific.className = NULL,
        .number = EvaluationModel_FieldNumber_Building,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(EvaluationModel__storage_, building),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "addrDetail",
        .dataTypeSpecific.className = NULL,
        .number = EvaluationModel_FieldNumber_AddrDetail,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(EvaluationModel__storage_, addrDetail),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "gpsType",
        .dataTypeSpecific.className = NULL,
        .number = EvaluationModel_FieldNumber_GpsType,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(EvaluationModel__storage_, gpsType),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "lng",
        .dataTypeSpecific.className = NULL,
        .number = EvaluationModel_FieldNumber_Lng,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(EvaluationModel__storage_, lng),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "lat",
        .dataTypeSpecific.className = NULL,
        .number = EvaluationModel_FieldNumber_Lat,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(EvaluationModel__storage_, lat),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "createTime",
        .dataTypeSpecific.className = NULL,
        .number = EvaluationModel_FieldNumber_CreateTime,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(EvaluationModel__storage_, createTime),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffId",
        .dataTypeSpecific.className = NULL,
        .number = EvaluationModel_FieldNumber_CreateStaffId,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(EvaluationModel__storage_, createStaffId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "createStaffName",
        .dataTypeSpecific.className = NULL,
        .number = EvaluationModel_FieldNumber_CreateStaffName,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(EvaluationModel__storage_, createStaffName),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[EvaluationModel class]
                                     rootClass:[AssessModelRoot class]
                                          file:AssessModelRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(EvaluationModel__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\t\002\010\000\003\t\000\006\010\000\010\006\000\013\n\000\014\007\000\017\n\000\020\r\000\021\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
