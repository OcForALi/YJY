// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Comm.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum NET_TYPE

///*
/// 网络类型
typedef GPB_ENUM(NET_TYPE) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  NET_TYPE_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  NET_TYPE_UnDetect = 0,
  NET_TYPE_Wifi = 1,
  NET_TYPE_Cmwap = 2,
  NET_TYPE_Cmnet = 3,
  NET_TYPE_Uniwap = 4,
  NET_TYPE_Uninet = 5,
  NET_TYPE_Wap3G = 6,
  NET_TYPE_Net3G = 7,
  NET_TYPE_Ctwap = 8,
  NET_TYPE_Ctnet = 9,
  NET_TYPE_Unknown = 10,
  NET_TYPE_UnknowWap = 11,
  NET_TYPE_NoNetwork = 12,
  NET_TYPE_NetworkTypeLte = 13,
};

GPBEnumDescriptor *NET_TYPE_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL NET_TYPE_IsValidValue(int32_t value);

#pragma mark - CommRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface CommRoot : GPBRootObject
@end

#pragma mark - Terminal

typedef GPB_ENUM(Terminal_FieldNumber) {
  Terminal_FieldNumber_Imei = 1,
  Terminal_FieldNumber_Imei2 = 2,
  Terminal_FieldNumber_Mac = 3,
  Terminal_FieldNumber_Imsi = 4,
  Terminal_FieldNumber_Imsi2 = 5,
  Terminal_FieldNumber_Androidid = 6,
  Terminal_FieldNumber_Adid = 7,
  Terminal_FieldNumber_Channelid = 8,
};

@interface Terminal : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *imei;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imei2;

@property(nonatomic, readwrite, copy, null_resettable) NSString *mac;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imsi;

@property(nonatomic, readwrite, copy, null_resettable) NSString *imsi2;

@property(nonatomic, readwrite, copy, null_resettable) NSString *androidid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *adid;

///标识平台， "android"-安卓设备，"apple"-苹果设备
@property(nonatomic, readwrite, copy, null_resettable) NSString *channelid;

@end

#pragma mark - YUA

typedef GPB_ENUM(YUA_FieldNumber) {
  YUA_FieldNumber_SoftName = 1,
  YUA_FieldNumber_Version = 2,
  YUA_FieldNumber_BuildNo = 3,
  YUA_FieldNumber_VersionName = 4,
  YUA_FieldNumber_Platform = 5,
  YUA_FieldNumber_Osversion = 6,
  YUA_FieldNumber_Width = 7,
  YUA_FieldNumber_Height = 8,
  YUA_FieldNumber_Size = 9,
  YUA_FieldNumber_DeviceName = 10,
  YUA_FieldNumber_Channel = 11,
};

@interface YUA : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *softName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *version;

@property(nonatomic, readwrite, copy, null_resettable) NSString *buildNo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *versionName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *platform;

@property(nonatomic, readwrite, copy, null_resettable) NSString *osversion;

@property(nonatomic, readwrite) uint32_t width;

@property(nonatomic, readwrite) uint32_t height;

@property(nonatomic, readwrite) double size;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *channel;

@end

#pragma mark - PkgInfo

typedef GPB_ENUM(PkgInfo_FieldNumber) {
  PkgInfo_FieldNumber_PkgName = 1,
  PkgInfo_FieldNumber_SignInfo = 2,
};

@interface PkgInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *pkgName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signInfo;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
